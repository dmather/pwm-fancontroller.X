

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Sun Jul 17 01:17:41 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	smallconst
    33  000800                     __psmallconst:
    34                           	opt stack 0
    35  000800  00                 	db	0
    36  000801                     _ADC_RESOLUTION:
    37                           	opt stack 0
    38  000801  00                 	db	0
    39  000802  A0                 	db	160
    40  000803  3B                 	db	59
    41  000804                     __end_of_ADC_RESOLUTION:
    42                           	opt stack 0
    43  000804                     _MAX_TEMP:
    44                           	opt stack 0
    45  000804  00                 	db	0
    46  000805  0C                 	db	12
    47  000806  42                 	db	66
    48  000807                     __end_of_MAX_TEMP:
    49                           	opt stack 0
    50  000807                     _MIN_TEMP:
    51                           	opt stack 0
    52  000807  00                 	db	0
    53  000808  90                 	db	144
    54  000809  41                 	db	65
    55  00080A                     __end_of_MIN_TEMP:
    56                           	opt stack 0
    57  00080A                     _MAX_DUTY_CYCLE:
    58                           	opt stack 0
    59  00080A  00FF               	dw	255
    60  00080C                     __end_of_MAX_DUTY_CYCLE:
    61                           	opt stack 0
    62  00080C                     _MIN_DUTY_CYCLE:
    63                           	opt stack 0
    64  00080C  000F               	dw	15
    65  00080E                     __end_of_MIN_DUTY_CYCLE:
    66                           	opt stack 0
    67  00080E                     log@coeff:
    68                           	opt stack 0
    69  00080E  00                 	db	0
    70  00080F  00                 	db	0
    71  000810  00                 	db	0
    72  000811  00                 	db	0
    73  000812  80                 	db	128
    74  000813  3F                 	db	63
    75  000814  F0                 	db	240
    76  000815  FF                 	db	255
    77  000816  BE                 	db	190
    78  000817  E2                 	db	226
    79  000818  A9                 	db	169
    80  000819  3E                 	db	62
    81  00081A  83                 	db	131
    82  00081B  76                 	db	118
    83  00081C  BE                 	db	190
    84  00081D  AE                 	db	174
    85  00081E  2B                 	db	43
    86  00081F  3E                 	db	62
    87  000820  3C                 	db	60
    88  000821  C3                 	db	195
    89  000822  BD                 	db	189
    90  000823  D2                 	db	210
    91  000824  13                 	db	19
    92  000825  3D                 	db	61
    93  000826  78                 	db	120
    94  000827  D3                 	db	211
    95  000828  BB                 	db	187
    96  000829                     __end_oflog@coeff:
    97                           	opt stack 0
    98  0000                     _ADCON0bits	set	4034
    99  0000                     _ADCON1bits	set	4033
   100  0000                     _ADCON2bits	set	4032
   101  0000                     _ADRESH	set	4036
   102  0000                     _ADRESL	set	4035
   103  0000                     _ANSELAbits	set	3931
   104  0000                     _CCP1CON	set	4029
   105  0000                     _CCPR1L	set	4030
   106  0000                     _PR2	set	4027
   107  0000                     _T2CON	set	4026
   108  0000                     _TRISAbits	set	3986
   109  0000                     _TRISCbits	set	3988
   110                           
   111                           ; #config settings
   112  000829  00                 	db	0	; dummy byte at the end
   113  0000                     
   114                           	psect	cinit
   115  001564                     __pcinit:
   116                           	opt stack 0
   117  001564                     start_initialization:
   118                           	opt stack 0
   119  001564                     __initialization:
   120                           	opt stack 0
   121                           
   122                           ; Clear objects allocated to COMRAM (2 bytes)
   123  001564  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   124  001566  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   125  001568                     end_of_initialization:
   126                           	opt stack 0
   127  001568                     __end_of__initialization:
   128                           	opt stack 0
   129  001568  0E00               	movlw	low (__Lmediumconst shr (0+16))
   130  00156A  6EF8               	movwf	tblptru,c
   131  00156C  0100               	movlb	0
   132  00156E  EF1B  F00A         	goto	_main	;jump to C main() function
   133                           tblptru	equ	0xFF8
   134                           
   135                           	psect	bssCOMRAM
   136  00005A                     __pbssCOMRAM:
   137                           	opt stack 0
   138  00005A                     _errno:
   139                           	opt stack 0
   140  00005A                     	ds	2
   141                           tblptru	equ	0xFF8
   142                           
   143                           	psect	cstackBANK0
   144  000060                     __pcstackBANK0:
   145                           	opt stack 0
   146  000060                     get_temperature@Vout:
   147                           	opt stack 0
   148                           
   149                           ; 3 bytes @ 0x0
   150  000060                     	ds	3
   151  000063                     get_temperature@Rth:
   152                           	opt stack 0
   153                           
   154                           ; 3 bytes @ 0x3
   155  000063                     	ds	3
   156  000066                     _get_temperature$892:
   157                           	opt stack 0
   158                           
   159                           ; 3 bytes @ 0x6
   160  000066                     	ds	3
   161  000069                     _get_temperature$893:
   162                           	opt stack 0
   163                           
   164                           ; 3 bytes @ 0x9
   165  000069                     	ds	3
   166  00006C                     get_temperature@R1:
   167                           	opt stack 0
   168                           
   169                           ; 2 bytes @ 0xC
   170  00006C                     	ds	2
   171  00006E                     get_temperature@Tn:
   172                           	opt stack 0
   173                           
   174                           ; 3 bytes @ 0xE
   175  00006E                     	ds	3
   176  000071                     get_temperature@R2:
   177                           	opt stack 0
   178                           
   179                           ; 2 bytes @ 0x11
   180  000071                     	ds	2
   181  000073                     get_temperature@Bth:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x13
   185  000073                     	ds	2
   186  000075                     get_temperature@temp:
   187                           	opt stack 0
   188                           
   189                           ; 3 bytes @ 0x15
   190  000075                     	ds	3
   191                           tblptru	equ	0xFF8
   192                           
   193                           	psect	cstackCOMRAM
   194  000001                     __pcstackCOMRAM:
   195                           	opt stack 0
   196  000001                     ?_adc_convert:
   197                           	opt stack 0
   198  000001                     ?___wmul:
   199                           	opt stack 0
   200  000001                     ?___ftpack:
   201                           	opt stack 0
   202  000001                     ?_frexp:
   203                           	opt stack 0
   204  000001                     adc_convert@channel:
   205                           	opt stack 0
   206  000001                     ___wmul@multiplier:
   207                           	opt stack 0
   208  000001                     ___ftpack@arg:
   209                           	opt stack 0
   210  000001                     ___ftge@ff1:
   211                           	opt stack 0
   212  000001                     frexp@value:
   213                           	opt stack 0
   214                           
   215                           ; 3 bytes @ 0x0
   216  000001                     	ds	2
   217  000003                     ??_adc_convert:
   218  000003                     ___wmul@multiplicand:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0x2
   222  000003                     	ds	1
   223  000004                     ___ftpack@exp:
   224                           	opt stack 0
   225  000004                     frexp@eptr:
   226                           	opt stack 0
   227  000004                     ___ftge@ff2:
   228                           	opt stack 0
   229                           
   230                           ; 3 bytes @ 0x3
   231  000004                     	ds	1
   232  000005                     ___ftpack@sign:
   233                           	opt stack 0
   234  000005                     ___wmul@product:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x4
   238  000005                     	ds	1
   239  000006                     ??___ftpack:
   240  000006                     ??_frexp:
   241                           
   242                           ; 0 bytes @ 0x5
   243  000006                     	ds	1
   244  000007                     ??___ftge:
   245                           
   246                           ; 0 bytes @ 0x6
   247  000007                     	ds	2
   248  000009                     ?___awtoft:
   249                           	opt stack 0
   250  000009                     ?___lwtoft:
   251                           	opt stack 0
   252  000009                     ___awtoft@c:
   253                           	opt stack 0
   254  000009                     ___lwtoft@c:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x8
   258  000009                     	ds	3
   259  00000C                     ??___awtoft:
   260  00000C                     ??___lwtoft:
   261                           
   262                           ; 0 bytes @ 0xB
   263  00000C                     	ds	1
   264  00000D                     ___awtoft@sign:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0xC
   268  00000D                     	ds	1
   269  00000E                     ?___ftneg:
   270                           	opt stack 0
   271  00000E                     ___ftneg@f1:
   272                           	opt stack 0
   273                           
   274                           ; 3 bytes @ 0xD
   275  00000E                     	ds	3
   276  000011                     ?___ftadd:
   277                           	opt stack 0
   278  000011                     ___ftadd@f1:
   279                           	opt stack 0
   280                           
   281                           ; 3 bytes @ 0x10
   282  000011                     	ds	3
   283  000014                     ___ftadd@f2:
   284                           	opt stack 0
   285                           
   286                           ; 3 bytes @ 0x13
   287  000014                     	ds	3
   288  000017                     ??___ftadd:
   289                           
   290                           ; 0 bytes @ 0x16
   291  000017                     	ds	3
   292  00001A                     ___ftadd@sign:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0x19
   296  00001A                     	ds	1
   297  00001B                     ___ftadd@exp2:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x1A
   301  00001B                     	ds	1
   302  00001C                     ___ftadd@exp1:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x1B
   306  00001C                     	ds	1
   307  00001D                     ?___ftdiv:
   308                           	opt stack 0
   309  00001D                     ___ftdiv@f1:
   310                           	opt stack 0
   311                           
   312                           ; 3 bytes @ 0x1C
   313  00001D                     	ds	3
   314  000020                     ___ftdiv@f2:
   315                           	opt stack 0
   316                           
   317                           ; 3 bytes @ 0x1F
   318  000020                     	ds	3
   319  000023                     ??___ftdiv:
   320                           
   321                           ; 0 bytes @ 0x22
   322  000023                     	ds	3
   323  000026                     ___ftdiv@cntr:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x25
   327  000026                     	ds	1
   328  000027                     ___ftdiv@f3:
   329                           	opt stack 0
   330                           
   331                           ; 3 bytes @ 0x26
   332  000027                     	ds	3
   333  00002A                     ___ftdiv@exp:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x29
   337  00002A                     	ds	1
   338  00002B                     ___ftdiv@sign:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0x2A
   342  00002B                     	ds	1
   343  00002C                     ?___ftmul:
   344                           	opt stack 0
   345  00002C                     ___ftmul@f1:
   346                           	opt stack 0
   347                           
   348                           ; 3 bytes @ 0x2B
   349  00002C                     	ds	3
   350  00002F                     ___ftmul@f2:
   351                           	opt stack 0
   352                           
   353                           ; 3 bytes @ 0x2E
   354  00002F                     	ds	3
   355  000032                     ??___ftmul:
   356                           
   357                           ; 0 bytes @ 0x31
   358  000032                     	ds	3
   359  000035                     ___ftmul@exp:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x34
   363  000035                     	ds	1
   364  000036                     ___ftmul@f3_as_product:
   365                           	opt stack 0
   366                           
   367                           ; 3 bytes @ 0x35
   368  000036                     	ds	3
   369  000039                     ___ftmul@cntr:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x38
   373  000039                     	ds	1
   374  00003A                     ___ftmul@sign:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x39
   378  00003A                     	ds	1
   379  00003B                     ?_eval_poly:
   380                           	opt stack 0
   381  00003B                     ?___fttol:
   382                           	opt stack 0
   383  00003B                     ___fttol@f1:
   384                           	opt stack 0
   385  00003B                     eval_poly@x:
   386                           	opt stack 0
   387                           
   388                           ; 3 bytes @ 0x3A
   389  00003B                     	ds	3
   390  00003E                     eval_poly@d:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x3D
   394  00003E                     	ds	1
   395  00003F                     ??___fttol:
   396                           
   397                           ; 0 bytes @ 0x3E
   398  00003F                     	ds	1
   399  000040                     eval_poly@n:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x3F
   403  000040                     	ds	2
   404  000042                     ??_eval_poly:
   405                           
   406                           ; 0 bytes @ 0x41
   407  000042                     	ds	2
   408  000044                     ___fttol@sign1:
   409                           	opt stack 0
   410  000044                     eval_poly@res:
   411                           	opt stack 0
   412                           
   413                           ; 3 bytes @ 0x43
   414  000044                     	ds	1
   415  000045                     ___fttol@lval:
   416                           	opt stack 0
   417                           
   418                           ; 4 bytes @ 0x44
   419  000045                     	ds	2
   420  000047                     ?_log:
   421                           	opt stack 0
   422  000047                     log@x:
   423                           	opt stack 0
   424                           
   425                           ; 3 bytes @ 0x46
   426  000047                     	ds	2
   427  000049                     ___fttol@exp1:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x48
   431  000049                     	ds	1
   432  00004A                     log@exponent:
   433                           	opt stack 0
   434  00004A                     set_fan_speed@temp:
   435                           	opt stack 0
   436                           
   437                           ; 3 bytes @ 0x49
   438  00004A                     	ds	2
   439  00004C                     ?_get_temperature:
   440                           	opt stack 0
   441  00004C                     get_temperature@sensor:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x4B
   445  00004C                     	ds	1
   446  00004D                     ??_set_fan_speed:
   447                           
   448                           ; 0 bytes @ 0x4C
   449  00004D                     	ds	2
   450  00004F                     
   451                           ; 0 bytes @ 0x4E
   452  00004F                     	ds	2
   453  000051                     set_fan_speed@tTemp:
   454                           	opt stack 0
   455                           
   456                           ; 3 bytes @ 0x50
   457  000051                     	ds	3
   458  000054                     set_fan_speed@tTemp_291:
   459                           	opt stack 0
   460                           
   461                           ; 3 bytes @ 0x53
   462  000054                     	ds	3
   463  000057                     main@temp:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0x56
   467  000057                     	ds	3
   468                           tblptru	equ	0xFF8
   469                           
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 83 in file "ntc_test.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  temp            3   86[COMRAM] float 
   480 ;; Return value:  Size  Location     Type
   481 ;;		None               void
   482 ;; Registers used:
   483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   489 ;;      Params:         0       0       0       0       0       0       0       0       0
   490 ;;      Locals:         3       0       0       0       0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0       0       0       0       0
   492 ;;      Totals:         3       0       0       0       0       0       0       0       0
   493 ;;Total ram usage:        3 bytes
   494 ;; Hardware stack levels required when called:    5
   495 ;; This function calls:
   496 ;;		_configure_adc
   497 ;;		_configure_pwm
   498 ;;		_get_temperature
   499 ;;		_set_fan_speed
   500 ;; This function is called by:
   501 ;;		Startup code after reset
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text0
   506  001436                     __ptext0:
   507                           	opt stack 0
   508  001436                     _main:
   509                           	opt stack 26
   510                           
   511                           ;ntc_test.c: 85: float temp = 0;
   512                           
   513                           ; BSR set to: 15
   514                           ;incstack = 0
   515  001436  0E00               	movlw	0
   516  001438  6E57               	movwf	main@temp,c
   517  00143A  0E00               	movlw	0
   518  00143C  6E58               	movwf	main@temp+1,c
   519  00143E  0E00               	movlw	0
   520  001440  6E59               	movwf	main@temp+2,c
   521                           
   522                           ;ntc_test.c: 88: TRISCbits.RC2 = 0;
   523  001442  9494               	bcf	3988,2,c	;volatile
   524                           
   525                           ;ntc_test.c: 89: configure_adc();
   526  001444  EC99  F00A         	call	_configure_adc	;wreg free
   527                           
   528                           ;ntc_test.c: 90: configure_pwm();
   529  001448  ECA9  F00A         	call	_configure_pwm	;wreg free
   530  00144C                     l2112:
   531                           
   532                           ;ntc_test.c: 92: {
   533                           ;ntc_test.c: 94: temp = get_temperature(0);
   534  00144C  0E00               	movlw	0
   535  00144E  6E4D               	movwf	get_temperature@sensor+1,c
   536  001450  0E00               	movlw	0
   537  001452  6E4C               	movwf	get_temperature@sensor,c
   538  001454  EC15  F004         	call	_get_temperature	;wreg free
   539  001458  C04C  F057         	movff	?_get_temperature,main@temp
   540  00145C  C04D  F058         	movff	?_get_temperature+1,main@temp+1
   541  001460  C04E  F059         	movff	?_get_temperature+2,main@temp+2
   542                           
   543                           ;ntc_test.c: 95: set_fan_speed(temp);
   544  001464  C057  F04A         	movff	main@temp,set_fan_speed@temp
   545  001468  C058  F04B         	movff	main@temp+1,set_fan_speed@temp+1
   546  00146C  C059  F04C         	movff	main@temp+2,set_fan_speed@temp+2
   547  001470  ECB3  F006         	call	_set_fan_speed	;wreg free
   548  001474  D7EB               	goto	l2112
   549  001476                     __end_of_main:
   550                           	opt stack 0
   551                           tblptru	equ	0xFF8
   552                           
   553 ;; *************** function _set_fan_speed *****************
   554 ;; Defined at:
   555 ;;		line 62 in file "ntc_test.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;  temp            3   73[COMRAM] float 
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  tTemp           3   83[COMRAM] float 
   560 ;;  tTemp           3   80[COMRAM] float 
   561 ;; Return value:  Size  Location     Type
   562 ;;		None               void
   563 ;; Registers used:
   564 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   570 ;;      Params:         3       0       0       0       0       0       0       0       0
   571 ;;      Locals:         6       0       0       0       0       0       0       0       0
   572 ;;      Temps:          4       0       0       0       0       0       0       0       0
   573 ;;      Totals:        13       0       0       0       0       0       0       0       0
   574 ;;Total ram usage:       13 bytes
   575 ;; Hardware stack levels used:    1
   576 ;; Hardware stack levels required when called:    2
   577 ;; This function calls:
   578 ;;		___awtoft
   579 ;;		___ftdiv
   580 ;;		___ftge
   581 ;;		___ftmul
   582 ;;		___fttol
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text1
   589  000D66                     __ptext1:
   590                           	opt stack 0
   591  000D66                     _set_fan_speed:
   592                           	opt stack 28
   593                           
   594                           ;ntc_test.c: 64: float tTemp = 0;
   595                           
   596                           ;incstack = 0
   597  000D66  0E00               	movlw	0
   598  000D68  6E51               	movwf	set_fan_speed@tTemp,c
   599  000D6A  0E00               	movlw	0
   600  000D6C  6E52               	movwf	set_fan_speed@tTemp+1,c
   601  000D6E  0E00               	movlw	0
   602  000D70  6E53               	movwf	set_fan_speed@tTemp+2,c
   603                           
   604                           ;ntc_test.c: 65: if(temp <= MIN_TEMP)
   605  000D72  0E07               	movlw	low _MIN_TEMP
   606  000D74  6EF6               	movwf	tblptrl,c
   607  000D76  0E08               	movlw	high _MIN_TEMP
   608  000D78  6EF7               	movwf	tblptrh,c
   609  000D7A  0009               	tblrd		*+
   610  000D7C  CFF5 F001          	movff	tablat,___ftge@ff1
   611  000D80  0009               	tblrd		*+
   612  000D82  CFF5 F002          	movff	tablat,___ftge@ff1+1
   613  000D86  000A               	tblrd		*-
   614  000D88  CFF5 F003          	movff	tablat,___ftge@ff1+2
   615  000D8C  C04A  F004         	movff	set_fan_speed@temp,___ftge@ff2
   616  000D90  C04B  F005         	movff	set_fan_speed@temp+1,___ftge@ff2+1
   617  000D94  C04C  F006         	movff	set_fan_speed@temp+2,___ftge@ff2+2
   618  000D98  ECA9  F009         	call	___ftge	;wreg free
   619  000D9C  A0D8               	btfss	status,0,c
   620  000D9E  D008               	goto	l2096
   621                           
   622                           ;ntc_test.c: 66: {
   623                           ;ntc_test.c: 67: CCPR1L = MIN_DUTY_CYCLE;
   624  000DA0  0E0C               	movlw	low _MIN_DUTY_CYCLE
   625  000DA2  6EF6               	movwf	tblptrl,c
   626  000DA4  0E08               	movlw	high _MIN_DUTY_CYCLE
   627  000DA6  6EF7               	movwf	tblptrh,c
   628  000DA8  0008               	tblrd		*
   629  000DAA  CFF5 FFBE          	movff	tablat,4030	;volatile
   630                           
   631                           ;ntc_test.c: 68: }
   632  000DAE  0012               	return	
   633  000DB0                     l2096:
   634                           
   635                           ;ntc_test.c: 69: else
   636                           ;ntc_test.c: 70: {
   637                           ;ntc_test.c: 71: float tTemp = temp / MAX_TEMP;
   638  000DB0  C04A  F01D         	movff	set_fan_speed@temp,___ftdiv@f1
   639  000DB4  C04B  F01E         	movff	set_fan_speed@temp+1,___ftdiv@f1+1
   640  000DB8  C04C  F01F         	movff	set_fan_speed@temp+2,___ftdiv@f1+2
   641  000DBC  0E04               	movlw	low _MAX_TEMP
   642  000DBE  6EF6               	movwf	tblptrl,c
   643  000DC0  0E08               	movlw	high _MAX_TEMP
   644  000DC2  6EF7               	movwf	tblptrh,c
   645  000DC4  0009               	tblrd		*+
   646  000DC6  CFF5 F020          	movff	tablat,___ftdiv@f2
   647  000DCA  0009               	tblrd		*+
   648  000DCC  CFF5 F021          	movff	tablat,___ftdiv@f2+1
   649  000DD0  000A               	tblrd		*-
   650  000DD2  CFF5 F022          	movff	tablat,___ftdiv@f2+2
   651  000DD6  EC2F  F008         	call	___ftdiv	;wreg free
   652  000DDA  C01D  F054         	movff	?___ftdiv,set_fan_speed@tTemp_291
   653  000DDE  C01E  F055         	movff	?___ftdiv+1,set_fan_speed@tTemp_291+1
   654  000DE2  C01F  F056         	movff	?___ftdiv+2,set_fan_speed@tTemp_291+2
   655                           
   656                           ;ntc_test.c: 72: if(tTemp >= 1)
   657  000DE6  C054  F001         	movff	set_fan_speed@tTemp_291,___ftge@ff1
   658  000DEA  C055  F002         	movff	set_fan_speed@tTemp_291+1,___ftge@ff1+1
   659  000DEE  C056  F003         	movff	set_fan_speed@tTemp_291+2,___ftge@ff1+2
   660  000DF2  0E00               	movlw	0
   661  000DF4  6E04               	movwf	___ftge@ff2,c
   662  000DF6  0E80               	movlw	128
   663  000DF8  6E05               	movwf	___ftge@ff2+1,c
   664  000DFA  0E3F               	movlw	63
   665  000DFC  6E06               	movwf	___ftge@ff2+2,c
   666  000DFE  ECA9  F009         	call	___ftge	;wreg free
   667  000E02  A0D8               	btfss	status,0,c
   668  000E04  D008               	goto	l2102
   669                           
   670                           ;ntc_test.c: 73: {
   671                           ;ntc_test.c: 74: CCPR1L = MAX_DUTY_CYCLE;
   672  000E06  0E0A               	movlw	low _MAX_DUTY_CYCLE
   673  000E08  6EF6               	movwf	tblptrl,c
   674  000E0A  0E08               	movlw	high _MAX_DUTY_CYCLE
   675  000E0C  6EF7               	movwf	tblptrh,c
   676  000E0E  0008               	tblrd		*
   677  000E10  CFF5 FFBE          	movff	tablat,4030	;volatile
   678                           
   679                           ;ntc_test.c: 75: }
   680  000E14  0012               	return	
   681  000E16                     l2102:
   682                           
   683                           ;ntc_test.c: 76: else
   684                           ;ntc_test.c: 77: {
   685                           ;ntc_test.c: 78: CCPR1L = (int)MAX_DUTY_CYCLE*tTemp;
   686  000E16  C054  F02F         	movff	set_fan_speed@tTemp_291,___ftmul@f2
   687  000E1A  C055  F030         	movff	set_fan_speed@tTemp_291+1,___ftmul@f2+1
   688  000E1E  C056  F031         	movff	set_fan_speed@tTemp_291+2,___ftmul@f2+2
   689  000E22  0E0A               	movlw	low _MAX_DUTY_CYCLE
   690  000E24  6EF6               	movwf	tblptrl,c
   691  000E26  0E08               	movlw	high _MAX_DUTY_CYCLE
   692  000E28  6EF7               	movwf	tblptrh,c
   693  000E2A  0009               	tblrd		*+
   694  000E2C  CFF5 F009          	movff	tablat,___awtoft@c
   695  000E30  000A               	tblrd		*-
   696  000E32  CFF5 F00A          	movff	tablat,___awtoft@c+1
   697  000E36  ECF1  F009         	call	___awtoft	;wreg free
   698  000E3A  C009  F02C         	movff	?___awtoft,___ftmul@f1
   699  000E3E  C00A  F02D         	movff	?___awtoft+1,___ftmul@f1+1
   700  000E42  C00B  F02E         	movff	?___awtoft+2,___ftmul@f1+2
   701  000E46  EC38  F007         	call	___ftmul	;wreg free
   702  000E4A  C02C  F03B         	movff	?___ftmul,___fttol@f1
   703  000E4E  C02D  F03C         	movff	?___ftmul+1,___fttol@f1+1
   704  000E52  C02E  F03D         	movff	?___ftmul+2,___fttol@f1+2
   705  000E56  ECB4  F007         	call	___fttol	;wreg free
   706  000E5A  C03B  F04D         	movff	?___fttol,??_set_fan_speed
   707  000E5E  C03C  F04E         	movff	?___fttol+1,??_set_fan_speed+1
   708  000E62  C03D  F04F         	movff	?___fttol+2,??_set_fan_speed+2
   709  000E66  C03E  F050         	movff	?___fttol+3,??_set_fan_speed+3
   710  000E6A  504D               	movf	??_set_fan_speed,w,c
   711  000E6C  6EBE               	movwf	4030,c	;volatile
   712  000E6E  0012               	return	
   713  000E70                     __end_of_set_fan_speed:
   714                           	opt stack 0
   715                           tblptru	equ	0xFF8
   716                           tblptrh	equ	0xFF7
   717                           tblptrl	equ	0xFF6
   718                           tablat	equ	0xFF5
   719                           status	equ	0xFD8
   720                           
   721 ;; *************** function ___fttol *****************
   722 ;; Defined at:
   723 ;;		line 44 in file "/opt/microchip/xc8/v1.31/sources/common/fttol.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;  f1              3   58[COMRAM] float 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  lval            4   68[COMRAM] unsigned long 
   728 ;;  exp1            1   72[COMRAM] unsigned char 
   729 ;;  sign1           1   67[COMRAM] unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  4   58[COMRAM] long 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   739 ;;      Params:         4       0       0       0       0       0       0       0       0
   740 ;;      Locals:         6       0       0       0       0       0       0       0       0
   741 ;;      Temps:          5       0       0       0       0       0       0       0       0
   742 ;;      Totals:        15       0       0       0       0       0       0       0       0
   743 ;;Total ram usage:       15 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_set_fan_speed
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text2
   753  000F68                     __ptext2:
   754                           	opt stack 0
   755  000F68                     ___fttol:
   756                           	opt stack 29
   757                           
   758                           ;incstack = 0
   759  000F68  C03D  F03F         	movff	___fttol@f1+2,??___fttol
   760  000F6C  6A40               	clrf	(??___fttol+1)& (0+255),c
   761  000F6E  6A41               	clrf	(??___fttol+2)& (0+255),c
   762  000F70  343C               	rlcf	___fttol@f1+1,w,c
   763  000F72  363F               	rlcf	??___fttol& (0+255),f,c
   764  000F74  E301               	bnc	u511
   765  000F76  8040               	bsf	(??___fttol+1)& (0+255),0,c
   766  000F78                     u511:
   767  000F78  503F               	movf	??___fttol,w,c
   768  000F7A  6E49               	movwf	___fttol@exp1,c
   769  000F7C  6649               	tstfsz	___fttol@exp1& (0+255),c
   770  000F7E  D009               	goto	l1626
   771  000F80  0E00               	movlw	0
   772  000F82  6E3B               	movwf	?___fttol,c
   773  000F84  0E00               	movlw	0
   774  000F86  6E3C               	movwf	?___fttol+1,c
   775  000F88  0E00               	movlw	0
   776  000F8A  6E3D               	movwf	?___fttol+2,c
   777  000F8C  0E00               	movlw	0
   778  000F8E  6E3E               	movwf	?___fttol+3,c
   779  000F90  0012               	return	
   780  000F92                     l1626:
   781  000F92  0E17               	movlw	23
   782  000F94  6E3F               	movwf	??___fttol& (0+255),c
   783  000F96  C03B  F040         	movff	___fttol@f1,??___fttol+1
   784  000F9A  C03C  F041         	movff	___fttol@f1+1,??___fttol+2
   785  000F9E  C03D  F042         	movff	___fttol@f1+2,??___fttol+3
   786  000FA2  283F               	incf	??___fttol,w,c
   787  000FA4  6E43               	movwf	(??___fttol+4)& (0+255),c
   788  000FA6  D004               	goto	u530
   789  000FA8                     u535:
   790  000FA8  90D8               	bcf	status,0,c
   791  000FAA  3242               	rrcf	??___fttol+3,f,c
   792  000FAC  3241               	rrcf	??___fttol+2,f,c
   793  000FAE  3240               	rrcf	??___fttol+1,f,c
   794  000FB0                     u530:
   795  000FB0  2E43               	decfsz	(??___fttol+4)& (0+255),f,c
   796  000FB2  D7FA               	goto	u535
   797  000FB4  5040               	movf	??___fttol+1,w,c
   798  000FB6  6E44               	movwf	___fttol@sign1,c
   799  000FB8  8E3C               	bsf	___fttol@f1+1,7,c
   800  000FBA  0EFF               	movlw	255
   801  000FBC  163B               	andwf	___fttol@f1,f,c
   802  000FBE  0EFF               	movlw	255
   803  000FC0  163C               	andwf	___fttol@f1+1,f,c
   804  000FC2  0E00               	movlw	0
   805  000FC4  163D               	andwf	___fttol@f1+2,f,c
   806  000FC6  503B               	movf	___fttol@f1,w,c
   807  000FC8  6E45               	movwf	___fttol@lval,c
   808  000FCA  503C               	movf	___fttol@f1+1,w,c
   809  000FCC  6E46               	movwf	___fttol@lval+1,c
   810  000FCE  503D               	movf	___fttol@f1+2,w,c
   811  000FD0  6E47               	movwf	___fttol@lval+2,c
   812  000FD2  6A48               	clrf	___fttol@lval+3,c
   813  000FD4  0E8E               	movlw	142
   814  000FD6  5E49               	subwf	___fttol@exp1,f,c
   815  000FD8  AE49               	btfss	___fttol@exp1,7,c
   816  000FDA  D019               	goto	l1648
   817  000FDC  5049               	movf	___fttol@exp1,w,c
   818  000FDE  0A80               	xorlw	128
   819  000FE0  6E3F               	movwf	??___fttol& (0+255),c
   820  000FE2  0EF1               	movlw	241
   821  000FE4  0A80               	xorlw	128
   822  000FE6  5C3F               	subwf	??___fttol,w,c
   823  000FE8  B0D8               	btfsc	status,0,c
   824  000FEA  D009               	goto	l1644
   825  000FEC  0E00               	movlw	0
   826  000FEE  6E3B               	movwf	?___fttol,c
   827  000FF0  0E00               	movlw	0
   828  000FF2  6E3C               	movwf	?___fttol+1,c
   829  000FF4  0E00               	movlw	0
   830  000FF6  6E3D               	movwf	?___fttol+2,c
   831  000FF8  0E00               	movlw	0
   832  000FFA  6E3E               	movwf	?___fttol+3,c
   833  000FFC  0012               	return	
   834  000FFE                     l1644:
   835  000FFE  90D8               	bcf	status,0,c
   836  001000  3248               	rrcf	___fttol@lval+3,f,c
   837  001002  3247               	rrcf	___fttol@lval+2,f,c
   838  001004  3246               	rrcf	___fttol@lval+1,f,c
   839  001006  3245               	rrcf	___fttol@lval,f,c
   840  001008  3E49               	incfsz	___fttol@exp1,f,c
   841  00100A  D7F9               	goto	l1644
   842  00100C  D014               	goto	l1658
   843  00100E                     l1648:
   844  00100E  0E17               	movlw	23
   845  001010  6449               	cpfsgt	___fttol@exp1,c
   846  001012  D00F               	goto	l1656
   847  001014  0E00               	movlw	0
   848  001016  6E3B               	movwf	?___fttol,c
   849  001018  0E00               	movlw	0
   850  00101A  6E3C               	movwf	?___fttol+1,c
   851  00101C  0E00               	movlw	0
   852  00101E  6E3D               	movwf	?___fttol+2,c
   853  001020  0E00               	movlw	0
   854  001022  6E3E               	movwf	?___fttol+3,c
   855  001024  0012               	return	
   856  001026                     l1654:
   857  001026  90D8               	bcf	status,0,c
   858  001028  3645               	rlcf	___fttol@lval,f,c
   859  00102A  3646               	rlcf	___fttol@lval+1,f,c
   860  00102C  3647               	rlcf	___fttol@lval+2,f,c
   861  00102E  3648               	rlcf	___fttol@lval+3,f,c
   862  001030  0649               	decf	___fttol@exp1,f,c
   863  001032                     l1656:
   864  001032  6649               	tstfsz	___fttol@exp1,c
   865  001034  D7F8               	goto	l1654
   866  001036                     l1658:
   867  001036  5044               	movf	___fttol@sign1,w,c
   868  001038  B4D8               	btfsc	status,2,c
   869  00103A  D008               	goto	l1662
   870  00103C  1E48               	comf	___fttol@lval+3,f,c
   871  00103E  1E47               	comf	___fttol@lval+2,f,c
   872  001040  1E46               	comf	___fttol@lval+1,f,c
   873  001042  6C45               	negf	___fttol@lval,c
   874  001044  0E00               	movlw	0
   875  001046  2246               	addwfc	___fttol@lval+1,f,c
   876  001048  2247               	addwfc	___fttol@lval+2,f,c
   877  00104A  2248               	addwfc	___fttol@lval+3,f,c
   878  00104C                     l1662:
   879  00104C  C045  F03B         	movff	___fttol@lval,?___fttol
   880  001050  C046  F03C         	movff	___fttol@lval+1,?___fttol+1
   881  001054  C047  F03D         	movff	___fttol@lval+2,?___fttol+2
   882  001058  C048  F03E         	movff	___fttol@lval+3,?___fttol+3
   883  00105C  0012               	return	
   884  00105E                     __end_of___fttol:
   885                           	opt stack 0
   886                           tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           status	equ	0xFD8
   891                           
   892 ;; *************** function ___ftge *****************
   893 ;; Defined at:
   894 ;;		line 4 in file "/opt/microchip/xc8/v1.31/sources/common/ftge.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;  ff1             3    0[COMRAM] float 
   897 ;;  ff2             3    3[COMRAM] float 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;		None               void
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   909 ;;      Params:         6       0       0       0       0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0       0       0       0       0
   911 ;;      Temps:          3       0       0       0       0       0       0       0       0
   912 ;;      Totals:         9       0       0       0       0       0       0       0       0
   913 ;;Total ram usage:        9 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_set_fan_speed
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text3
   923  001352                     __ptext3:
   924                           	opt stack 0
   925  001352                     ___ftge:
   926                           	opt stack 29
   927                           
   928                           ;incstack = 0
   929  001352  AE03               	btfss	___ftge@ff1+2,7,c
   930  001354  D016               	goto	l1602
   931  001356  C001  F007         	movff	___ftge@ff1,??___ftge
   932  00135A  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
   933  00135E  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
   934  001362  1E07               	comf	??___ftge,f,c
   935  001364  1E08               	comf	??___ftge+1,f,c
   936  001366  1E09               	comf	??___ftge+2,f,c
   937  001368  2A07               	incf	??___ftge,f,c
   938  00136A  0E00               	movlw	0
   939  00136C  2208               	addwfc	??___ftge+1,f,c
   940  00136E  2209               	addwfc	??___ftge+2,f,c
   941  001370  0E00               	movlw	0
   942  001372  2407               	addwf	??___ftge,w,c
   943  001374  6E01               	movwf	___ftge@ff1,c
   944  001376  0E00               	movlw	0
   945  001378  2008               	addwfc	??___ftge+1,w,c
   946  00137A  6E02               	movwf	___ftge@ff1+1,c
   947  00137C  0E80               	movlw	128
   948  00137E  2009               	addwfc	??___ftge+2,w,c
   949  001380  6E03               	movwf	___ftge@ff1+2,c
   950  001382                     l1602:
   951  001382  AE06               	btfss	___ftge@ff2+2,7,c
   952  001384  D016               	goto	l1606
   953  001386  C004  F007         	movff	___ftge@ff2,??___ftge
   954  00138A  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
   955  00138E  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
   956  001392  1E07               	comf	??___ftge,f,c
   957  001394  1E08               	comf	??___ftge+1,f,c
   958  001396  1E09               	comf	??___ftge+2,f,c
   959  001398  2A07               	incf	??___ftge,f,c
   960  00139A  0E00               	movlw	0
   961  00139C  2208               	addwfc	??___ftge+1,f,c
   962  00139E  2209               	addwfc	??___ftge+2,f,c
   963  0013A0  0E00               	movlw	0
   964  0013A2  2407               	addwf	??___ftge,w,c
   965  0013A4  6E04               	movwf	___ftge@ff2,c
   966  0013A6  0E00               	movlw	0
   967  0013A8  2008               	addwfc	??___ftge+1,w,c
   968  0013AA  6E05               	movwf	___ftge@ff2+1,c
   969  0013AC  0E80               	movlw	128
   970  0013AE  2009               	addwfc	??___ftge+2,w,c
   971  0013B0  6E06               	movwf	___ftge@ff2+2,c
   972  0013B2                     l1606:
   973  0013B2  0E00               	movlw	0
   974  0013B4  1A01               	xorwf	___ftge@ff1,f,c
   975  0013B6  0E00               	movlw	0
   976  0013B8  1A02               	xorwf	___ftge@ff1+1,f,c
   977  0013BA  0E80               	movlw	128
   978  0013BC  1A03               	xorwf	___ftge@ff1+2,f,c
   979  0013BE  0E00               	movlw	0
   980  0013C0  1A04               	xorwf	___ftge@ff2,f,c
   981  0013C2  0E00               	movlw	0
   982  0013C4  1A05               	xorwf	___ftge@ff2+1,f,c
   983  0013C6  0E80               	movlw	128
   984  0013C8  1A06               	xorwf	___ftge@ff2+2,f,c
   985  0013CA  5004               	movf	___ftge@ff2,w,c
   986  0013CC  5C01               	subwf	___ftge@ff1,w,c
   987  0013CE  5005               	movf	___ftge@ff2+1,w,c
   988  0013D0  5802               	subwfb	___ftge@ff1+1,w,c
   989  0013D2  5006               	movf	___ftge@ff2+2,w,c
   990  0013D4  5803               	subwfb	___ftge@ff1+2,w,c
   991  0013D6  B0D8               	btfsc	status,0,c
   992  0013D8  D002               	goto	l1612
   993  0013DA  90D8               	bcf	status,0,c
   994  0013DC  0012               	return	
   995  0013DE                     l1612:
   996  0013DE  80D8               	bsf	status,0,c
   997  0013E0  0012               	return	
   998  0013E2                     __end_of___ftge:
   999                           	opt stack 0
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           status	equ	0xFD8
  1005                           
  1006 ;; *************** function _get_temperature *****************
  1007 ;; Defined at:
  1008 ;;		line 25 in file "ntc_temperature.h"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;  sensor          2   75[COMRAM] int 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  temp            3   21[BANK0 ] float 
  1013 ;;  Tn              3   14[BANK0 ] float 
  1014 ;;  Rth             3    3[BANK0 ] float 
  1015 ;;  Vout            3    0[BANK0 ] float 
  1016 ;;  Bth             2   19[BANK0 ] unsigned int 
  1017 ;;  R2              2   17[BANK0 ] unsigned int 
  1018 ;;  R1              2   12[BANK0 ] unsigned int 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  3   75[COMRAM] float 
  1021 ;; Registers used:
  1022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1028 ;;      Params:         3       0       0       0       0       0       0       0       0
  1029 ;;      Locals:         0      24       0       0       0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1031 ;;      Totals:         3      24       0       0       0       0       0       0       0
  1032 ;;Total ram usage:       27 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    4
  1035 ;; This function calls:
  1036 ;;		___ftadd
  1037 ;;		___ftdiv
  1038 ;;		___ftmul
  1039 ;;		___ftneg
  1040 ;;		___lwtoft
  1041 ;;		___wmul
  1042 ;;		_adc_convert
  1043 ;;		_log
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text4
  1050  00082A                     __ptext4:
  1051                           	opt stack 0
  1052  00082A                     _get_temperature:
  1053                           	opt stack 26
  1054                           
  1055                           ;ntc_temperature.h: 27: float Vout;
  1056                           ;ntc_temperature.h: 29: unsigned int R1 = 10000;
  1057                           
  1058                           ;incstack = 0
  1059  00082A  0E27               	movlw	39
  1060  00082C  0100               	movlb	0	; () banked
  1061  00082E  0100               	movlb	0	; () banked
  1062  000830  6F6D               	movwf	(get_temperature@R1+1)& (0+255),b
  1063  000832  0E10               	movlw	16
  1064  000834  0100               	movlb	0	; () banked
  1065  000836  6F6C               	movwf	get_temperature@R1& (0+255),b
  1066                           
  1067                           ;ntc_temperature.h: 31: unsigned int R2 = 10000;
  1068  000838  0E27               	movlw	39
  1069  00083A  0100               	movlb	0	; () banked
  1070  00083C  0100               	movlb	0	; () banked
  1071  00083E  6F72               	movwf	(get_temperature@R2+1)& (0+255),b
  1072  000840  0E10               	movlw	16
  1073  000842  0100               	movlb	0	; () banked
  1074  000844  6F71               	movwf	get_temperature@R2& (0+255),b
  1075                           
  1076                           ;ntc_temperature.h: 32: float Rth;
  1077                           ;ntc_temperature.h: 33: float Tn = 25+273.15;
  1078  000846  0E13               	movlw	19
  1079  000848  0100               	movlb	0	; () banked
  1080  00084A  0100               	movlb	0	; () banked
  1081  00084C  6F6E               	movwf	get_temperature@Tn& (0+255),b
  1082  00084E  0E95               	movlw	149
  1083  000850  0100               	movlb	0	; () banked
  1084  000852  0100               	movlb	0	; () banked
  1085  000854  6F6F               	movwf	(get_temperature@Tn+1)& (0+255),b
  1086  000856  0E43               	movlw	67
  1087  000858  0100               	movlb	0	; () banked
  1088  00085A  0100               	movlb	0	; () banked
  1089  00085C  6F70               	movwf	(get_temperature@Tn+2)& (0+255),b
  1090                           
  1091                           ;ntc_temperature.h: 34: unsigned int Bth = 4073;
  1092  00085E  0E0F               	movlw	15
  1093  000860  0100               	movlb	0	; () banked
  1094  000862  0100               	movlb	0	; () banked
  1095  000864  6F74               	movwf	(get_temperature@Bth+1)& (0+255),b
  1096  000866  0EE9               	movlw	233
  1097  000868  0100               	movlb	0	; () banked
  1098  00086A  6F73               	movwf	get_temperature@Bth& (0+255),b
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;ntc_temperature.h: 35: float temp;
  1102                           ;ntc_temperature.h: 40: Vout = adc_convert(sensor) * ADC_RESOLUTION;
  1103  00086C  C04C  F001         	movff	get_temperature@sensor,adc_convert@channel
  1104  000870  C04D  F002         	movff	get_temperature@sensor+1,adc_convert@channel+1
  1105  000874  EC58  F00A         	call	_adc_convert	;wreg free
  1106  000878  C001  F009         	movff	?_adc_convert,___lwtoft@c
  1107  00087C  C002  F00A         	movff	?_adc_convert+1,___lwtoft@c+1
  1108  000880  EC70  F00A         	call	___lwtoft	;wreg free
  1109  000884  C009  F02C         	movff	?___lwtoft,___ftmul@f1
  1110  000888  C00A  F02D         	movff	?___lwtoft+1,___ftmul@f1+1
  1111  00088C  C00B  F02E         	movff	?___lwtoft+2,___ftmul@f1+2
  1112  000890  0E01               	movlw	low _ADC_RESOLUTION
  1113  000892  6EF6               	movwf	tblptrl,c
  1114  000894  0E08               	movlw	high _ADC_RESOLUTION
  1115  000896  6EF7               	movwf	tblptrh,c
  1116  000898  0009               	tblrd		*+
  1117  00089A  CFF5 F02F          	movff	tablat,___ftmul@f2
  1118  00089E  0009               	tblrd		*+
  1119  0008A0  CFF5 F030          	movff	tablat,___ftmul@f2+1
  1120  0008A4  000A               	tblrd		*-
  1121  0008A6  CFF5 F031          	movff	tablat,___ftmul@f2+2
  1122  0008AA  EC38  F007         	call	___ftmul	;wreg free
  1123  0008AE  C02C  F060         	movff	?___ftmul,get_temperature@Vout
  1124  0008B2  C02D  F061         	movff	?___ftmul+1,get_temperature@Vout+1
  1125  0008B6  C02E  F062         	movff	?___ftmul+2,get_temperature@Vout+2
  1126                           
  1127                           ;ntc_temperature.h: 41: Rth = ((5 * R2) / (5 - Vout)) - R2;
  1128  0008BA  0E00               	movlw	0
  1129  0008BC  6E14               	movwf	___ftadd@f2,c
  1130  0008BE  0EA0               	movlw	160
  1131  0008C0  6E15               	movwf	___ftadd@f2+1,c
  1132  0008C2  0E40               	movlw	64
  1133  0008C4  6E16               	movwf	___ftadd@f2+2,c
  1134  0008C6  C060  F00E         	movff	get_temperature@Vout,___ftneg@f1
  1135  0008CA  C061  F00F         	movff	get_temperature@Vout+1,___ftneg@f1+1
  1136  0008CE  C062  F010         	movff	get_temperature@Vout+2,___ftneg@f1+2
  1137  0008D2  EC86  F00A         	call	___ftneg	;wreg free
  1138  0008D6  C00E  F011         	movff	?___ftneg,___ftadd@f1
  1139  0008DA  C00F  F012         	movff	?___ftneg+1,___ftadd@f1+1
  1140  0008DE  C010  F013         	movff	?___ftneg+2,___ftadd@f1+2
  1141  0008E2  EC40  F005         	call	___ftadd	;wreg free
  1142  0008E6  C011  F020         	movff	?___ftadd,___ftdiv@f2
  1143  0008EA  C012  F021         	movff	?___ftadd+1,___ftdiv@f2+1
  1144  0008EE  C013  F022         	movff	?___ftadd+2,___ftdiv@f2+2
  1145  0008F2  0E00               	movlw	0
  1146  0008F4  6E04               	movwf	___wmul@multiplicand+1,c
  1147  0008F6  0E05               	movlw	5
  1148  0008F8  6E03               	movwf	___wmul@multiplicand,c
  1149  0008FA  C071  F001         	movff	get_temperature@R2,___wmul@multiplier
  1150  0008FE  C072  F002         	movff	get_temperature@R2+1,___wmul@multiplier+1
  1151  000902  EC3B  F00A         	call	___wmul	;wreg free
  1152  000906  C001  F009         	movff	?___wmul,___lwtoft@c
  1153  00090A  C002  F00A         	movff	?___wmul+1,___lwtoft@c+1
  1154  00090E  EC70  F00A         	call	___lwtoft	;wreg free
  1155  000912  C009  F01D         	movff	?___lwtoft,___ftdiv@f1
  1156  000916  C00A  F01E         	movff	?___lwtoft+1,___ftdiv@f1+1
  1157  00091A  C00B  F01F         	movff	?___lwtoft+2,___ftdiv@f1+2
  1158  00091E  EC2F  F008         	call	___ftdiv	;wreg free
  1159  000922  C01D  F066         	movff	?___ftdiv,_get_temperature$892
  1160  000926  C01E  F067         	movff	?___ftdiv+1,_get_temperature$892+1
  1161  00092A  C01F  F068         	movff	?___ftdiv+2,_get_temperature$892+2
  1162                           
  1163                           ;ntc_temperature.h: 41: Rth = ((5 * R2) / (5 - Vout)) - R2;
  1164  00092E  C066  F011         	movff	_get_temperature$892,___ftadd@f1
  1165  000932  C067  F012         	movff	_get_temperature$892+1,___ftadd@f1+1
  1166  000936  C068  F013         	movff	_get_temperature$892+2,___ftadd@f1+2
  1167  00093A  C071  F009         	movff	get_temperature@R2,___lwtoft@c
  1168  00093E  C072  F00A         	movff	get_temperature@R2+1,___lwtoft@c+1
  1169  000942  EC70  F00A         	call	___lwtoft	;wreg free
  1170  000946  C009  F00E         	movff	?___lwtoft,___ftneg@f1
  1171  00094A  C00A  F00F         	movff	?___lwtoft+1,___ftneg@f1+1
  1172  00094E  C00B  F010         	movff	?___lwtoft+2,___ftneg@f1+2
  1173  000952  EC86  F00A         	call	___ftneg	;wreg free
  1174  000956  C00E  F014         	movff	?___ftneg,___ftadd@f2
  1175  00095A  C00F  F015         	movff	?___ftneg+1,___ftadd@f2+1
  1176  00095E  C010  F016         	movff	?___ftneg+2,___ftadd@f2+2
  1177  000962  EC40  F005         	call	___ftadd	;wreg free
  1178  000966  C011  F063         	movff	?___ftadd,get_temperature@Rth
  1179  00096A  C012  F064         	movff	?___ftadd+1,get_temperature@Rth+1
  1180  00096E  C013  F065         	movff	?___ftadd+2,get_temperature@Rth+2
  1181                           
  1182                           ;ntc_temperature.h: 42: temp = (Bth*Tn) / (Bth + log(Rth / R1) * Tn);
  1183  000972  C06C  F009         	movff	get_temperature@R1,___lwtoft@c
  1184  000976  C06D  F00A         	movff	get_temperature@R1+1,___lwtoft@c+1
  1185  00097A  EC70  F00A         	call	___lwtoft	;wreg free
  1186  00097E  C009  F020         	movff	?___lwtoft,___ftdiv@f2
  1187  000982  C00A  F021         	movff	?___lwtoft+1,___ftdiv@f2+1
  1188  000986  C00B  F022         	movff	?___lwtoft+2,___ftdiv@f2+2
  1189  00098A  C063  F01D         	movff	get_temperature@Rth,___ftdiv@f1
  1190  00098E  C064  F01E         	movff	get_temperature@Rth+1,___ftdiv@f1+1
  1191  000992  C065  F01F         	movff	get_temperature@Rth+2,___ftdiv@f1+2
  1192  000996  EC2F  F008         	call	___ftdiv	;wreg free
  1193  00099A  C01D  F047         	movff	?___ftdiv,log@x
  1194  00099E  C01E  F048         	movff	?___ftdiv+1,log@x+1
  1195  0009A2  C01F  F049         	movff	?___ftdiv+2,log@x+2
  1196  0009A6  EC1C  F006         	call	_log	;wreg free
  1197  0009AA  C047  F069         	movff	?_log,_get_temperature$893
  1198  0009AE  C048  F06A         	movff	?_log+1,_get_temperature$893+1
  1199  0009B2  C049  F06B         	movff	?_log+2,_get_temperature$893+2
  1200                           
  1201                           ;ntc_temperature.h: 42: temp = (Bth*Tn) / (Bth + log(Rth / R1) * Tn);
  1202  0009B6  C06E  F02F         	movff	get_temperature@Tn,___ftmul@f2
  1203  0009BA  C06F  F030         	movff	get_temperature@Tn+1,___ftmul@f2+1
  1204  0009BE  C070  F031         	movff	get_temperature@Tn+2,___ftmul@f2+2
  1205  0009C2  C073  F009         	movff	get_temperature@Bth,___lwtoft@c
  1206  0009C6  C074  F00A         	movff	get_temperature@Bth+1,___lwtoft@c+1
  1207  0009CA  EC70  F00A         	call	___lwtoft	;wreg free
  1208  0009CE  C009  F02C         	movff	?___lwtoft,___ftmul@f1
  1209  0009D2  C00A  F02D         	movff	?___lwtoft+1,___ftmul@f1+1
  1210  0009D6  C00B  F02E         	movff	?___lwtoft+2,___ftmul@f1+2
  1211  0009DA  EC38  F007         	call	___ftmul	;wreg free
  1212  0009DE  C02C  F01D         	movff	?___ftmul,___ftdiv@f1
  1213  0009E2  C02D  F01E         	movff	?___ftmul+1,___ftdiv@f1+1
  1214  0009E6  C02E  F01F         	movff	?___ftmul+2,___ftdiv@f1+2
  1215  0009EA  C06E  F02F         	movff	get_temperature@Tn,___ftmul@f2
  1216  0009EE  C06F  F030         	movff	get_temperature@Tn+1,___ftmul@f2+1
  1217  0009F2  C070  F031         	movff	get_temperature@Tn+2,___ftmul@f2+2
  1218  0009F6  C069  F02C         	movff	_get_temperature$893,___ftmul@f1
  1219  0009FA  C06A  F02D         	movff	_get_temperature$893+1,___ftmul@f1+1
  1220  0009FE  C06B  F02E         	movff	_get_temperature$893+2,___ftmul@f1+2
  1221  000A02  EC38  F007         	call	___ftmul	;wreg free
  1222  000A06  C02C  F014         	movff	?___ftmul,___ftadd@f2
  1223  000A0A  C02D  F015         	movff	?___ftmul+1,___ftadd@f2+1
  1224  000A0E  C02E  F016         	movff	?___ftmul+2,___ftadd@f2+2
  1225  000A12  C073  F009         	movff	get_temperature@Bth,___lwtoft@c
  1226  000A16  C074  F00A         	movff	get_temperature@Bth+1,___lwtoft@c+1
  1227  000A1A  EC70  F00A         	call	___lwtoft	;wreg free
  1228  000A1E  C009  F011         	movff	?___lwtoft,___ftadd@f1
  1229  000A22  C00A  F012         	movff	?___lwtoft+1,___ftadd@f1+1
  1230  000A26  C00B  F013         	movff	?___lwtoft+2,___ftadd@f1+2
  1231  000A2A  EC40  F005         	call	___ftadd	;wreg free
  1232  000A2E  C011  F020         	movff	?___ftadd,___ftdiv@f2
  1233  000A32  C012  F021         	movff	?___ftadd+1,___ftdiv@f2+1
  1234  000A36  C013  F022         	movff	?___ftadd+2,___ftdiv@f2+2
  1235  000A3A  EC2F  F008         	call	___ftdiv	;wreg free
  1236  000A3E  C01D  F075         	movff	?___ftdiv,get_temperature@temp
  1237  000A42  C01E  F076         	movff	?___ftdiv+1,get_temperature@temp+1
  1238  000A46  C01F  F077         	movff	?___ftdiv+2,get_temperature@temp+2
  1239                           
  1240                           ;ntc_temperature.h: 44: temp = temp - 273.15;
  1241  000A4A  C075  F011         	movff	get_temperature@temp,___ftadd@f1
  1242  000A4E  C076  F012         	movff	get_temperature@temp+1,___ftadd@f1+1
  1243  000A52  C077  F013         	movff	get_temperature@temp+2,___ftadd@f1+2
  1244  000A56  0E93               	movlw	147
  1245  000A58  6E14               	movwf	___ftadd@f2,c
  1246  000A5A  0E88               	movlw	136
  1247  000A5C  6E15               	movwf	___ftadd@f2+1,c
  1248  000A5E  0EC3               	movlw	195
  1249  000A60  6E16               	movwf	___ftadd@f2+2,c
  1250  000A62  EC40  F005         	call	___ftadd	;wreg free
  1251  000A66  C011  F075         	movff	?___ftadd,get_temperature@temp
  1252  000A6A  C012  F076         	movff	?___ftadd+1,get_temperature@temp+1
  1253  000A6E  C013  F077         	movff	?___ftadd+2,get_temperature@temp+2
  1254                           
  1255                           ;ntc_temperature.h: 46: return temp;
  1256  000A72  C075  F04C         	movff	get_temperature@temp,?_get_temperature
  1257  000A76  C076  F04D         	movff	get_temperature@temp+1,?_get_temperature+1
  1258  000A7A  C077  F04E         	movff	get_temperature@temp+2,?_get_temperature+2
  1259  000A7E  0012               	return	
  1260  000A80                     __end_of_get_temperature:
  1261                           	opt stack 0
  1262                           tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           status	equ	0xFD8
  1267                           
  1268 ;; *************** function _log *****************
  1269 ;; Defined at:
  1270 ;;		line 5 in file "/opt/microchip/xc8/v1.31/sources/common/log.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  x               3   70[COMRAM] float 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  exponent        2   73[COMRAM] int 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  3   70[COMRAM] int 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1284 ;;      Params:         3       0       0       0       0       0       0       0       0
  1285 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1287 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1288 ;;Total ram usage:        5 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    3
  1291 ;; This function calls:
  1292 ;;		___awtoft
  1293 ;;		___ftadd
  1294 ;;		___ftmul
  1295 ;;		_eval_poly
  1296 ;;		_frexp
  1297 ;; This function is called by:
  1298 ;;		_get_temperature
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text5
  1303  000C38                     __ptext5:
  1304                           	opt stack 0
  1305  000C38                     _log:
  1306                           	opt stack 26
  1307                           
  1308                           ;incstack = 0
  1309  000C38  5049               	movf	log@x+2,w,c
  1310  000C3A  0A80               	xorlw	128
  1311  000C3C  0F80               	addlw	128
  1312  000C3E  E105               	bnz	u1005
  1313  000C40  0E00               	movlw	0
  1314  000C42  5C48               	subwf	log@x+1,w,c
  1315  000C44  E102               	bnz	u1005
  1316  000C46  0E00               	movlw	0
  1317  000C48  5C47               	subwf	log@x,w,c
  1318  000C4A                     u1005:
  1319  000C4A  B0D8               	btfsc	status,0,c
  1320  000C4C  D00B               	goto	l2004
  1321  000C4E  0E00               	movlw	0
  1322  000C50  6E5B               	movwf	_errno+1,c
  1323  000C52  0E21               	movlw	33
  1324  000C54  6E5A               	movwf	_errno,c
  1325  000C56  0E00               	movlw	0
  1326  000C58  6E47               	movwf	?_log,c
  1327  000C5A  0E00               	movlw	0
  1328  000C5C  6E48               	movwf	?_log+1,c
  1329  000C5E  0E00               	movlw	0
  1330  000C60  6E49               	movwf	?_log+2,c
  1331  000C62  0012               	return	
  1332  000C64                     l2004:
  1333  000C64  0E7F               	movlw	127
  1334  000C66  1449               	andwf	log@x+2,w,c
  1335  000C68  1048               	iorwf	log@x+1,w,c
  1336  000C6A  1047               	iorwf	log@x,w,c
  1337  000C6C  A4D8               	btfss	status,2,c
  1338  000C6E  D00B               	goto	l2010
  1339  000C70  0E00               	movlw	0
  1340  000C72  6E5B               	movwf	_errno+1,c
  1341  000C74  0E22               	movlw	34
  1342  000C76  6E5A               	movwf	_errno,c
  1343  000C78  0E00               	movlw	0
  1344  000C7A  6E47               	movwf	?_log,c
  1345  000C7C  0E00               	movlw	0
  1346  000C7E  6E48               	movwf	?_log+1,c
  1347  000C80  0E00               	movlw	0
  1348  000C82  6E49               	movwf	?_log+2,c
  1349  000C84  0012               	return	
  1350  000C86                     l2010:
  1351  000C86  0E00               	movlw	0
  1352  000C88  6E2F               	movwf	___ftmul@f2,c
  1353  000C8A  0E00               	movlw	0
  1354  000C8C  6E30               	movwf	___ftmul@f2+1,c
  1355  000C8E  0E40               	movlw	64
  1356  000C90  6E31               	movwf	___ftmul@f2+2,c
  1357  000C92  0E00               	movlw	high log@exponent
  1358  000C94  6E05               	movwf	frexp@eptr+1,c
  1359  000C96  0E4A               	movlw	low log@exponent
  1360  000C98  6E04               	movwf	frexp@eptr,c
  1361  000C9A  C047  F001         	movff	log@x,frexp@value
  1362  000C9E  C048  F002         	movff	log@x+1,frexp@value+1
  1363  000CA2  C049  F003         	movff	log@x+2,frexp@value+2
  1364  000CA6  EC5F  F009         	call	_frexp	;wreg free
  1365  000CAA  C001  F02C         	movff	?_frexp,___ftmul@f1
  1366  000CAE  C002  F02D         	movff	?_frexp+1,___ftmul@f1+1
  1367  000CB2  C003  F02E         	movff	?_frexp+2,___ftmul@f1+2
  1368  000CB6  EC38  F007         	call	___ftmul	;wreg free
  1369  000CBA  C02C  F011         	movff	?___ftmul,___ftadd@f1
  1370  000CBE  C02D  F012         	movff	?___ftmul+1,___ftadd@f1+1
  1371  000CC2  C02E  F013         	movff	?___ftmul+2,___ftadd@f1+2
  1372  000CC6  0E00               	movlw	0
  1373  000CC8  6E14               	movwf	___ftadd@f2,c
  1374  000CCA  0E80               	movlw	128
  1375  000CCC  6E15               	movwf	___ftadd@f2+1,c
  1376  000CCE  0EBF               	movlw	191
  1377  000CD0  6E16               	movwf	___ftadd@f2+2,c
  1378  000CD2  EC40  F005         	call	___ftadd	;wreg free
  1379  000CD6  C011  F047         	movff	?___ftadd,log@x
  1380  000CDA  C012  F048         	movff	?___ftadd+1,log@x+1
  1381  000CDE  C013  F049         	movff	?___ftadd+2,log@x+2
  1382  000CE2  064A               	decf	log@exponent,f,c
  1383  000CE4  A0D8               	btfss	status,0,c
  1384  000CE6  064B               	decf	log@exponent+1,f,c
  1385  000CE8  C047  F03B         	movff	log@x,eval_poly@x
  1386  000CEC  C048  F03C         	movff	log@x+1,eval_poly@x+1
  1387  000CF0  C049  F03D         	movff	log@x+2,eval_poly@x+2
  1388  000CF4  0E08               	movlw	high log@coeff
  1389  000CF6  6E3F               	movwf	eval_poly@d+1,c
  1390  000CF8  0E0E               	movlw	low log@coeff
  1391  000CFA  6E3E               	movwf	eval_poly@d,c
  1392  000CFC  0E00               	movlw	0
  1393  000CFE  6E41               	movwf	eval_poly@n+1,c
  1394  000D00  0E08               	movlw	8
  1395  000D02  6E40               	movwf	eval_poly@n,c
  1396  000D04  ECA2  F008         	call	_eval_poly	;wreg free
  1397  000D08  C03B  F047         	movff	?_eval_poly,log@x
  1398  000D0C  C03C  F048         	movff	?_eval_poly+1,log@x+1
  1399  000D10  C03D  F049         	movff	?_eval_poly+2,log@x+2
  1400  000D14  0E72               	movlw	114
  1401  000D16  6E2F               	movwf	___ftmul@f2,c
  1402  000D18  0E31               	movlw	49
  1403  000D1A  6E30               	movwf	___ftmul@f2+1,c
  1404  000D1C  0E3F               	movlw	63
  1405  000D1E  6E31               	movwf	___ftmul@f2+2,c
  1406  000D20  C04A  F009         	movff	log@exponent,___awtoft@c
  1407  000D24  C04B  F00A         	movff	log@exponent+1,___awtoft@c+1
  1408  000D28  ECF1  F009         	call	___awtoft	;wreg free
  1409  000D2C  C009  F02C         	movff	?___awtoft,___ftmul@f1
  1410  000D30  C00A  F02D         	movff	?___awtoft+1,___ftmul@f1+1
  1411  000D34  C00B  F02E         	movff	?___awtoft+2,___ftmul@f1+2
  1412  000D38  EC38  F007         	call	___ftmul	;wreg free
  1413  000D3C  C02C  F011         	movff	?___ftmul,___ftadd@f1
  1414  000D40  C02D  F012         	movff	?___ftmul+1,___ftadd@f1+1
  1415  000D44  C02E  F013         	movff	?___ftmul+2,___ftadd@f1+2
  1416  000D48  C047  F014         	movff	log@x,___ftadd@f2
  1417  000D4C  C048  F015         	movff	log@x+1,___ftadd@f2+1
  1418  000D50  C049  F016         	movff	log@x+2,___ftadd@f2+2
  1419  000D54  EC40  F005         	call	___ftadd	;wreg free
  1420  000D58  C011  F047         	movff	?___ftadd,?_log
  1421  000D5C  C012  F048         	movff	?___ftadd+1,?_log+1
  1422  000D60  C013  F049         	movff	?___ftadd+2,?_log+2
  1423  000D64  0012               	return	
  1424  000D66                     __end_of_log:
  1425                           	opt stack 0
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           status	equ	0xFD8
  1431                           
  1432 ;; *************** function _frexp *****************
  1433 ;; Defined at:
  1434 ;;		line 254 in file "/opt/microchip/xc8/v1.31/sources/common/frexp.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  value           3    0[COMRAM] int 
  1437 ;;  eptr            2    3[COMRAM] PTR int 
  1438 ;;		 -> log@exponent(2), 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  3    0[COMRAM] PTR int 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1450 ;;      Params:         5       0       0       0       0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1452 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1453 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1454 ;;Total ram usage:        8 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_log
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text6
  1464  0012BE                     __ptext6:
  1465                           	opt stack 0
  1466  0012BE                     _frexp:
  1467                           	opt stack 28
  1468                           
  1469                           ;incstack = 0
  1470  0012BE  0E7F               	movlw	127
  1471  0012C0  1403               	andwf	frexp@value+2,w,c
  1472  0012C2  1002               	iorwf	frexp@value+1,w,c
  1473  0012C4  1001               	iorwf	frexp@value,w,c
  1474  0012C6  A4D8               	btfss	status,2,c
  1475  0012C8  D00F               	goto	l1972
  1476  0012CA  C004  FFD9         	movff	frexp@eptr,fsr2l
  1477  0012CE  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1478  0012D2  0E00               	movlw	0
  1479  0012D4  6EDE               	movwf	postinc2,c
  1480  0012D6  0E00               	movlw	0
  1481  0012D8  6EDD               	movwf	postdec2,c
  1482  0012DA  0E00               	movlw	0
  1483  0012DC  6E01               	movwf	?_frexp,c
  1484  0012DE  0E00               	movlw	0
  1485  0012E0  6E02               	movwf	?_frexp+1,c
  1486  0012E2  0E00               	movlw	0
  1487  0012E4  6E03               	movwf	?_frexp+2,c
  1488  0012E6  0012               	return	
  1489  0012E8                     l1972:
  1490  0012E8  5003               	movf	frexp@value+2,w,c
  1491  0012EA  0B7F               	andlw	127
  1492  0012EC  6E06               	movwf	??_frexp& (0+255),c
  1493  0012EE  90D8               	bcf	status,0,c
  1494  0012F0  3406               	rlcf	??_frexp,w,c
  1495  0012F2  6E07               	movwf	(??_frexp+1)& (0+255),c
  1496  0012F4  6A08               	clrf	(??_frexp+2)& (0+255),c
  1497  0012F6  3608               	rlcf	(??_frexp+2)& (0+255),f,c
  1498  0012F8  C004  FFD9         	movff	frexp@eptr,fsr2l
  1499  0012FC  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1500  001300  C007  FFDE         	movff	??_frexp+1,postinc2
  1501  001304  C008  FFDD         	movff	??_frexp+2,postdec2
  1502  001308  AE02               	btfss	frexp@value+1,7,c
  1503  00130A  D003               	goto	u970
  1504  00130C  6A06               	clrf	??_frexp& (0+255),c
  1505  00130E  2A06               	incf	??_frexp& (0+255),f,c
  1506  001310  D001               	goto	u978
  1507  001312                     u970:
  1508  001312  6A06               	clrf	??_frexp& (0+255),c
  1509  001314                     u978:
  1510  001314  5006               	movf	??_frexp,w,c
  1511  001316  C004  FFD9         	movff	frexp@eptr,fsr2l
  1512  00131A  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1513  00131E  12DE               	iorwf	postinc2,f,c
  1514  001320  0E00               	movlw	0
  1515  001322  12DD               	iorwf	postdec2,f,c
  1516  001324  C004  FFD9         	movff	frexp@eptr,fsr2l
  1517  001328  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1518  00132C  0E82               	movlw	130
  1519  00132E  26DE               	addwf	postinc2,f,c
  1520  001330  0EFF               	movlw	255
  1521  001332  22DD               	addwfc	postdec2,f,c
  1522  001334  8003               	bsf	frexp@value+2,0,c
  1523  001336  8203               	bsf	frexp@value+2,1,c
  1524  001338  8403               	bsf	frexp@value+2,2,c
  1525  00133A  8603               	bsf	frexp@value+2,3,c
  1526  00133C  8803               	bsf	frexp@value+2,4,c
  1527  00133E  8A03               	bsf	frexp@value+2,5,c
  1528  001340  9C03               	bcf	frexp@value+2,6,c
  1529  001342  9E02               	bcf	frexp@value+1,7,c
  1530  001344  C001  F001         	movff	frexp@value,?_frexp
  1531  001348  C002  F002         	movff	frexp@value+1,?_frexp+1
  1532  00134C  C003  F003         	movff	frexp@value+2,?_frexp+2
  1533  001350  0012               	return	
  1534  001352                     __end_of_frexp:
  1535                           	opt stack 0
  1536                           tblptru	equ	0xFF8
  1537                           tblptrh	equ	0xFF7
  1538                           tblptrl	equ	0xFF6
  1539                           tablat	equ	0xFF5
  1540                           postinc2	equ	0xFDE
  1541                           postdec2	equ	0xFDD
  1542                           fsr2h	equ	0xFDA
  1543                           fsr2l	equ	0xFD9
  1544                           status	equ	0xFD8
  1545                           
  1546 ;; *************** function _eval_poly *****************
  1547 ;; Defined at:
  1548 ;;		line 4 in file "/opt/microchip/xc8/v1.31/sources/common/evalpoly.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  x               3   58[COMRAM] PTR int 
  1551 ;;  d               2   61[COMRAM] PTR const 
  1552 ;;		 -> log@coeff(27), 
  1553 ;;  n               2   63[COMRAM] int 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  res             3   67[COMRAM] int 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  3   58[COMRAM] int 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1565 ;;      Params:         7       0       0       0       0       0       0       0       0
  1566 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1567 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1568 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1569 ;;Total ram usage:       12 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    2
  1572 ;; This function calls:
  1573 ;;		___ftadd
  1574 ;;		___ftmul
  1575 ;;		___wmul
  1576 ;; This function is called by:
  1577 ;;		_log
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text7
  1582  001144                     __ptext7:
  1583                           	opt stack 0
  1584  001144                     _eval_poly:
  1585                           	opt stack 26
  1586                           
  1587                           ;incstack = 0
  1588  001144  C040  F001         	movff	eval_poly@n,___wmul@multiplier
  1589  001148  C041  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  1590  00114C  0E00               	movlw	0
  1591  00114E  6E04               	movwf	___wmul@multiplicand+1,c
  1592  001150  0E03               	movlw	3
  1593  001152  6E03               	movwf	___wmul@multiplicand,c
  1594  001154  EC3B  F00A         	call	___wmul	;wreg free
  1595  001158  C03E  F042         	movff	eval_poly@d,??_eval_poly
  1596  00115C  C03F  F043         	movff	eval_poly@d+1,??_eval_poly+1
  1597  001160  5001               	movf	?___wmul,w,c
  1598  001162  2642               	addwf	??_eval_poly,f,c
  1599  001164  5002               	movf	?___wmul+1,w,c
  1600  001166  2243               	addwfc	??_eval_poly+1,f,c
  1601  001168  C042  FFF6         	movff	??_eval_poly,tblptrl
  1602  00116C  C043  FFF7         	movff	??_eval_poly+1,tblptrh
  1603  001170  0009               	tblrd		*+
  1604  001172  CFF5 F044          	movff	tablat,eval_poly@res
  1605  001176  0009               	tblrd		*+
  1606  001178  CFF5 F045          	movff	tablat,eval_poly@res+1
  1607  00117C  000A               	tblrd		*-
  1608  00117E  CFF5 F046          	movff	tablat,eval_poly@res+2
  1609  001182  D03E               	goto	l1988
  1610  001184                     l1986:
  1611  001184  C044  F02F         	movff	eval_poly@res,___ftmul@f2
  1612  001188  C045  F030         	movff	eval_poly@res+1,___ftmul@f2+1
  1613  00118C  C046  F031         	movff	eval_poly@res+2,___ftmul@f2+2
  1614  001190  C03B  F02C         	movff	eval_poly@x,___ftmul@f1
  1615  001194  C03C  F02D         	movff	eval_poly@x+1,___ftmul@f1+1
  1616  001198  C03D  F02E         	movff	eval_poly@x+2,___ftmul@f1+2
  1617  00119C  EC38  F007         	call	___ftmul	;wreg free
  1618  0011A0  C02C  F011         	movff	?___ftmul,___ftadd@f1
  1619  0011A4  C02D  F012         	movff	?___ftmul+1,___ftadd@f1+1
  1620  0011A8  C02E  F013         	movff	?___ftmul+2,___ftadd@f1+2
  1621  0011AC  0E00               	movlw	0
  1622  0011AE  6E04               	movwf	___wmul@multiplicand+1,c
  1623  0011B0  0E03               	movlw	3
  1624  0011B2  6E03               	movwf	___wmul@multiplicand,c
  1625  0011B4  0640               	decf	eval_poly@n,f,c
  1626  0011B6  A0D8               	btfss	status,0,c
  1627  0011B8  0641               	decf	eval_poly@n+1,f,c
  1628  0011BA  C040  F001         	movff	eval_poly@n,___wmul@multiplier
  1629  0011BE  C041  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  1630  0011C2  EC3B  F00A         	call	___wmul	;wreg free
  1631  0011C6  C03E  F042         	movff	eval_poly@d,??_eval_poly
  1632  0011CA  C03F  F043         	movff	eval_poly@d+1,??_eval_poly+1
  1633  0011CE  5001               	movf	?___wmul,w,c
  1634  0011D0  2642               	addwf	??_eval_poly,f,c
  1635  0011D2  5002               	movf	?___wmul+1,w,c
  1636  0011D4  2243               	addwfc	??_eval_poly+1,f,c
  1637  0011D6  C042  FFF6         	movff	??_eval_poly,tblptrl
  1638  0011DA  C043  FFF7         	movff	??_eval_poly+1,tblptrh
  1639  0011DE  0009               	tblrd		*+
  1640  0011E0  CFF5 F014          	movff	tablat,___ftadd@f2
  1641  0011E4  0009               	tblrd		*+
  1642  0011E6  CFF5 F015          	movff	tablat,___ftadd@f2+1
  1643  0011EA  000A               	tblrd		*-
  1644  0011EC  CFF5 F016          	movff	tablat,___ftadd@f2+2
  1645  0011F0  EC40  F005         	call	___ftadd	;wreg free
  1646  0011F4  C011  F044         	movff	?___ftadd,eval_poly@res
  1647  0011F8  C012  F045         	movff	?___ftadd+1,eval_poly@res+1
  1648  0011FC  C013  F046         	movff	?___ftadd+2,eval_poly@res+2
  1649  001200                     l1988:
  1650  001200  5041               	movf	eval_poly@n+1,w,c
  1651  001202  1040               	iorwf	eval_poly@n,w,c
  1652  001204  A4D8               	btfss	status,2,c
  1653  001206  D7BE               	goto	l1986
  1654  001208  C044  F03B         	movff	eval_poly@res,?_eval_poly
  1655  00120C  C045  F03C         	movff	eval_poly@res+1,?_eval_poly+1
  1656  001210  C046  F03D         	movff	eval_poly@res+2,?_eval_poly+2
  1657  001214  0012               	return	
  1658  001216                     __end_of_eval_poly:
  1659                           	opt stack 0
  1660                           tblptru	equ	0xFF8
  1661                           tblptrh	equ	0xFF7
  1662                           tblptrl	equ	0xFF6
  1663                           tablat	equ	0xFF5
  1664                           postinc2	equ	0xFDE
  1665                           postdec2	equ	0xFDD
  1666                           fsr2h	equ	0xFDA
  1667                           fsr2l	equ	0xFD9
  1668                           status	equ	0xFD8
  1669                           
  1670 ;; *************** function ___wmul *****************
  1671 ;; Defined at:
  1672 ;;		line 3 in file "/opt/microchip/xc8/v1.31/sources/common/wmul.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  multiplier      2    0[COMRAM] unsigned int 
  1675 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  product         2    4[COMRAM] unsigned int 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  2    0[COMRAM] unsigned int 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0, prodl, prodh
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1687 ;;      Params:         4       0       0       0       0       0       0       0       0
  1688 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1690 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1691 ;;Total ram usage:        6 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_get_temperature
  1697 ;;		_eval_poly
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text8
  1702  001476                     __ptext8:
  1703                           	opt stack 0
  1704  001476                     ___wmul:
  1705                           	opt stack 27
  1706                           
  1707                           ;incstack = 0
  1708  001476  5001               	movf	___wmul@multiplier,w,c
  1709  001478  0203               	mulwf	___wmul@multiplicand,c
  1710  00147A  CFF3 F005          	movff	prodl,___wmul@product
  1711  00147E  CFF4 F006          	movff	prodh,___wmul@product+1
  1712  001482  5001               	movf	___wmul@multiplier,w,c
  1713  001484  0204               	mulwf	___wmul@multiplicand+1,c
  1714  001486  CFF3 FFF4          	movff	prodl,prodh
  1715  00148A  6AF3               	clrf	prodl,c
  1716  00148C  50F3               	movf	prodl,w,c
  1717  00148E  2605               	addwf	___wmul@product,f,c
  1718  001490  50F4               	movf	prodh,w,c
  1719  001492  2206               	addwfc	___wmul@product+1,f,c
  1720  001494  5002               	movf	___wmul@multiplier+1,w,c
  1721  001496  0203               	mulwf	___wmul@multiplicand,c
  1722  001498  CFF3 FFF4          	movff	prodl,prodh
  1723  00149C  6AF3               	clrf	prodl,c
  1724  00149E  50F3               	movf	prodl,w,c
  1725  0014A0  2605               	addwf	___wmul@product,f,c
  1726  0014A2  50F4               	movf	prodh,w,c
  1727  0014A4  2206               	addwfc	___wmul@product+1,f,c
  1728  0014A6  C005  F001         	movff	___wmul@product,?___wmul
  1729  0014AA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1730  0014AE  0012               	return	
  1731  0014B0                     __end_of___wmul:
  1732                           	opt stack 0
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           prodh	equ	0xFF4
  1738                           prodl	equ	0xFF3
  1739                           postinc2	equ	0xFDE
  1740                           postdec2	equ	0xFDD
  1741                           fsr2h	equ	0xFDA
  1742                           fsr2l	equ	0xFD9
  1743                           status	equ	0xFD8
  1744                           
  1745 ;; *************** function ___ftmul *****************
  1746 ;; Defined at:
  1747 ;;		line 51 in file "/opt/microchip/xc8/v1.31/sources/common/ftmul.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  f1              3   43[COMRAM] float 
  1750 ;;  f2              3   46[COMRAM] float 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  f3_as_produc    3   53[COMRAM] unsigned um
  1753 ;;  sign            1   57[COMRAM] unsigned char 
  1754 ;;  cntr            1   56[COMRAM] unsigned char 
  1755 ;;  exp             1   52[COMRAM] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  3   43[COMRAM] float 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1765 ;;      Params:         6       0       0       0       0       0       0       0       0
  1766 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1767 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1768 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1769 ;;Total ram usage:       15 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    1
  1772 ;; This function calls:
  1773 ;;		___ftpack
  1774 ;; This function is called by:
  1775 ;;		_get_temperature
  1776 ;;		_set_fan_speed
  1777 ;;		_log
  1778 ;;		_eval_poly
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text9
  1783  000E70                     __ptext9:
  1784                           	opt stack 0
  1785  000E70                     ___ftmul:
  1786                           	opt stack 28
  1787                           
  1788                           ;incstack = 0
  1789  000E70  C02E  F032         	movff	___ftmul@f1+2,??___ftmul
  1790  000E74  6A33               	clrf	(??___ftmul+1)& (0+255),c
  1791  000E76  6A34               	clrf	(??___ftmul+2)& (0+255),c
  1792  000E78  342D               	rlcf	___ftmul@f1+1,w,c
  1793  000E7A  3632               	rlcf	??___ftmul& (0+255),f,c
  1794  000E7C  E301               	bnc	u891
  1795  000E7E  8033               	bsf	(??___ftmul+1)& (0+255),0,c
  1796  000E80                     u891:
  1797  000E80  5032               	movf	??___ftmul,w,c
  1798  000E82  6E35               	movwf	___ftmul@exp,c
  1799  000E84  6635               	tstfsz	___ftmul@exp& (0+255),c
  1800  000E86  D007               	goto	l1904
  1801  000E88  0E00               	movlw	0
  1802  000E8A  6E2C               	movwf	?___ftmul,c
  1803  000E8C  0E00               	movlw	0
  1804  000E8E  6E2D               	movwf	?___ftmul+1,c
  1805  000E90  0E00               	movlw	0
  1806  000E92  6E2E               	movwf	?___ftmul+2,c
  1807  000E94  0012               	return	
  1808  000E96                     l1904:
  1809  000E96  C031  F032         	movff	___ftmul@f2+2,??___ftmul
  1810  000E9A  6A33               	clrf	(??___ftmul+1)& (0+255),c
  1811  000E9C  6A34               	clrf	(??___ftmul+2)& (0+255),c
  1812  000E9E  3430               	rlcf	___ftmul@f2+1,w,c
  1813  000EA0  3632               	rlcf	??___ftmul& (0+255),f,c
  1814  000EA2  E301               	bnc	u911
  1815  000EA4  8033               	bsf	(??___ftmul+1)& (0+255),0,c
  1816  000EA6                     u911:
  1817  000EA6  5032               	movf	??___ftmul,w,c
  1818  000EA8  6E3A               	movwf	___ftmul@sign,c
  1819  000EAA  663A               	tstfsz	___ftmul@sign& (0+255),c
  1820  000EAC  D007               	goto	l1910
  1821  000EAE  0E00               	movlw	0
  1822  000EB0  6E2C               	movwf	?___ftmul,c
  1823  000EB2  0E00               	movlw	0
  1824  000EB4  6E2D               	movwf	?___ftmul+1,c
  1825  000EB6  0E00               	movlw	0
  1826  000EB8  6E2E               	movwf	?___ftmul+2,c
  1827  000EBA  0012               	return	
  1828  000EBC                     l1910:
  1829  000EBC  503A               	movf	___ftmul@sign,w,c
  1830  000EBE  0F7B               	addlw	123
  1831  000EC0  2635               	addwf	___ftmul@exp,f,c
  1832  000EC2  C02E  F03A         	movff	___ftmul@f1+2,___ftmul@sign
  1833  000EC6  5031               	movf	___ftmul@f2+2,w,c
  1834  000EC8  1A3A               	xorwf	___ftmul@sign,f,c
  1835  000ECA  0E80               	movlw	128
  1836  000ECC  163A               	andwf	___ftmul@sign,f,c
  1837  000ECE  8E2D               	bsf	___ftmul@f1+1,7,c
  1838  000ED0  8E30               	bsf	___ftmul@f2+1,7,c
  1839  000ED2  0EFF               	movlw	255
  1840  000ED4  162F               	andwf	___ftmul@f2,f,c
  1841  000ED6  0EFF               	movlw	255
  1842  000ED8  1630               	andwf	___ftmul@f2+1,f,c
  1843  000EDA  0E00               	movlw	0
  1844  000EDC  1631               	andwf	___ftmul@f2+2,f,c
  1845  000EDE  0E00               	movlw	0
  1846  000EE0  6E36               	movwf	___ftmul@f3_as_product,c
  1847  000EE2  0E00               	movlw	0
  1848  000EE4  6E37               	movwf	___ftmul@f3_as_product+1,c
  1849  000EE6  0E00               	movlw	0
  1850  000EE8  6E38               	movwf	___ftmul@f3_as_product+2,c
  1851  000EEA  6E32               	movwf	??___ftmul& (0+255),c
  1852  000EEC  0E07               	movlw	7
  1853  000EEE  6E39               	movwf	___ftmul@cntr,c
  1854  000EF0  5032               	movf	??___ftmul& (0+255),w,c
  1855  000EF2                     l1924:
  1856  000EF2  A02C               	btfss	___ftmul@f1,0,c
  1857  000EF4  D006               	goto	l1928
  1858  000EF6  502F               	movf	___ftmul@f2,w,c
  1859  000EF8  2636               	addwf	___ftmul@f3_as_product,f,c
  1860  000EFA  5030               	movf	___ftmul@f2+1,w,c
  1861  000EFC  2237               	addwfc	___ftmul@f3_as_product+1,f,c
  1862  000EFE  5031               	movf	___ftmul@f2+2,w,c
  1863  000F00  2238               	addwfc	___ftmul@f3_as_product+2,f,c
  1864  000F02                     l1928:
  1865  000F02  90D8               	bcf	status,0,c
  1866  000F04  322E               	rrcf	___ftmul@f1+2,f,c
  1867  000F06  322D               	rrcf	___ftmul@f1+1,f,c
  1868  000F08  322C               	rrcf	___ftmul@f1,f,c
  1869  000F0A  90D8               	bcf	status,0,c
  1870  000F0C  362F               	rlcf	___ftmul@f2,f,c
  1871  000F0E  3630               	rlcf	___ftmul@f2+1,f,c
  1872  000F10  3631               	rlcf	___ftmul@f2+2,f,c
  1873  000F12  2E39               	decfsz	___ftmul@cntr,f,c
  1874  000F14  D7EE               	goto	l1924
  1875  000F16  6E32               	movwf	??___ftmul& (0+255),c
  1876  000F18  0E09               	movlw	9
  1877  000F1A  6E39               	movwf	___ftmul@cntr,c
  1878  000F1C  5032               	movf	??___ftmul& (0+255),w,c
  1879  000F1E                     l1934:
  1880  000F1E  A02C               	btfss	___ftmul@f1,0,c
  1881  000F20  D006               	goto	l1938
  1882  000F22  502F               	movf	___ftmul@f2,w,c
  1883  000F24  2636               	addwf	___ftmul@f3_as_product,f,c
  1884  000F26  5030               	movf	___ftmul@f2+1,w,c
  1885  000F28  2237               	addwfc	___ftmul@f3_as_product+1,f,c
  1886  000F2A  5031               	movf	___ftmul@f2+2,w,c
  1887  000F2C  2238               	addwfc	___ftmul@f3_as_product+2,f,c
  1888  000F2E                     l1938:
  1889  000F2E  90D8               	bcf	status,0,c
  1890  000F30  322E               	rrcf	___ftmul@f1+2,f,c
  1891  000F32  322D               	rrcf	___ftmul@f1+1,f,c
  1892  000F34  322C               	rrcf	___ftmul@f1,f,c
  1893  000F36  90D8               	bcf	status,0,c
  1894  000F38  3238               	rrcf	___ftmul@f3_as_product+2,f,c
  1895  000F3A  3237               	rrcf	___ftmul@f3_as_product+1,f,c
  1896  000F3C  3236               	rrcf	___ftmul@f3_as_product,f,c
  1897  000F3E  2E39               	decfsz	___ftmul@cntr,f,c
  1898  000F40  D7EE               	goto	l1934
  1899  000F42  C036  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1900  000F46  C037  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1901  000F4A  C038  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1902  000F4E  C035  F004         	movff	___ftmul@exp,___ftpack@exp
  1903  000F52  C03A  F005         	movff	___ftmul@sign,___ftpack@sign
  1904  000F56  EC0B  F009         	call	___ftpack	;wreg free
  1905  000F5A  C001  F02C         	movff	?___ftpack,?___ftmul
  1906  000F5E  C002  F02D         	movff	?___ftpack+1,?___ftmul+1
  1907  000F62  C003  F02E         	movff	?___ftpack+2,?___ftmul+2
  1908  000F66  0012               	return	
  1909  000F68                     __end_of___ftmul:
  1910                           	opt stack 0
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           prodh	equ	0xFF4
  1916                           prodl	equ	0xFF3
  1917                           postinc2	equ	0xFDE
  1918                           postdec2	equ	0xFDD
  1919                           fsr2h	equ	0xFDA
  1920                           fsr2l	equ	0xFD9
  1921                           status	equ	0xFD8
  1922                           
  1923 ;; *************** function ___ftadd *****************
  1924 ;; Defined at:
  1925 ;;		line 86 in file "/opt/microchip/xc8/v1.31/sources/common/ftadd.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  f1              3   16[COMRAM] float 
  1928 ;;  f2              3   19[COMRAM] float 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  exp1            1   27[COMRAM] unsigned char 
  1931 ;;  exp2            1   26[COMRAM] unsigned char 
  1932 ;;  sign            1   25[COMRAM] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  3   16[COMRAM] float 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1942 ;;      Params:         6       0       0       0       0       0       0       0       0
  1943 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1944 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1945 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1946 ;;Total ram usage:       12 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    1
  1949 ;; This function calls:
  1950 ;;		___ftpack
  1951 ;; This function is called by:
  1952 ;;		_get_temperature
  1953 ;;		_log
  1954 ;;		_eval_poly
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text10
  1959  000A80                     __ptext10:
  1960                           	opt stack 0
  1961  000A80                     ___ftadd:
  1962                           	opt stack 26
  1963                           
  1964                           ;incstack = 0
  1965  000A80  C013  F017         	movff	___ftadd@f1+2,??___ftadd
  1966  000A84  6A18               	clrf	(??___ftadd+1)& (0+255),c
  1967  000A86  6A19               	clrf	(??___ftadd+2)& (0+255),c
  1968  000A88  3412               	rlcf	___ftadd@f1+1,w,c
  1969  000A8A  3617               	rlcf	??___ftadd& (0+255),f,c
  1970  000A8C  E301               	bnc	u681
  1971  000A8E  8018               	bsf	(??___ftadd+1)& (0+255),0,c
  1972  000A90                     u681:
  1973  000A90  5017               	movf	??___ftadd,w,c
  1974  000A92  6E1C               	movwf	___ftadd@exp1,c
  1975  000A94  C016  F017         	movff	___ftadd@f2+2,??___ftadd
  1976  000A98  6A18               	clrf	(??___ftadd+1)& (0+255),c
  1977  000A9A  6A19               	clrf	(??___ftadd+2)& (0+255),c
  1978  000A9C  3415               	rlcf	___ftadd@f2+1,w,c
  1979  000A9E  3617               	rlcf	??___ftadd& (0+255),f,c
  1980  000AA0  E301               	bnc	u691
  1981  000AA2  8018               	bsf	(??___ftadd+1)& (0+255),0,c
  1982  000AA4                     u691:
  1983  000AA4  5017               	movf	??___ftadd,w,c
  1984  000AA6  6E1B               	movwf	___ftadd@exp2,c
  1985  000AA8  501C               	movf	___ftadd@exp1,w,c
  1986  000AAA  B4D8               	btfsc	status,2,c
  1987  000AAC  D00C               	goto	l395
  1988  000AAE  501B               	movf	___ftadd@exp2,w,c
  1989  000AB0  5C1C               	subwf	___ftadd@exp1,w,c
  1990  000AB2  B0D8               	btfsc	status,0,c
  1991  000AB4  D00F               	goto	l1836
  1992  000AB6  501C               	movf	___ftadd@exp1,w,c
  1993  000AB8  0800               	sublw	0
  1994  000ABA  241B               	addwf	___ftadd@exp2,w,c
  1995  000ABC  6E17               	movwf	??___ftadd& (0+255),c
  1996  000ABE  0E19               	movlw	25
  1997  000AC0  5C17               	subwf	??___ftadd,w,c
  1998  000AC2  A0D8               	btfss	status,0,c
  1999  000AC4  D007               	goto	l1836
  2000  000AC6                     l395:
  2001  000AC6  C014  F011         	movff	___ftadd@f2,?___ftadd
  2002  000ACA  C015  F012         	movff	___ftadd@f2+1,?___ftadd+1
  2003  000ACE  C016  F013         	movff	___ftadd@f2+2,?___ftadd+2
  2004  000AD2  0012               	return	
  2005  000AD4                     l1836:
  2006  000AD4  501B               	movf	___ftadd@exp2,w,c
  2007  000AD6  B4D8               	btfsc	status,2,c
  2008  000AD8  D00C               	goto	l399
  2009  000ADA  501C               	movf	___ftadd@exp1,w,c
  2010  000ADC  5C1B               	subwf	___ftadd@exp2,w,c
  2011  000ADE  B0D8               	btfsc	status,0,c
  2012  000AE0  D00F               	goto	l1842
  2013  000AE2  501B               	movf	___ftadd@exp2,w,c
  2014  000AE4  0800               	sublw	0
  2015  000AE6  241C               	addwf	___ftadd@exp1,w,c
  2016  000AE8  6E17               	movwf	??___ftadd& (0+255),c
  2017  000AEA  0E19               	movlw	25
  2018  000AEC  5C17               	subwf	??___ftadd,w,c
  2019  000AEE  A0D8               	btfss	status,0,c
  2020  000AF0  D007               	goto	l1842
  2021  000AF2                     l399:
  2022  000AF2  C011  F011         	movff	___ftadd@f1,?___ftadd
  2023  000AF6  C012  F012         	movff	___ftadd@f1+1,?___ftadd+1
  2024  000AFA  C013  F013         	movff	___ftadd@f1+2,?___ftadd+2
  2025  000AFE  0012               	return	
  2026  000B00                     l1842:
  2027  000B00  6E17               	movwf	??___ftadd& (0+255),c
  2028  000B02  0E06               	movlw	6
  2029  000B04  6E1A               	movwf	___ftadd@sign,c
  2030  000B06  5017               	movf	??___ftadd& (0+255),w,c
  2031  000B08  BE13               	btfsc	___ftadd@f1+2,7,c
  2032  000B0A  8E1A               	bsf	___ftadd@sign,7,c
  2033  000B0C  BE16               	btfsc	___ftadd@f2+2,7,c
  2034  000B0E  8C1A               	bsf	___ftadd@sign,6,c
  2035  000B10  8E12               	bsf	___ftadd@f1+1,7,c
  2036  000B12  0EFF               	movlw	255
  2037  000B14  1611               	andwf	___ftadd@f1,f,c
  2038  000B16  0EFF               	movlw	255
  2039  000B18  1612               	andwf	___ftadd@f1+1,f,c
  2040  000B1A  0E00               	movlw	0
  2041  000B1C  1613               	andwf	___ftadd@f1+2,f,c
  2042  000B1E  8E15               	bsf	___ftadd@f2+1,7,c
  2043  000B20  0EFF               	movlw	255
  2044  000B22  1614               	andwf	___ftadd@f2,f,c
  2045  000B24  0EFF               	movlw	255
  2046  000B26  1615               	andwf	___ftadd@f2+1,f,c
  2047  000B28  0E00               	movlw	0
  2048  000B2A  1616               	andwf	___ftadd@f2+2,f,c
  2049  000B2C  501B               	movf	___ftadd@exp2,w,c
  2050  000B2E  5C1C               	subwf	___ftadd@exp1,w,c
  2051  000B30  B0D8               	btfsc	status,0,c
  2052  000B32  D01A               	goto	l1868
  2053  000B34                     l1858:
  2054  000B34  90D8               	bcf	status,0,c
  2055  000B36  3614               	rlcf	___ftadd@f2,f,c
  2056  000B38  3615               	rlcf	___ftadd@f2+1,f,c
  2057  000B3A  3616               	rlcf	___ftadd@f2+2,f,c
  2058  000B3C  061B               	decf	___ftadd@exp2,f,c
  2059  000B3E  501B               	movf	___ftadd@exp2,w,c
  2060  000B40  181C               	xorwf	___ftadd@exp1,w,c
  2061  000B42  B4D8               	btfsc	status,2,c
  2062  000B44  D00D               	goto	l1866
  2063  000B46  061A               	decf	___ftadd@sign,f,c
  2064  000B48  C01A  F017         	movff	___ftadd@sign,??___ftadd
  2065  000B4C  0E07               	movlw	7
  2066  000B4E  1617               	andwf	??___ftadd,f,c
  2067  000B50  B4D8               	btfsc	status,2,c
  2068  000B52  D006               	goto	l1866
  2069  000B54  D7EF               	goto	l1858
  2070  000B56                     l1864:
  2071  000B56  90D8               	bcf	status,0,c
  2072  000B58  3213               	rrcf	___ftadd@f1+2,f,c
  2073  000B5A  3212               	rrcf	___ftadd@f1+1,f,c
  2074  000B5C  3211               	rrcf	___ftadd@f1,f,c
  2075  000B5E  2A1C               	incf	___ftadd@exp1,f,c
  2076  000B60                     l1866:
  2077  000B60  501B               	movf	___ftadd@exp2,w,c
  2078  000B62  621C               	cpfseq	___ftadd@exp1,c
  2079  000B64  D7F8               	goto	l1864
  2080  000B66  D01D               	goto	l410
  2081  000B68                     l1868:
  2082  000B68  501C               	movf	___ftadd@exp1,w,c
  2083  000B6A  5C1B               	subwf	___ftadd@exp2,w,c
  2084  000B6C  B0D8               	btfsc	status,0,c
  2085  000B6E  D019               	goto	l410
  2086  000B70                     l1870:
  2087  000B70  90D8               	bcf	status,0,c
  2088  000B72  3611               	rlcf	___ftadd@f1,f,c
  2089  000B74  3612               	rlcf	___ftadd@f1+1,f,c
  2090  000B76  3613               	rlcf	___ftadd@f1+2,f,c
  2091  000B78  061C               	decf	___ftadd@exp1,f,c
  2092  000B7A  501B               	movf	___ftadd@exp2,w,c
  2093  000B7C  181C               	xorwf	___ftadd@exp1,w,c
  2094  000B7E  B4D8               	btfsc	status,2,c
  2095  000B80  D00D               	goto	l1878
  2096  000B82  061A               	decf	___ftadd@sign,f,c
  2097  000B84  C01A  F017         	movff	___ftadd@sign,??___ftadd
  2098  000B88  0E07               	movlw	7
  2099  000B8A  1617               	andwf	??___ftadd,f,c
  2100  000B8C  B4D8               	btfsc	status,2,c
  2101  000B8E  D006               	goto	l1878
  2102  000B90  D7EF               	goto	l1870
  2103  000B92                     l1876:
  2104  000B92  90D8               	bcf	status,0,c
  2105  000B94  3216               	rrcf	___ftadd@f2+2,f,c
  2106  000B96  3215               	rrcf	___ftadd@f2+1,f,c
  2107  000B98  3214               	rrcf	___ftadd@f2,f,c
  2108  000B9A  2A1B               	incf	___ftadd@exp2,f,c
  2109  000B9C                     l1878:
  2110  000B9C  501B               	movf	___ftadd@exp2,w,c
  2111  000B9E  621C               	cpfseq	___ftadd@exp1,c
  2112  000BA0  D7F8               	goto	l1876
  2113  000BA2                     l410:
  2114  000BA2  AE1A               	btfss	___ftadd@sign,7,c
  2115  000BA4  D00C               	goto	l419
  2116  000BA6  0EFF               	movlw	255
  2117  000BA8  1A11               	xorwf	___ftadd@f1,f,c
  2118  000BAA  0EFF               	movlw	255
  2119  000BAC  1A12               	xorwf	___ftadd@f1+1,f,c
  2120  000BAE  0EFF               	movlw	255
  2121  000BB0  1A13               	xorwf	___ftadd@f1+2,f,c
  2122  000BB2  0E01               	movlw	1
  2123  000BB4  2611               	addwf	___ftadd@f1,f,c
  2124  000BB6  0E00               	movlw	0
  2125  000BB8  2212               	addwfc	___ftadd@f1+1,f,c
  2126  000BBA  0E00               	movlw	0
  2127  000BBC  2213               	addwfc	___ftadd@f1+2,f,c
  2128  000BBE                     l419:
  2129  000BBE  AC1A               	btfss	___ftadd@sign,6,c
  2130  000BC0  D00C               	goto	l1884
  2131  000BC2  0EFF               	movlw	255
  2132  000BC4  1A14               	xorwf	___ftadd@f2,f,c
  2133  000BC6  0EFF               	movlw	255
  2134  000BC8  1A15               	xorwf	___ftadd@f2+1,f,c
  2135  000BCA  0EFF               	movlw	255
  2136  000BCC  1A16               	xorwf	___ftadd@f2+2,f,c
  2137  000BCE  0E01               	movlw	1
  2138  000BD0  2614               	addwf	___ftadd@f2,f,c
  2139  000BD2  0E00               	movlw	0
  2140  000BD4  2215               	addwfc	___ftadd@f2+1,f,c
  2141  000BD6  0E00               	movlw	0
  2142  000BD8  2216               	addwfc	___ftadd@f2+2,f,c
  2143  000BDA                     l1884:
  2144  000BDA  6E17               	movwf	??___ftadd& (0+255),c
  2145  000BDC  0E00               	movlw	0
  2146  000BDE  6E1A               	movwf	___ftadd@sign,c
  2147  000BE0  5017               	movf	??___ftadd& (0+255),w,c
  2148  000BE2  5011               	movf	___ftadd@f1,w,c
  2149  000BE4  2614               	addwf	___ftadd@f2,f,c
  2150  000BE6  5012               	movf	___ftadd@f1+1,w,c
  2151  000BE8  2215               	addwfc	___ftadd@f2+1,f,c
  2152  000BEA  5013               	movf	___ftadd@f1+2,w,c
  2153  000BEC  2216               	addwfc	___ftadd@f2+2,f,c
  2154  000BEE  AE16               	btfss	___ftadd@f2+2,7,c
  2155  000BF0  D010               	goto	l1894
  2156  000BF2  0EFF               	movlw	255
  2157  000BF4  1A14               	xorwf	___ftadd@f2,f,c
  2158  000BF6  0EFF               	movlw	255
  2159  000BF8  1A15               	xorwf	___ftadd@f2+1,f,c
  2160  000BFA  0EFF               	movlw	255
  2161  000BFC  1A16               	xorwf	___ftadd@f2+2,f,c
  2162  000BFE  0E01               	movlw	1
  2163  000C00  2614               	addwf	___ftadd@f2,f,c
  2164  000C02  0E00               	movlw	0
  2165  000C04  2215               	addwfc	___ftadd@f2+1,f,c
  2166  000C06  0E00               	movlw	0
  2167  000C08  2216               	addwfc	___ftadd@f2+2,f,c
  2168  000C0A  6E17               	movwf	??___ftadd& (0+255),c
  2169  000C0C  0E01               	movlw	1
  2170  000C0E  6E1A               	movwf	___ftadd@sign,c
  2171  000C10  5017               	movf	??___ftadd& (0+255),w,c
  2172  000C12                     l1894:
  2173  000C12  C014  F001         	movff	___ftadd@f2,___ftpack@arg
  2174  000C16  C015  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2175  000C1A  C016  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2176  000C1E  C01C  F004         	movff	___ftadd@exp1,___ftpack@exp
  2177  000C22  C01A  F005         	movff	___ftadd@sign,___ftpack@sign
  2178  000C26  EC0B  F009         	call	___ftpack	;wreg free
  2179  000C2A  C001  F011         	movff	?___ftpack,?___ftadd
  2180  000C2E  C002  F012         	movff	?___ftpack+1,?___ftadd+1
  2181  000C32  C003  F013         	movff	?___ftpack+2,?___ftadd+2
  2182  000C36  0012               	return	
  2183  000C38                     __end_of___ftadd:
  2184                           	opt stack 0
  2185                           tblptru	equ	0xFF8
  2186                           tblptrh	equ	0xFF7
  2187                           tblptrl	equ	0xFF6
  2188                           tablat	equ	0xFF5
  2189                           prodh	equ	0xFF4
  2190                           prodl	equ	0xFF3
  2191                           postinc2	equ	0xFDE
  2192                           postdec2	equ	0xFDD
  2193                           fsr2h	equ	0xFDA
  2194                           fsr2l	equ	0xFD9
  2195                           status	equ	0xFD8
  2196                           
  2197 ;; *************** function ___awtoft *****************
  2198 ;; Defined at:
  2199 ;;		line 32 in file "/opt/microchip/xc8/v1.31/sources/common/awtoft.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  c               2    8[COMRAM] int 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  sign            1   12[COMRAM] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  3    8[COMRAM] float 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, prodl, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2213 ;;      Params:         3       0       0       0       0       0       0       0       0
  2214 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2215 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2216 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2217 ;;Total ram usage:        5 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    1
  2220 ;; This function calls:
  2221 ;;		___ftpack
  2222 ;; This function is called by:
  2223 ;;		_set_fan_speed
  2224 ;;		_log
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text11
  2229  0013E2                     __ptext11:
  2230                           	opt stack 0
  2231  0013E2                     ___awtoft:
  2232                           	opt stack 28
  2233                           
  2234                           ;incstack = 0
  2235  0013E2  6E0C               	movwf	??___awtoft& (0+255),c
  2236  0013E4  0E00               	movlw	0
  2237  0013E6  6E0D               	movwf	___awtoft@sign,c
  2238  0013E8  500C               	movf	??___awtoft& (0+255),w,c
  2239  0013EA  500A               	movf	___awtoft@c+1,w,c
  2240  0013EC  0A80               	xorlw	128
  2241  0013EE  6EF3               	movwf	prodl,c
  2242  0013F0  0E80               	movlw	128
  2243  0013F2  5CF3               	subwf	prodl,w,c
  2244  0013F4  0E00               	movlw	0
  2245  0013F6  B4D8               	btfsc	status,2,c
  2246  0013F8  5C09               	subwf	___awtoft@c,w,c
  2247  0013FA  B0D8               	btfsc	status,0,c
  2248  0013FC  D008               	goto	l1960
  2249  0013FE  6C09               	negf	___awtoft@c,c
  2250  001400  1E0A               	comf	___awtoft@c+1,f,c
  2251  001402  B0D8               	btfsc	status,0,c
  2252  001404  2A0A               	incf	___awtoft@c+1,f,c
  2253  001406  6E0C               	movwf	??___awtoft& (0+255),c
  2254  001408  0E01               	movlw	1
  2255  00140A  6E0D               	movwf	___awtoft@sign,c
  2256  00140C  500C               	movf	??___awtoft& (0+255),w,c
  2257  00140E                     l1960:
  2258  00140E  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2259  001412  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2260  001416  6A03               	clrf	___ftpack@arg+2,c
  2261  001418  6E0C               	movwf	??___awtoft& (0+255),c
  2262  00141A  0E8E               	movlw	142
  2263  00141C  6E04               	movwf	___ftpack@exp,c
  2264  00141E  500C               	movf	??___awtoft& (0+255),w,c
  2265  001420  C00D  F005         	movff	___awtoft@sign,___ftpack@sign
  2266  001424  EC0B  F009         	call	___ftpack	;wreg free
  2267  001428  C001  F009         	movff	?___ftpack,?___awtoft
  2268  00142C  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2269  001430  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2270  001434  0012               	return	
  2271  001436                     __end_of___awtoft:
  2272                           	opt stack 0
  2273                           tblptru	equ	0xFF8
  2274                           tblptrh	equ	0xFF7
  2275                           tblptrl	equ	0xFF6
  2276                           tablat	equ	0xFF5
  2277                           prodh	equ	0xFF4
  2278                           prodl	equ	0xFF3
  2279                           postinc2	equ	0xFDE
  2280                           postdec2	equ	0xFDD
  2281                           fsr2h	equ	0xFDA
  2282                           fsr2l	equ	0xFD9
  2283                           status	equ	0xFD8
  2284                           
  2285 ;; *************** function _adc_convert *****************
  2286 ;; Defined at:
  2287 ;;		line 12 in file "ntc_temperature.h"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  channel         2    0[COMRAM] int 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  2    0[COMRAM] unsigned int 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2301 ;;      Params:         2       0       0       0       0       0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2303 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2304 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2305 ;;Total ram usage:        4 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_get_temperature
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text12
  2315  0014B0                     __ptext12:
  2316                           	opt stack 0
  2317  0014B0                     _adc_convert:
  2318                           	opt stack 29
  2319                           
  2320                           ;ntc_temperature.h: 15: ADCON0bits.CHS = channel;
  2321                           
  2322                           ;incstack = 0
  2323  0014B0  C001  F003         	movff	adc_convert@channel,??_adc_convert
  2324  0014B4  4603               	rlncf	??_adc_convert,f,c
  2325  0014B6  4603               	rlncf	??_adc_convert,f,c
  2326  0014B8  50C2               	movf	4034,w,c	;volatile
  2327  0014BA  1803               	xorwf	??_adc_convert,w,c
  2328  0014BC  0B83               	andlw	-125
  2329  0014BE  1803               	xorwf	??_adc_convert,w,c
  2330  0014C0  6EC2               	movwf	4034,c	;volatile
  2331                           
  2332                           ;ntc_temperature.h: 17: ADCON0bits.GO = 1;
  2333  0014C2  82C2               	bsf	4034,1,c	;volatile
  2334  0014C4                     l31:
  2335  0014C4  B2C2               	btfsc	4034,1,c	;volatile
  2336  0014C6  D7FE               	goto	l31
  2337                           
  2338                           ;ntc_temperature.h: 21: return(ADRESH<<8)|ADRESL;
  2339  0014C8  50C3               	movf	4035,w,c	;volatile
  2340  0014CA  CFC4 F003          	movff	4036,??_adc_convert	;volatile
  2341  0014CE  6A04               	clrf	(??_adc_convert+1)& (0+255),c
  2342  0014D0  C003  F004         	movff	??_adc_convert,??_adc_convert+1
  2343  0014D4  6A03               	clrf	??_adc_convert,c
  2344  0014D6  1003               	iorwf	??_adc_convert,w,c
  2345  0014D8  6E01               	movwf	?_adc_convert,c
  2346  0014DA  5004               	movf	??_adc_convert+1,w,c
  2347  0014DC  6E02               	movwf	?_adc_convert+1,c
  2348  0014DE  0012               	return	
  2349  0014E0                     __end_of_adc_convert:
  2350                           	opt stack 0
  2351                           tblptru	equ	0xFF8
  2352                           tblptrh	equ	0xFF7
  2353                           tblptrl	equ	0xFF6
  2354                           tablat	equ	0xFF5
  2355                           prodh	equ	0xFF4
  2356                           prodl	equ	0xFF3
  2357                           postinc2	equ	0xFDE
  2358                           postdec2	equ	0xFDD
  2359                           fsr2h	equ	0xFDA
  2360                           fsr2l	equ	0xFD9
  2361                           status	equ	0xFD8
  2362                           
  2363 ;; *************** function ___lwtoft *****************
  2364 ;; Defined at:
  2365 ;;		line 28 in file "/opt/microchip/xc8/v1.31/sources/common/lwtoft.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  c               2    8[COMRAM] unsigned int 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  3    8[COMRAM] float 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2379 ;;      Params:         3       0       0       0       0       0       0       0       0
  2380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2381 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2382 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2383 ;;Total ram usage:        5 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    1
  2386 ;; This function calls:
  2387 ;;		___ftpack
  2388 ;; This function is called by:
  2389 ;;		_get_temperature
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text13
  2394  0014E0                     __ptext13:
  2395                           	opt stack 0
  2396  0014E0                     ___lwtoft:
  2397                           	opt stack 28
  2398                           
  2399                           ;incstack = 0
  2400  0014E0  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  2401  0014E4  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  2402  0014E8  6A03               	clrf	___ftpack@arg+2,c
  2403  0014EA  6E0C               	movwf	??___lwtoft& (0+255),c
  2404  0014EC  0E8E               	movlw	142
  2405  0014EE  6E04               	movwf	___ftpack@exp,c
  2406  0014F0  500C               	movf	??___lwtoft& (0+255),w,c
  2407  0014F2  6E0D               	movwf	(??___lwtoft+1)& (0+255),c
  2408  0014F4  0E00               	movlw	0
  2409  0014F6  6E05               	movwf	___ftpack@sign,c
  2410  0014F8  500D               	movf	(??___lwtoft+1)& (0+255),w,c
  2411  0014FA  EC0B  F009         	call	___ftpack	;wreg free
  2412  0014FE  C001  F009         	movff	?___ftpack,?___lwtoft
  2413  001502  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  2414  001506  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  2415  00150A  0012               	return	
  2416  00150C                     __end_of___lwtoft:
  2417                           	opt stack 0
  2418                           tblptru	equ	0xFF8
  2419                           tblptrh	equ	0xFF7
  2420                           tblptrl	equ	0xFF6
  2421                           tablat	equ	0xFF5
  2422                           prodh	equ	0xFF4
  2423                           prodl	equ	0xFF3
  2424                           postinc2	equ	0xFDE
  2425                           postdec2	equ	0xFDD
  2426                           fsr2h	equ	0xFDA
  2427                           fsr2l	equ	0xFD9
  2428                           status	equ	0xFD8
  2429                           
  2430 ;; *************** function ___ftneg *****************
  2431 ;; Defined at:
  2432 ;;		line 15 in file "/opt/microchip/xc8/v1.31/sources/common/ftneg.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  f1              3   13[COMRAM] float 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  3   13[COMRAM] float 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2446 ;;      Params:         3       0       0       0       0       0       0       0       0
  2447 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2449 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2450 ;;Total ram usage:        3 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_get_temperature
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text14
  2460  00150C                     __ptext14:
  2461                           	opt stack 0
  2462  00150C                     ___ftneg:
  2463                           	opt stack 29
  2464                           
  2465                           ;incstack = 0
  2466  00150C  0E7F               	movlw	127
  2467  00150E  1410               	andwf	___ftneg@f1+2,w,c
  2468  001510  100F               	iorwf	___ftneg@f1+1,w,c
  2469  001512  100E               	iorwf	___ftneg@f1,w,c
  2470  001514  B4D8               	btfsc	status,2,c
  2471  001516  D006               	goto	l452
  2472  001518  0E00               	movlw	0
  2473  00151A  1A0E               	xorwf	___ftneg@f1,f,c
  2474  00151C  0E00               	movlw	0
  2475  00151E  1A0F               	xorwf	___ftneg@f1+1,f,c
  2476  001520  0E80               	movlw	128
  2477  001522  1A10               	xorwf	___ftneg@f1+2,f,c
  2478  001524                     l452:
  2479  001524  C00E  F00E         	movff	___ftneg@f1,?___ftneg
  2480  001528  C00F  F00F         	movff	___ftneg@f1+1,?___ftneg+1
  2481  00152C  C010  F010         	movff	___ftneg@f1+2,?___ftneg+2
  2482  001530  0012               	return	
  2483  001532                     __end_of___ftneg:
  2484                           	opt stack 0
  2485                           tblptru	equ	0xFF8
  2486                           tblptrh	equ	0xFF7
  2487                           tblptrl	equ	0xFF6
  2488                           tablat	equ	0xFF5
  2489                           prodh	equ	0xFF4
  2490                           prodl	equ	0xFF3
  2491                           postinc2	equ	0xFDE
  2492                           postdec2	equ	0xFDD
  2493                           fsr2h	equ	0xFDA
  2494                           fsr2l	equ	0xFD9
  2495                           status	equ	0xFD8
  2496                           
  2497 ;; *************** function ___ftdiv *****************
  2498 ;; Defined at:
  2499 ;;		line 49 in file "/opt/microchip/xc8/v1.31/sources/common/ftdiv.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  f1              3   28[COMRAM] float 
  2502 ;;  f2              3   31[COMRAM] float 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  f3              3   38[COMRAM] float 
  2505 ;;  sign            1   42[COMRAM] unsigned char 
  2506 ;;  exp             1   41[COMRAM] unsigned char 
  2507 ;;  cntr            1   37[COMRAM] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  3   28[COMRAM] float 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2517 ;;      Params:         6       0       0       0       0       0       0       0       0
  2518 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2519 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2520 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2521 ;;Total ram usage:       15 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    1
  2524 ;; This function calls:
  2525 ;;		___ftpack
  2526 ;; This function is called by:
  2527 ;;		_get_temperature
  2528 ;;		_set_fan_speed
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text15
  2533  00105E                     __ptext15:
  2534                           	opt stack 0
  2535  00105E                     ___ftdiv:
  2536                           	opt stack 28
  2537                           
  2538                           ;incstack = 0
  2539  00105E  C01F  F023         	movff	___ftdiv@f1+2,??___ftdiv
  2540  001062  6A24               	clrf	(??___ftdiv+1)& (0+255),c
  2541  001064  6A25               	clrf	(??___ftdiv+2)& (0+255),c
  2542  001066  341E               	rlcf	___ftdiv@f1+1,w,c
  2543  001068  3623               	rlcf	??___ftdiv& (0+255),f,c
  2544  00106A  E301               	bnc	u1021
  2545  00106C  8024               	bsf	(??___ftdiv+1)& (0+255),0,c
  2546  00106E                     u1021:
  2547  00106E  5023               	movf	??___ftdiv,w,c
  2548  001070  6E2A               	movwf	___ftdiv@exp,c
  2549  001072  662A               	tstfsz	___ftdiv@exp& (0+255),c
  2550  001074  D007               	goto	l2026
  2551  001076  0E00               	movlw	0
  2552  001078  6E1D               	movwf	?___ftdiv,c
  2553  00107A  0E00               	movlw	0
  2554  00107C  6E1E               	movwf	?___ftdiv+1,c
  2555  00107E  0E00               	movlw	0
  2556  001080  6E1F               	movwf	?___ftdiv+2,c
  2557  001082  0012               	return	
  2558  001084                     l2026:
  2559  001084  C022  F023         	movff	___ftdiv@f2+2,??___ftdiv
  2560  001088  6A24               	clrf	(??___ftdiv+1)& (0+255),c
  2561  00108A  6A25               	clrf	(??___ftdiv+2)& (0+255),c
  2562  00108C  3421               	rlcf	___ftdiv@f2+1,w,c
  2563  00108E  3623               	rlcf	??___ftdiv& (0+255),f,c
  2564  001090  E301               	bnc	u1041
  2565  001092  8024               	bsf	(??___ftdiv+1)& (0+255),0,c
  2566  001094                     u1041:
  2567  001094  5023               	movf	??___ftdiv,w,c
  2568  001096  6E2B               	movwf	___ftdiv@sign,c
  2569  001098  662B               	tstfsz	___ftdiv@sign& (0+255),c
  2570  00109A  D007               	goto	l2032
  2571  00109C  0E00               	movlw	0
  2572  00109E  6E1D               	movwf	?___ftdiv,c
  2573  0010A0  0E00               	movlw	0
  2574  0010A2  6E1E               	movwf	?___ftdiv+1,c
  2575  0010A4  0E00               	movlw	0
  2576  0010A6  6E1F               	movwf	?___ftdiv+2,c
  2577  0010A8  0012               	return	
  2578  0010AA                     l2032:
  2579  0010AA  0E00               	movlw	0
  2580  0010AC  6E27               	movwf	___ftdiv@f3,c
  2581  0010AE  0E00               	movlw	0
  2582  0010B0  6E28               	movwf	___ftdiv@f3+1,c
  2583  0010B2  0E00               	movlw	0
  2584  0010B4  6E29               	movwf	___ftdiv@f3+2,c
  2585  0010B6  502B               	movf	___ftdiv@sign,w,c
  2586  0010B8  0F89               	addlw	137
  2587  0010BA  5E2A               	subwf	___ftdiv@exp,f,c
  2588  0010BC  C01F  F02B         	movff	___ftdiv@f1+2,___ftdiv@sign
  2589  0010C0  5022               	movf	___ftdiv@f2+2,w,c
  2590  0010C2  1A2B               	xorwf	___ftdiv@sign,f,c
  2591  0010C4  0E80               	movlw	128
  2592  0010C6  162B               	andwf	___ftdiv@sign,f,c
  2593  0010C8  8E1E               	bsf	___ftdiv@f1+1,7,c
  2594  0010CA  0EFF               	movlw	255
  2595  0010CC  161D               	andwf	___ftdiv@f1,f,c
  2596  0010CE  0EFF               	movlw	255
  2597  0010D0  161E               	andwf	___ftdiv@f1+1,f,c
  2598  0010D2  0E00               	movlw	0
  2599  0010D4  161F               	andwf	___ftdiv@f1+2,f,c
  2600  0010D6  8E21               	bsf	___ftdiv@f2+1,7,c
  2601  0010D8  0EFF               	movlw	255
  2602  0010DA  1620               	andwf	___ftdiv@f2,f,c
  2603  0010DC  0EFF               	movlw	255
  2604  0010DE  1621               	andwf	___ftdiv@f2+1,f,c
  2605  0010E0  0E00               	movlw	0
  2606  0010E2  1622               	andwf	___ftdiv@f2+2,f,c
  2607  0010E4  6E23               	movwf	??___ftdiv& (0+255),c
  2608  0010E6  0E18               	movlw	24
  2609  0010E8  6E26               	movwf	___ftdiv@cntr,c
  2610  0010EA  5023               	movf	??___ftdiv& (0+255),w,c
  2611  0010EC                     l429:
  2612  0010EC  90D8               	bcf	status,0,c
  2613  0010EE  3627               	rlcf	___ftdiv@f3,f,c
  2614  0010F0  3628               	rlcf	___ftdiv@f3+1,f,c
  2615  0010F2  3629               	rlcf	___ftdiv@f3+2,f,c
  2616  0010F4  5020               	movf	___ftdiv@f2,w,c
  2617  0010F6  5C1D               	subwf	___ftdiv@f1,w,c
  2618  0010F8  5021               	movf	___ftdiv@f2+1,w,c
  2619  0010FA  581E               	subwfb	___ftdiv@f1+1,w,c
  2620  0010FC  5022               	movf	___ftdiv@f2+2,w,c
  2621  0010FE  581F               	subwfb	___ftdiv@f1+2,w,c
  2622  001100  A0D8               	btfss	status,0,c
  2623  001102  D007               	goto	l430
  2624  001104  5020               	movf	___ftdiv@f2,w,c
  2625  001106  5E1D               	subwf	___ftdiv@f1,f,c
  2626  001108  5021               	movf	___ftdiv@f2+1,w,c
  2627  00110A  5A1E               	subwfb	___ftdiv@f1+1,f,c
  2628  00110C  5022               	movf	___ftdiv@f2+2,w,c
  2629  00110E  5A1F               	subwfb	___ftdiv@f1+2,f,c
  2630  001110  8027               	bsf	___ftdiv@f3,0,c
  2631  001112                     l430:
  2632  001112  90D8               	bcf	status,0,c
  2633  001114  361D               	rlcf	___ftdiv@f1,f,c
  2634  001116  361E               	rlcf	___ftdiv@f1+1,f,c
  2635  001118  361F               	rlcf	___ftdiv@f1+2,f,c
  2636  00111A  2E26               	decfsz	___ftdiv@cntr,f,c
  2637  00111C  D7E7               	goto	l429
  2638  00111E  C027  F001         	movff	___ftdiv@f3,___ftpack@arg
  2639  001122  C028  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2640  001126  C029  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2641  00112A  C02A  F004         	movff	___ftdiv@exp,___ftpack@exp
  2642  00112E  C02B  F005         	movff	___ftdiv@sign,___ftpack@sign
  2643  001132  EC0B  F009         	call	___ftpack	;wreg free
  2644  001136  C001  F01D         	movff	?___ftpack,?___ftdiv
  2645  00113A  C002  F01E         	movff	?___ftpack+1,?___ftdiv+1
  2646  00113E  C003  F01F         	movff	?___ftpack+2,?___ftdiv+2
  2647  001142  0012               	return	
  2648  001144                     __end_of___ftdiv:
  2649                           	opt stack 0
  2650                           tblptru	equ	0xFF8
  2651                           tblptrh	equ	0xFF7
  2652                           tblptrl	equ	0xFF6
  2653                           tablat	equ	0xFF5
  2654                           prodh	equ	0xFF4
  2655                           prodl	equ	0xFF3
  2656                           postinc2	equ	0xFDE
  2657                           postdec2	equ	0xFDD
  2658                           fsr2h	equ	0xFDA
  2659                           fsr2l	equ	0xFD9
  2660                           status	equ	0xFD8
  2661                           
  2662 ;; *************** function ___ftpack *****************
  2663 ;; Defined at:
  2664 ;;		line 62 in file "/opt/microchip/xc8/v1.31/sources/common/float.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  arg             3    0[COMRAM] unsigned um
  2667 ;;  exp             1    3[COMRAM] unsigned char 
  2668 ;;  sign            1    4[COMRAM] unsigned char 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  3    0[COMRAM] float 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2680 ;;      Params:         5       0       0       0       0       0       0       0       0
  2681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2682 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2683 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2684 ;;Total ram usage:        8 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		___awtoft
  2690 ;;		___ftadd
  2691 ;;		___ftdiv
  2692 ;;		___ftmul
  2693 ;;		___lwtoft
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text16
  2698  001216                     __ptext16:
  2699                           	opt stack 0
  2700  001216                     ___ftpack:
  2701                           	opt stack 28
  2702                           
  2703                           ;incstack = 0
  2704  001216  5004               	movf	___ftpack@exp,w,c
  2705  001218  B4D8               	btfsc	status,2,c
  2706  00121A  D005               	goto	l1798
  2707  00121C  5001               	movf	___ftpack@arg,w,c
  2708  00121E  1002               	iorwf	___ftpack@arg+1,w,c
  2709  001220  1003               	iorwf	___ftpack@arg+2,w,c
  2710  001222  A4D8               	btfss	status,2,c
  2711  001224  D00C               	goto	l1804
  2712  001226                     l1798:
  2713  001226  0E00               	movlw	0
  2714  001228  6E01               	movwf	?___ftpack,c
  2715  00122A  0E00               	movlw	0
  2716  00122C  6E02               	movwf	?___ftpack+1,c
  2717  00122E  0E00               	movlw	0
  2718  001230  6E03               	movwf	?___ftpack+2,c
  2719  001232  0012               	return	
  2720  001234                     l1802:
  2721  001234  2A04               	incf	___ftpack@exp,f,c
  2722  001236  90D8               	bcf	status,0,c
  2723  001238  3203               	rrcf	___ftpack@arg+2,f,c
  2724  00123A  3202               	rrcf	___ftpack@arg+1,f,c
  2725  00123C  3201               	rrcf	___ftpack@arg,f,c
  2726  00123E                     l1804:
  2727  00123E  0E00               	movlw	0
  2728  001240  1401               	andwf	___ftpack@arg,w,c
  2729  001242  6E06               	movwf	??___ftpack& (0+255),c
  2730  001244  0E00               	movlw	0
  2731  001246  1402               	andwf	___ftpack@arg+1,w,c
  2732  001248  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2733  00124A  0EFE               	movlw	254
  2734  00124C  1403               	andwf	___ftpack@arg+2,w,c
  2735  00124E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2736  001250  5006               	movf	??___ftpack,w,c
  2737  001252  1007               	iorwf	??___ftpack+1,w,c
  2738  001254  1008               	iorwf	??___ftpack+2,w,c
  2739  001256  B4D8               	btfsc	status,2,c
  2740  001258  D00C               	goto	l1810
  2741  00125A  D7EC               	goto	l1802
  2742  00125C                     l1806:
  2743  00125C  2A04               	incf	___ftpack@exp,f,c
  2744  00125E  0E01               	movlw	1
  2745  001260  2601               	addwf	___ftpack@arg,f,c
  2746  001262  0E00               	movlw	0
  2747  001264  2202               	addwfc	___ftpack@arg+1,f,c
  2748  001266  0E00               	movlw	0
  2749  001268  2203               	addwfc	___ftpack@arg+2,f,c
  2750  00126A  90D8               	bcf	status,0,c
  2751  00126C  3203               	rrcf	___ftpack@arg+2,f,c
  2752  00126E  3202               	rrcf	___ftpack@arg+1,f,c
  2753  001270  3201               	rrcf	___ftpack@arg,f,c
  2754  001272                     l1810:
  2755  001272  0E00               	movlw	0
  2756  001274  1401               	andwf	___ftpack@arg,w,c
  2757  001276  6E06               	movwf	??___ftpack& (0+255),c
  2758  001278  0E00               	movlw	0
  2759  00127A  1402               	andwf	___ftpack@arg+1,w,c
  2760  00127C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2761  00127E  0EFF               	movlw	255
  2762  001280  1403               	andwf	___ftpack@arg+2,w,c
  2763  001282  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2764  001284  5006               	movf	??___ftpack,w,c
  2765  001286  1007               	iorwf	??___ftpack+1,w,c
  2766  001288  1008               	iorwf	??___ftpack+2,w,c
  2767  00128A  B4D8               	btfsc	status,2,c
  2768  00128C  D006               	goto	l1814
  2769  00128E  D7E6               	goto	l1806
  2770  001290                     l1812:
  2771  001290  0604               	decf	___ftpack@exp,f,c
  2772  001292  90D8               	bcf	status,0,c
  2773  001294  3601               	rlcf	___ftpack@arg,f,c
  2774  001296  3602               	rlcf	___ftpack@arg+1,f,c
  2775  001298  3603               	rlcf	___ftpack@arg+2,f,c
  2776  00129A                     l1814:
  2777  00129A  AE02               	btfss	___ftpack@arg+1,7,c
  2778  00129C  D7F9               	goto	l1812
  2779  00129E  A004               	btfss	___ftpack@exp,0,c
  2780  0012A0  9E02               	bcf	___ftpack@arg+1,7,c
  2781  0012A2  90D8               	bcf	status,0,c
  2782  0012A4  3204               	rrcf	___ftpack@exp,f,c
  2783  0012A6  5004               	movf	___ftpack@exp,w,c
  2784  0012A8  1203               	iorwf	___ftpack@arg+2,f,c
  2785  0012AA  5005               	movf	___ftpack@sign,w,c
  2786  0012AC  A4D8               	btfss	status,2,c
  2787  0012AE  8E03               	bsf	___ftpack@arg+2,7,c
  2788  0012B0  C001  F001         	movff	___ftpack@arg,?___ftpack
  2789  0012B4  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2790  0012B8  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2791  0012BC  0012               	return	
  2792  0012BE                     __end_of___ftpack:
  2793                           	opt stack 0
  2794                           tblptru	equ	0xFF8
  2795                           tblptrh	equ	0xFF7
  2796                           tblptrl	equ	0xFF6
  2797                           tablat	equ	0xFF5
  2798                           prodh	equ	0xFF4
  2799                           prodl	equ	0xFF3
  2800                           postinc2	equ	0xFDE
  2801                           postdec2	equ	0xFDD
  2802                           fsr2h	equ	0xFDA
  2803                           fsr2l	equ	0xFD9
  2804                           status	equ	0xFD8
  2805                           
  2806 ;; *************** function _configure_pwm *****************
  2807 ;; Defined at:
  2808 ;;		line 52 in file "ntc_test.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;		None               void
  2815 ;; Registers used:
  2816 ;;		wreg, status,2
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2822 ;;      Params:         0       0       0       0       0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2825 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2826 ;;Total ram usage:        0 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text17
  2836  001552                     __ptext17:
  2837                           	opt stack 0
  2838  001552                     _configure_pwm:
  2839                           	opt stack 30
  2840                           
  2841                           ;ntc_test.c: 54: CCP1CON = 0b00001100;
  2842                           
  2843                           ;incstack = 0
  2844  001552  0E0C               	movlw	12
  2845  001554  6EBD               	movwf	4029,c	;volatile
  2846                           
  2847                           ;ntc_test.c: 57: T2CON = 0b00000111;
  2848  001556  0E07               	movlw	7
  2849  001558  6EBA               	movwf	4026,c	;volatile
  2850                           
  2851                           ;ntc_test.c: 58: PR2 = 249;
  2852  00155A  0EF9               	movlw	249
  2853  00155C  6EBB               	movwf	4027,c	;volatile
  2854                           
  2855                           ;ntc_test.c: 59: CCPR1L = 25;
  2856  00155E  0E19               	movlw	25
  2857  001560  6EBE               	movwf	4030,c	;volatile
  2858  001562  0012               	return	
  2859  001564                     __end_of_configure_pwm:
  2860                           	opt stack 0
  2861                           tblptru	equ	0xFF8
  2862                           tblptrh	equ	0xFF7
  2863                           tblptrl	equ	0xFF6
  2864                           tablat	equ	0xFF5
  2865                           prodh	equ	0xFF4
  2866                           prodl	equ	0xFF3
  2867                           postinc2	equ	0xFDE
  2868                           postdec2	equ	0xFDD
  2869                           fsr2h	equ	0xFDA
  2870                           fsr2l	equ	0xFD9
  2871                           status	equ	0xFD8
  2872                           
  2873 ;; *************** function _configure_adc *****************
  2874 ;; Defined at:
  2875 ;;		line 34 in file "ntc_test.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;		None               void
  2882 ;; Registers used:
  2883 ;;		wreg, status,2
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2892 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_main
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text18
  2903  001532                     __ptext18:
  2904                           	opt stack 0
  2905  001532                     _configure_adc:
  2906                           	opt stack 30
  2907                           
  2908                           ;ntc_test.c: 37: TRISAbits.RA0 = 1;
  2909                           
  2910                           ;incstack = 0
  2911  001532  8092               	bsf	3986,0,c	;volatile
  2912                           
  2913                           ;ntc_test.c: 39: ANSELAbits.ANSA0 = 1;
  2914  001534  010F               	movlb	15	; () banked
  2915  001536  010F               	movlb	15	; () banked
  2916  001538  815B               	bsf	91,0,b	;volatile
  2917                           
  2918                           ;ntc_test.c: 41: ADCON2bits.ADFM = 1;
  2919  00153A  8EC0               	bsf	4032,7,c	;volatile
  2920                           
  2921                           ;ntc_test.c: 42: ADCON2bits.ACQT = 0b111;
  2922  00153C  86C0               	bsf	4032,3,c	;volatile
  2923  00153E  88C0               	bsf	4032,4,c	;volatile
  2924  001540  8AC0               	bsf	4032,5,c	;volatile
  2925                           
  2926                           ; BSR set to: 15
  2927                           ;ntc_test.c: 43: ADCON2bits.ADCS = 0b101;
  2928  001542  50C0               	movf	4032,w,c	;volatile
  2929  001544  0BF8               	andlw	-8
  2930  001546  0905               	iorlw	5
  2931  001548  6EC0               	movwf	4032,c	;volatile
  2932                           
  2933                           ; BSR set to: 15
  2934                           ;ntc_test.c: 45: ADCON1bits.PVCFG0 = 0;
  2935  00154A  94C1               	bcf	4033,2,c	;volatile
  2936                           
  2937                           ; BSR set to: 15
  2938                           ;ntc_test.c: 47: ADCON1bits.NVCFG1 = 0;
  2939  00154C  92C1               	bcf	4033,1,c	;volatile
  2940                           
  2941                           ; BSR set to: 15
  2942                           ;ntc_test.c: 49: ADCON0bits.ADON = 1;
  2943  00154E  80C2               	bsf	4034,0,c	;volatile
  2944                           
  2945                           ; BSR set to: 15
  2946  001550  0012               	return	
  2947  001552                     __end_of_configure_adc:
  2948                           	opt stack 0
  2949                           tblptru	equ	0xFF8
  2950                           tblptrh	equ	0xFF7
  2951                           tblptrl	equ	0xFF6
  2952                           tablat	equ	0xFF5
  2953                           prodh	equ	0xFF4
  2954                           prodl	equ	0xFF3
  2955                           postinc2	equ	0xFDE
  2956                           postdec2	equ	0xFDD
  2957                           fsr2h	equ	0xFDA
  2958                           fsr2l	equ	0xFD9
  2959                           status	equ	0xFD8
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           prodh	equ	0xFF4
  2965                           prodl	equ	0xFF3
  2966                           postinc2	equ	0xFDE
  2967                           postdec2	equ	0xFDD
  2968                           fsr2h	equ	0xFDA
  2969                           fsr2l	equ	0xFD9
  2970                           status	equ	0xFD8
  2971                           
  2972                           	psect	rparam
  2973  0000                     tblptru	equ	0xFF8
  2974                           tblptrh	equ	0xFF7
  2975                           tblptrl	equ	0xFF6
  2976                           tablat	equ	0xFF5
  2977                           prodh	equ	0xFF4
  2978                           prodl	equ	0xFF3
  2979                           postinc2	equ	0xFDE
  2980                           postdec2	equ	0xFDD
  2981                           fsr2h	equ	0xFDA
  2982                           fsr2l	equ	0xFD9
  2983                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    40
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      91
    BANK0           160     24      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMRAM

    _main->_set_fan_speed
    _set_fan_speed->___fttol
    ___fttol->___ftmul
    _get_temperature->_log
    _log->_eval_poly
    _eval_poly->___ftmul
    ___ftmul->___ftdiv
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___ftneg->___lwtoft
    ___ftdiv->___ftadd

Critical Paths under _main in BANK0

    _main->_get_temperature

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   42501
                                             86 COMRAM     3     3      0
                      _configure_adc
                      _configure_pwm
                    _get_temperature
                      _set_fan_speed
 ---------------------------------------------------------------------------------
 (1) _set_fan_speed                                       13    10      3    9474
                                             73 COMRAM    13    10      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     218
                                             58 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     302
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _get_temperature                                     27    24      3   33003
                                             75 COMRAM     3     0      3
                                              0 BANK0     24    24      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lwtoft
                             ___wmul
                        _adc_convert
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  5     2      3   18847
                                             70 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul
                           ___lwtoft (ARG)
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                8     3      5     352
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           12     5      7    8411
                                             58 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     543
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3513
                                             43 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                        _adc_convert (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    3985
                                             16 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             5     2      3    2306
                                              8 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _adc_convert                                          4     2      2      86
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             5     2      3    2493
                                              8 COMRAM     5     2      3
                           ___ftpack
                             ___wmul (ARG)
                        _adc_convert (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     173
                                             13 COMRAM     3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2981
                                             28 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2087
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _configure_pwm                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configure_adc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configure_adc
   _configure_pwm
   _get_temperature
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       ___wmul (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       _adc_convert (ARG)
       _frexp (ARG)
     ___ftneg
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
     ___lwtoft
       ___ftpack
       ___wmul (ARG)
       _adc_convert (ARG)
     ___wmul
     _adc_convert
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         _adc_convert (ARG)
         _frexp (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       _eval_poly (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                   _adc_convert (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           _adc_convert (ARG)
           _frexp (ARG)
         ___wmul
       _frexp (ARG)
   _set_fan_speed
     ___awtoft
       ___ftpack
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       ___wmul (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       _adc_convert (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         _adc_convert (ARG)
         _frexp (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      18       5       15.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5B       1       95.8%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      73       6        0.0%
DATA                 0      0      73       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Sun Jul 17 01:17:41 2016

                      l31 14C4            ?_configure_adc 0001       ___wmul@multiplicand 0003  
          ?_configure_pwm 0001              ___ftadd@exp1 001C              ___ftadd@exp2 001B  
            ___ftadd@sign 001A                       l410 0BA2                       l430 1112  
                     l419 0BBE                       l452 1524                       l429 10EC  
    __size_of_adc_convert 0030                       l395 0AC6                       l399 0AF2  
                     _PR2 000FBB                       u511 0F78                       u530 0FB0  
                     u535 0FA8                       u911 0EA6                       u681 0A90  
                     u691 0AA4                       u970 1312                       u891 0E80  
                     u978 1314                       _log 0C38              ___ftdiv@cntr 0026  
            ___ftdiv@sign 002B                      l2010 0C86                      l2004 0C64  
                    l2102 0E16                      l2032 10AA                      l2112 144C  
                    l2026 1084                      l1602 1382                      l1612 13DE  
                    l1606 13B2                      l2096 0DB0                      l1810 1272  
                    l1802 1234                      l1626 0F92                      l1812 1290  
                    l1804 123E                      l1644 0FFE                      l1814 129A  
                    l1806 125C                      l1910 0EBC                      l1662 104C  
                    l1654 1026                      l1904 0E96                      l1656 1032  
                    l1648 100E                      l1842 0B00                      l1658 1036  
                    l1836 0AD4                      l1924 0EF2                      l1870 0B70  
                    l1934 0F1E                      l1960 140E                      l1864 0B56  
                    l1928 0F02                      l1866 0B60                      l1858 0B34  
                    l1938 0F2E                      l1884 0BDA                      l1876 0B92  
                    l1868 0B68                      l1972 12E8                      l1798 1226  
                    l1894 0C12                      l1878 0B9C                      l1986 1184  
                    l1988 1200                      ?_log 0047                      u1021 106E  
                    u1005 0C4A                      u1041 1094                      _main 1436  
            ___ftpack@arg 0001              ___ftpack@exp 0004                      fsr2h 000FDA  
                    fsr2l 000FD9                      log@x 0047                      prodh 000FF4  
                    prodl 000FF3                      start 0000             __CFG_MCLRE$ON 000000  
            ___ftmul@cntr 0039              ___ftmul@sign 003A         get_temperature@R1 006C  
       get_temperature@R2 0071         get_temperature@Tn 006E              ___fttol@exp1 0049  
                   ??_log 004A              ___fttol@lval 0045                     ?_main 0001  
        __end_of_MAX_TEMP 0807           __end_of___ftadd 0C38           __end_of___ftdiv 1144  
         __end_of___ftneg 1532           __end_of___ftmul 0F68           __end_of___fttol 105E  
                   _T2CON 000FBA          __end_of_MIN_TEMP 080A          ?_get_temperature 004C  
           ___awtoft@sign 000D                     _frexp 12BE                     _errno 005A  
           ___ftpack@sign 0005                     tablat 000FF5                     status 000FD8  
         __initialization 1564               log@exponent 004A              __end_of_main 1476  
         ??_configure_adc 0001           ??_configure_pwm 0001        get_temperature@Bth 0073  
      get_temperature@Rth 0063                    ??_main 0057             ___fttol@sign1 0044  
           __activetblptr 000002                    ?_frexp 0001                    _ADRESH 000FC4  
                  _ADRESL 000FC3                    _CCPR1L 000FBE          __end_of___awtoft 1436  
        __end_of___ftpack 12BE            __CFG_WDTEN$OFF 000000          __end_of___lwtoft 150C  
   get_temperature@sensor 004C                    ___ftge 1352                    ___wmul 1476  
               ??___ftadd 0017                 ??___ftdiv 0023                 ??___ftneg 0011  
               ??___ftmul 0032                 ??___fttol 003F     ___ftmul@f3_as_product 0036  
   __end_of_set_fan_speed 0E70              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8          __end_oflog@coeff 0829  
              __accesstop 0060   __end_of__initialization 1568           __CFG_PBADEN$OFF 000000  
              ___ftadd@f1 0011                ___ftadd@f2 0014                ___ftge@ff1 0001  
              ___ftge@ff2 0004              eval_poly@res 0044                ___ftdiv@f1 001D  
              ___ftdiv@f2 0020                ___ftdiv@f3 0027                ___ftneg@f1 000E  
              ___awtoft@c 0009                ___ftmul@f1 002C                ___ftmul@f2 002F  
              ___fttol@f1 003B            __pcstackCOMRAM 0001             __end_of_frexp 1352  
              ___lwtoft@c 0009       get_temperature@Vout 0060       get_temperature@temp 0075  
                 ??_frexp 0006        __size_of_eval_poly 00D2                   ?___ftge 0001  
                 ?___wmul 0001            _ADC_RESOLUTION 0801             ??_adc_convert 0003  
                 _CCP1CON 000FBD                 ?___awtoft 0009                 ?___ftpack 0001  
               ?___lwtoft 0009                   __Hparam 0000                   __Lparam 0000  
  __end_of_ADC_RESOLUTION 0804           __size_of___ftge 0090                   ___ftadd 0A80  
                 ___ftdiv 105E                   ___ftneg 150C           __size_of___wmul 003A  
                 ___ftmul 0E70                   ___fttol 0F68              __psmallconst 0800  
                 __pcinit 1564                ??___awtoft 000C                ??___ftpack 0006  
       __end_of_eval_poly 1216                   __ramtop 0800                   __ptext0 1436  
                 __ptext1 0D66                   __ptext2 0F68                   __ptext3 1352  
                 __ptext4 082A                   __ptext5 0C38                   __ptext6 12BE  
                 __ptext7 1144                   __ptext8 1476                   __ptext9 0E70  
              ??___lwtoft 000C              __size_of_log 012E       __end_of_adc_convert 14E0  
          _MAX_DUTY_CYCLE 080A      end_of_initialization 1568  __size_of_get_temperature 0256  
           __Lmediumconst 0000                   postdec2 000FDD                   postinc2 000FDE  
      set_fan_speed@tTemp 0051     __end_of_configure_adc 1552     __end_of_configure_pwm 1564  
     _get_temperature$892 0066       _get_temperature$893 0069                 _TRISAbits 000F92  
               _TRISCbits 000F94    __end_of_MAX_DUTY_CYCLE 080C               ___ftdiv@exp 002A  
             ___ftmul@exp 0035        adc_convert@channel 0001            __end_of___ftge 13E2  
          __end_of___wmul 14B0               _adc_convert 14B0       start_initialization 1564  
              eval_poly@d 003E                eval_poly@n 0040                eval_poly@x 003B  
             __end_of_log 0D66                frexp@value 0001    set_fan_speed@tTemp_291 0054  
       ??_get_temperature 004F    __size_of_set_fan_speed 010A                  ??___ftge 0007  
                ??___wmul 0005         __size_of___awtoft 0054         __size_of___ftpack 00A8  
             __pbssCOMRAM 005A         __size_of___lwtoft 002C             __pcstackBANK0 0060  
          _MIN_DUTY_CYCLE 080C                  ?___ftadd 0011                  ?___ftdiv 001D  
                ?___ftneg 000E                  ?___ftmul 002C                  ?___fttol 003B  
             __smallconst 0800                 _eval_poly 1144             _set_fan_speed 0D66  
  __end_of_MIN_DUTY_CYCLE 080E            __size_of_frexp 0094            ___wmul@product 0005  
                _MAX_TEMP 0804                  _MIN_TEMP 0807         set_fan_speed@temp 004A  
              _ADCON0bits 000FC2                _ADCON1bits 000FC1                _ADCON2bits 000FC0  
       ___wmul@multiplier 0001                ?_eval_poly 003B            ?_set_fan_speed 004A  
               frexp@eptr 0004                  __Hrparam 0000                  __Lrparam 0000  
        __size_of___ftadd 01B8          __size_of___ftdiv 00E6              ?_adc_convert 0001  
        __size_of___ftneg 0026          __size_of___ftmul 00F8          __size_of___fttol 00F6  
                ___awtoft 13E2                  ___ftpack 1216                _ANSELAbits 000F5B  
                ___lwtoft 14E0                  __ptext10 0A80                  __ptext11 13E2  
                __ptext12 14B0                  __ptext13 14E0                  __ptext14 150C  
                __ptext15 105E                  __ptext16 1216                  __ptext17 1552  
                __ptext18 1532           _get_temperature 082A    __size_of_configure_adc 0020  
  __size_of_configure_pwm 0012             __size_of_main 0040                  main@temp 0057  
                log@coeff 080E           ??_set_fan_speed 004D               ??_eval_poly 0042  
    __CFG_CPUDIV$NOCLKDIV 000000             _configure_adc 1532             _configure_pwm 1552  
 __end_of_get_temperature 0A80        __CFG_FOSC$INTOSCIO 000000  
