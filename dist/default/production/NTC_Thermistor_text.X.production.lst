

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Sun Jun  1 05:38:31 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           	psect	smallconst
    31  000800                     __psmallconst:
    32                           	opt stack 0
    33  000800  00                 	db	0
    34  000801                     _ADC_RESOLUTION:
    35                           	opt stack 0
    36  000801  00                 	db	0
    37  000802  A0                 	db	160
    38  000803  3B                 	db	59
    39  000804                     __end_of_ADC_RESOLUTION:
    40                           	opt stack 0
    41  000804                     log@coeff:
    42                           	opt stack 0
    43  000804  00                 	db	0
    44  000805  00                 	db	0
    45  000806  00                 	db	0
    46  000807  00                 	db	0
    47  000808  80                 	db	128
    48  000809  3F                 	db	63
    49  00080A  F0                 	db	240
    50  00080B  FF                 	db	255
    51  00080C  BE                 	db	190
    52  00080D  E2                 	db	226
    53  00080E  A9                 	db	169
    54  00080F  3E                 	db	62
    55  000810  83                 	db	131
    56  000811  76                 	db	118
    57  000812  BE                 	db	190
    58  000813  AE                 	db	174
    59  000814  2B                 	db	43
    60  000815  3E                 	db	62
    61  000816  3C                 	db	60
    62  000817  C3                 	db	195
    63  000818  BD                 	db	189
    64  000819  D2                 	db	210
    65  00081A  13                 	db	19
    66  00081B  3D                 	db	61
    67  00081C  78                 	db	120
    68  00081D  D3                 	db	211
    69  00081E  BB                 	db	187
    70  00081F                     __end_oflog@coeff:
    71                           	opt stack 0
    72  0000                     _ADCON0bits	set	4034
    73  0000                     _ADCON1bits	set	4033
    74  0000                     _ADCON2bits	set	4032
    75  0000                     _ADRESH	set	4036
    76  0000                     _ADRESL	set	4035
    77  0000                     _ANSELAbits	set	3931
    78  0000                     _CCP1CON	set	4029
    79  0000                     _CCPR1L	set	4030
    80  0000                     _PR2	set	4027
    81  0000                     _T2CON	set	4026
    82  0000                     _TRISAbits	set	3986
    83  0000                     _TRISCbits	set	3988
    84                           
    85                           ; #config settings
    86  00081F  00                 	db	0	; dummy byte at the end
    87  0000                     
    88                           	psect	cinit
    89  00152A                     __pcinit:
    90                           	opt stack 0
    91  00152A                     start_initialization:
    92                           	opt stack 0
    93  00152A                     __initialization:
    94                           	opt stack 0
    95                           
    96                           ; Clear objects allocated to COMRAM (2 bytes)
    97  00152A  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
    98  00152C  6A52               	clrf	__pbssCOMRAM& (0+255),c
    99  00152E                     end_of_initialization:
   100                           	opt stack 0
   101  00152E                     __end_of__initialization:
   102                           	opt stack 0
   103  00152E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   104  001530  6EF8               	movwf	tblptru,c
   105  001532  0100               	movlb	0
   106  001534  EF3B  F005         	goto	_main	;jump to C main() function
   107                           tblptru	equ	0xFF8
   108                           
   109                           	psect	bssCOMRAM
   110  000052                     __pbssCOMRAM:
   111                           	opt stack 0
   112  000052                     _errno:
   113                           	opt stack 0
   114  000052                     	ds	2
   115                           tblptru	equ	0xFF8
   116                           
   117                           	psect	cstackBANK0
   118  000060                     __pcstackBANK0:
   119                           	opt stack 0
   120  000060                     temperature_get@Vout:
   121                           	opt stack 0
   122                           
   123                           ; 3 bytes @ 0x0
   124  000060                     	ds	3
   125  000063                     temperature_get@Rth:
   126                           	opt stack 0
   127                           
   128                           ; 3 bytes @ 0x3
   129  000063                     	ds	3
   130  000066                     _temperature_get$889:
   131                           	opt stack 0
   132                           
   133                           ; 3 bytes @ 0x6
   134  000066                     	ds	3
   135  000069                     _temperature_get$890:
   136                           	opt stack 0
   137                           
   138                           ; 3 bytes @ 0x9
   139  000069                     	ds	3
   140  00006C                     temperature_get@R1:
   141                           	opt stack 0
   142                           
   143                           ; 2 bytes @ 0xC
   144  00006C                     	ds	2
   145  00006E                     temperature_get@Tn:
   146                           	opt stack 0
   147                           
   148                           ; 3 bytes @ 0xE
   149  00006E                     	ds	3
   150  000071                     temperature_get@R2:
   151                           	opt stack 0
   152                           
   153                           ; 2 bytes @ 0x11
   154  000071                     	ds	2
   155  000073                     temperature_get@Bth:
   156                           	opt stack 0
   157                           
   158                           ; 2 bytes @ 0x13
   159  000073                     	ds	2
   160  000075                     temperature_get@temp:
   161                           	opt stack 0
   162                           
   163                           ; 3 bytes @ 0x15
   164  000075                     	ds	3
   165                           tblptru	equ	0xFF8
   166                           
   167                           	psect	cstackCOMRAM
   168  000001                     __pcstackCOMRAM:
   169                           	opt stack 0
   170  000001                     ?_adc_convert:
   171                           	opt stack 0
   172  000001                     ?___wmul:
   173                           	opt stack 0
   174  000001                     ?___ftpack:
   175                           	opt stack 0
   176  000001                     ?_frexp:
   177                           	opt stack 0
   178  000001                     adc_convert@channel:
   179                           	opt stack 0
   180  000001                     ___wmul@multiplier:
   181                           	opt stack 0
   182  000001                     ___ftpack@arg:
   183                           	opt stack 0
   184  000001                     ___ftge@ff1:
   185                           	opt stack 0
   186  000001                     frexp@value:
   187                           	opt stack 0
   188                           
   189                           ; 3 bytes @ 0x0
   190  000001                     	ds	2
   191  000003                     ??_adc_convert:
   192  000003                     ___wmul@multiplicand:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x2
   196  000003                     	ds	1
   197  000004                     ___ftpack@exp:
   198                           	opt stack 0
   199  000004                     frexp@eptr:
   200                           	opt stack 0
   201  000004                     ___ftge@ff2:
   202                           	opt stack 0
   203                           
   204                           ; 3 bytes @ 0x3
   205  000004                     	ds	1
   206  000005                     ___ftpack@sign:
   207                           	opt stack 0
   208  000005                     ___wmul@product:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x4
   212  000005                     	ds	1
   213  000006                     ??___ftpack:
   214  000006                     ??_frexp:
   215                           
   216                           ; 0 bytes @ 0x5
   217  000006                     	ds	1
   218  000007                     ??___ftge:
   219                           
   220                           ; 0 bytes @ 0x6
   221  000007                     	ds	2
   222  000009                     ?___awtoft:
   223                           	opt stack 0
   224  000009                     ?___lwtoft:
   225                           	opt stack 0
   226  000009                     ___awtoft@c:
   227                           	opt stack 0
   228  000009                     ___lwtoft@c:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x8
   232  000009                     	ds	3
   233  00000C                     ??___awtoft:
   234  00000C                     ??___lwtoft:
   235                           
   236                           ; 0 bytes @ 0xB
   237  00000C                     	ds	1
   238  00000D                     ___awtoft@sign:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0xC
   242  00000D                     	ds	1
   243  00000E                     ?___ftneg:
   244                           	opt stack 0
   245  00000E                     ___ftneg@f1:
   246                           	opt stack 0
   247                           
   248                           ; 3 bytes @ 0xD
   249  00000E                     	ds	3
   250  000011                     ?___ftadd:
   251                           	opt stack 0
   252  000011                     ___ftadd@f1:
   253                           	opt stack 0
   254                           
   255                           ; 3 bytes @ 0x10
   256  000011                     	ds	3
   257  000014                     ___ftadd@f2:
   258                           	opt stack 0
   259                           
   260                           ; 3 bytes @ 0x13
   261  000014                     	ds	3
   262  000017                     ??___ftadd:
   263                           
   264                           ; 0 bytes @ 0x16
   265  000017                     	ds	3
   266  00001A                     ___ftadd@sign:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x19
   270  00001A                     	ds	1
   271  00001B                     ___ftadd@exp2:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x1A
   275  00001B                     	ds	1
   276  00001C                     ___ftadd@exp1:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x1B
   280  00001C                     	ds	1
   281  00001D                     ?___ftdiv:
   282                           	opt stack 0
   283  00001D                     ___ftdiv@f1:
   284                           	opt stack 0
   285                           
   286                           ; 3 bytes @ 0x1C
   287  00001D                     	ds	3
   288  000020                     ___ftdiv@f2:
   289                           	opt stack 0
   290                           
   291                           ; 3 bytes @ 0x1F
   292  000020                     	ds	3
   293  000023                     ??___ftdiv:
   294                           
   295                           ; 0 bytes @ 0x22
   296  000023                     	ds	3
   297  000026                     ___ftdiv@cntr:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x25
   301  000026                     	ds	1
   302  000027                     ___ftdiv@f3:
   303                           	opt stack 0
   304                           
   305                           ; 3 bytes @ 0x26
   306  000027                     	ds	3
   307  00002A                     ___ftdiv@exp:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x29
   311  00002A                     	ds	1
   312  00002B                     ___ftdiv@sign:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x2A
   316  00002B                     	ds	1
   317  00002C                     ?___ftmul:
   318                           	opt stack 0
   319  00002C                     ___ftmul@f1:
   320                           	opt stack 0
   321                           
   322                           ; 3 bytes @ 0x2B
   323  00002C                     	ds	3
   324  00002F                     ___ftmul@f2:
   325                           	opt stack 0
   326                           
   327                           ; 3 bytes @ 0x2E
   328  00002F                     	ds	3
   329  000032                     ??___ftmul:
   330                           
   331                           ; 0 bytes @ 0x31
   332  000032                     	ds	3
   333  000035                     ___ftmul@exp:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x34
   337  000035                     	ds	1
   338  000036                     ___ftmul@f3_as_product:
   339                           	opt stack 0
   340                           
   341                           ; 3 bytes @ 0x35
   342  000036                     	ds	3
   343  000039                     ___ftmul@cntr:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x38
   347  000039                     	ds	1
   348  00003A                     ___ftmul@sign:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x39
   352  00003A                     	ds	1
   353  00003B                     ?_eval_poly:
   354                           	opt stack 0
   355  00003B                     eval_poly@x:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0x3A
   359  00003B                     	ds	3
   360  00003E                     eval_poly@d:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x3D
   364  00003E                     	ds	2
   365  000040                     eval_poly@n:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x3F
   369  000040                     	ds	2
   370  000042                     ??_eval_poly:
   371                           
   372                           ; 0 bytes @ 0x41
   373  000042                     	ds	2
   374  000044                     eval_poly@res:
   375                           	opt stack 0
   376                           
   377                           ; 3 bytes @ 0x43
   378  000044                     	ds	3
   379  000047                     ?_log:
   380                           	opt stack 0
   381  000047                     log@x:
   382                           	opt stack 0
   383                           
   384                           ; 3 bytes @ 0x46
   385  000047                     	ds	3
   386  00004A                     log@exponent:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x49
   390  00004A                     	ds	2
   391  00004C                     ?_temperature_get:
   392                           	opt stack 0
   393  00004C                     temperature_get@sensor:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x4B
   397  00004C                     	ds	3
   398  00004F                     main@temp:
   399                           	opt stack 0
   400                           
   401                           ; 3 bytes @ 0x4E
   402  00004F                     	ds	3
   403                           tblptru	equ	0xFF8
   404                           
   405 ;;
   406 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   407 ;;
   408 ;; *************** function _main *****************
   409 ;; Defined at:
   410 ;;		line 45 in file "ntc_test.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;  temp            3   78[COMRAM] float 
   415 ;; Return value:  Size  Location     Type
   416 ;;		None               void
   417 ;; Registers used:
   418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   424 ;;      Params:         0       0       0       0       0       0       0       0       0
   425 ;;      Locals:         3       0       0       0       0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0       0       0       0       0
   427 ;;      Totals:         3       0       0       0       0       0       0       0       0
   428 ;;Total ram usage:        3 bytes
   429 ;; Hardware stack levels required when called:    5
   430 ;; This function calls:
   431 ;;		___ftge
   432 ;;		_configure_adc
   433 ;;		_configure_pwm
   434 ;;		_temperature_get
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text0
   441  000A76                     __ptext0:
   442                           	opt stack 0
   443  000A76                     _main:
   444                           	opt stack 26
   445                           
   446                           ;ntc_test.c: 47: float temp = 0;
   447                           
   448                           ;incstack = 0
   449  000A76  0E00               	movlw	0
   450  000A78  6E4F               	movwf	main@temp,c
   451  000A7A  0E00               	movlw	0
   452  000A7C  6E50               	movwf	main@temp+1,c
   453  000A7E  0E00               	movlw	0
   454  000A80  6E51               	movwf	main@temp+2,c
   455                           
   456                           ;ntc_test.c: 50: TRISCbits.RC2 = 0;
   457  000A82  9494               	bcf	3988,2,c	;volatile
   458                           
   459                           ;ntc_test.c: 51: configure_adc();
   460  000A84  EC7C  F00A         	call	_configure_adc	;wreg free
   461                           
   462                           ;ntc_test.c: 52: configure_pwm();
   463  000A88  EC8C  F00A         	call	_configure_pwm	;wreg free
   464  000A8C                     l2239:
   465                           
   466                           ;ntc_test.c: 54: {
   467                           ;ntc_test.c: 56: temp = temperature_get(0);
   468  000A8C  0E00               	movlw	0
   469  000A8E  6E4D               	movwf	temperature_get@sensor+1,c
   470  000A90  0E00               	movlw	0
   471  000A92  6E4C               	movwf	temperature_get@sensor,c
   472  000A94  EC10  F004         	call	_temperature_get	;wreg free
   473  000A98  C04C  F04F         	movff	?_temperature_get,main@temp
   474  000A9C  C04D  F050         	movff	?_temperature_get+1,main@temp+1
   475  000AA0  C04E  F051         	movff	?_temperature_get+2,main@temp+2
   476                           
   477                           ;ntc_test.c: 57: if(temp >= 20 && temp <= 22)
   478  000AA4  C04F  F001         	movff	main@temp,___ftge@ff1
   479  000AA8  C050  F002         	movff	main@temp+1,___ftge@ff1+1
   480  000AAC  C051  F003         	movff	main@temp+2,___ftge@ff1+2
   481  000AB0  0E00               	movlw	0
   482  000AB2  6E04               	movwf	___ftge@ff2,c
   483  000AB4  0EA0               	movlw	160
   484  000AB6  6E05               	movwf	___ftge@ff2+1,c
   485  000AB8  0E41               	movlw	65
   486  000ABA  6E06               	movwf	___ftge@ff2+2,c
   487  000ABC  ECAC  F009         	call	___ftge	;wreg free
   488  000AC0  A0D8               	btfss	status,0,c
   489  000AC2  D012               	goto	l2247
   490  000AC4  0E00               	movlw	0
   491  000AC6  6E01               	movwf	___ftge@ff1,c
   492  000AC8  0EB0               	movlw	176
   493  000ACA  6E02               	movwf	___ftge@ff1+1,c
   494  000ACC  0E41               	movlw	65
   495  000ACE  6E03               	movwf	___ftge@ff1+2,c
   496  000AD0  C04F  F004         	movff	main@temp,___ftge@ff2
   497  000AD4  C050  F005         	movff	main@temp+1,___ftge@ff2+1
   498  000AD8  C051  F006         	movff	main@temp+2,___ftge@ff2+2
   499  000ADC  ECAC  F009         	call	___ftge	;wreg free
   500  000AE0  A0D8               	btfss	status,0,c
   501  000AE2  D002               	goto	l2247
   502                           
   503                           ;ntc_test.c: 58: CCPR1L = 0;
   504  000AE4  0E00               	movlw	0
   505  000AE6  D0CD               	goto	L7
   506  000AE8                     l2247:
   507                           
   508                           ;ntc_test.c: 59: else if(temp >= 22 && temp <= 24)
   509  000AE8  C04F  F001         	movff	main@temp,___ftge@ff1
   510  000AEC  C050  F002         	movff	main@temp+1,___ftge@ff1+1
   511  000AF0  C051  F003         	movff	main@temp+2,___ftge@ff1+2
   512  000AF4  0E00               	movlw	0
   513  000AF6  6E04               	movwf	___ftge@ff2,c
   514  000AF8  0EB0               	movlw	176
   515  000AFA  6E05               	movwf	___ftge@ff2+1,c
   516  000AFC  0E41               	movlw	65
   517  000AFE  6E06               	movwf	___ftge@ff2+2,c
   518  000B00  ECAC  F009         	call	___ftge	;wreg free
   519  000B04  A0D8               	btfss	status,0,c
   520  000B06  D012               	goto	l2253
   521  000B08  0E00               	movlw	0
   522  000B0A  6E01               	movwf	___ftge@ff1,c
   523  000B0C  0EC0               	movlw	192
   524  000B0E  6E02               	movwf	___ftge@ff1+1,c
   525  000B10  0E41               	movlw	65
   526  000B12  6E03               	movwf	___ftge@ff1+2,c
   527  000B14  C04F  F004         	movff	main@temp,___ftge@ff2
   528  000B18  C050  F005         	movff	main@temp+1,___ftge@ff2+1
   529  000B1C  C051  F006         	movff	main@temp+2,___ftge@ff2+2
   530  000B20  ECAC  F009         	call	___ftge	;wreg free
   531  000B24  A0D8               	btfss	status,0,c
   532  000B26  D002               	goto	l2253
   533                           
   534                           ;ntc_test.c: 60: CCPR1L = 25;
   535  000B28  0E19               	movlw	25
   536  000B2A  D0AB               	goto	L7
   537  000B2C                     l2253:
   538                           
   539                           ;ntc_test.c: 61: else if(temp >= 24 && temp <= 26)
   540  000B2C  C04F  F001         	movff	main@temp,___ftge@ff1
   541  000B30  C050  F002         	movff	main@temp+1,___ftge@ff1+1
   542  000B34  C051  F003         	movff	main@temp+2,___ftge@ff1+2
   543  000B38  0E00               	movlw	0
   544  000B3A  6E04               	movwf	___ftge@ff2,c
   545  000B3C  0EC0               	movlw	192
   546  000B3E  6E05               	movwf	___ftge@ff2+1,c
   547  000B40  0E41               	movlw	65
   548  000B42  6E06               	movwf	___ftge@ff2+2,c
   549  000B44  ECAC  F009         	call	___ftge	;wreg free
   550  000B48  A0D8               	btfss	status,0,c
   551  000B4A  D012               	goto	l2259
   552  000B4C  0E00               	movlw	0
   553  000B4E  6E01               	movwf	___ftge@ff1,c
   554  000B50  0ED0               	movlw	208
   555  000B52  6E02               	movwf	___ftge@ff1+1,c
   556  000B54  0E41               	movlw	65
   557  000B56  6E03               	movwf	___ftge@ff1+2,c
   558  000B58  C04F  F004         	movff	main@temp,___ftge@ff2
   559  000B5C  C050  F005         	movff	main@temp+1,___ftge@ff2+1
   560  000B60  C051  F006         	movff	main@temp+2,___ftge@ff2+2
   561  000B64  ECAC  F009         	call	___ftge	;wreg free
   562  000B68  A0D8               	btfss	status,0,c
   563  000B6A  D002               	goto	l2259
   564                           
   565                           ;ntc_test.c: 62: CCPR1L = 50;
   566  000B6C  0E32               	movlw	50
   567  000B6E  D089               	goto	L7
   568  000B70                     l2259:
   569                           
   570                           ;ntc_test.c: 63: else if(temp >= 26 && temp <= 28)
   571  000B70  C04F  F001         	movff	main@temp,___ftge@ff1
   572  000B74  C050  F002         	movff	main@temp+1,___ftge@ff1+1
   573  000B78  C051  F003         	movff	main@temp+2,___ftge@ff1+2
   574  000B7C  0E00               	movlw	0
   575  000B7E  6E04               	movwf	___ftge@ff2,c
   576  000B80  0ED0               	movlw	208
   577  000B82  6E05               	movwf	___ftge@ff2+1,c
   578  000B84  0E41               	movlw	65
   579  000B86  6E06               	movwf	___ftge@ff2+2,c
   580  000B88  ECAC  F009         	call	___ftge	;wreg free
   581  000B8C  A0D8               	btfss	status,0,c
   582  000B8E  D012               	goto	l2265
   583  000B90  0E00               	movlw	0
   584  000B92  6E01               	movwf	___ftge@ff1,c
   585  000B94  0EE0               	movlw	224
   586  000B96  6E02               	movwf	___ftge@ff1+1,c
   587  000B98  0E41               	movlw	65
   588  000B9A  6E03               	movwf	___ftge@ff1+2,c
   589  000B9C  C04F  F004         	movff	main@temp,___ftge@ff2
   590  000BA0  C050  F005         	movff	main@temp+1,___ftge@ff2+1
   591  000BA4  C051  F006         	movff	main@temp+2,___ftge@ff2+2
   592  000BA8  ECAC  F009         	call	___ftge	;wreg free
   593  000BAC  A0D8               	btfss	status,0,c
   594  000BAE  D002               	goto	l2265
   595                           
   596                           ;ntc_test.c: 64: CCPR1L = 100;
   597  000BB0  0E64               	movlw	100
   598  000BB2  D067               	goto	L7
   599  000BB4                     l2265:
   600                           
   601                           ;ntc_test.c: 65: else if(temp >= 28 && temp <= 30)
   602  000BB4  C04F  F001         	movff	main@temp,___ftge@ff1
   603  000BB8  C050  F002         	movff	main@temp+1,___ftge@ff1+1
   604  000BBC  C051  F003         	movff	main@temp+2,___ftge@ff1+2
   605  000BC0  0E00               	movlw	0
   606  000BC2  6E04               	movwf	___ftge@ff2,c
   607  000BC4  0EE0               	movlw	224
   608  000BC6  6E05               	movwf	___ftge@ff2+1,c
   609  000BC8  0E41               	movlw	65
   610  000BCA  6E06               	movwf	___ftge@ff2+2,c
   611  000BCC  ECAC  F009         	call	___ftge	;wreg free
   612  000BD0  A0D8               	btfss	status,0,c
   613  000BD2  D012               	goto	l2271
   614  000BD4  0E00               	movlw	0
   615  000BD6  6E01               	movwf	___ftge@ff1,c
   616  000BD8  0EF0               	movlw	240
   617  000BDA  6E02               	movwf	___ftge@ff1+1,c
   618  000BDC  0E41               	movlw	65
   619  000BDE  6E03               	movwf	___ftge@ff1+2,c
   620  000BE0  C04F  F004         	movff	main@temp,___ftge@ff2
   621  000BE4  C050  F005         	movff	main@temp+1,___ftge@ff2+1
   622  000BE8  C051  F006         	movff	main@temp+2,___ftge@ff2+2
   623  000BEC  ECAC  F009         	call	___ftge	;wreg free
   624  000BF0  A0D8               	btfss	status,0,c
   625  000BF2  D002               	goto	l2271
   626                           
   627                           ;ntc_test.c: 66: CCPR1L = 150;
   628  000BF4  0E96               	movlw	150
   629  000BF6  D045               	goto	L7
   630  000BF8                     l2271:
   631                           
   632                           ;ntc_test.c: 67: else if(temp >= 30 && temp <= 32)
   633  000BF8  C04F  F001         	movff	main@temp,___ftge@ff1
   634  000BFC  C050  F002         	movff	main@temp+1,___ftge@ff1+1
   635  000C00  C051  F003         	movff	main@temp+2,___ftge@ff1+2
   636  000C04  0E00               	movlw	0
   637  000C06  6E04               	movwf	___ftge@ff2,c
   638  000C08  0EF0               	movlw	240
   639  000C0A  6E05               	movwf	___ftge@ff2+1,c
   640  000C0C  0E41               	movlw	65
   641  000C0E  6E06               	movwf	___ftge@ff2+2,c
   642  000C10  ECAC  F009         	call	___ftge	;wreg free
   643  000C14  A0D8               	btfss	status,0,c
   644  000C16  D012               	goto	l2277
   645  000C18  0E00               	movlw	0
   646  000C1A  6E01               	movwf	___ftge@ff1,c
   647  000C1C  0E00               	movlw	0
   648  000C1E  6E02               	movwf	___ftge@ff1+1,c
   649  000C20  0E42               	movlw	66
   650  000C22  6E03               	movwf	___ftge@ff1+2,c
   651  000C24  C04F  F004         	movff	main@temp,___ftge@ff2
   652  000C28  C050  F005         	movff	main@temp+1,___ftge@ff2+1
   653  000C2C  C051  F006         	movff	main@temp+2,___ftge@ff2+2
   654  000C30  ECAC  F009         	call	___ftge	;wreg free
   655  000C34  A0D8               	btfss	status,0,c
   656  000C36  D002               	goto	l2277
   657                           
   658                           ;ntc_test.c: 68: CCPR1L = 200;
   659  000C38  0EC8               	movlw	200
   660  000C3A  D023               	goto	L7
   661  000C3C                     l2277:
   662                           
   663                           ;ntc_test.c: 69: else if(temp >= 32 && temp <= 34)
   664  000C3C  C04F  F001         	movff	main@temp,___ftge@ff1
   665  000C40  C050  F002         	movff	main@temp+1,___ftge@ff1+1
   666  000C44  C051  F003         	movff	main@temp+2,___ftge@ff1+2
   667  000C48  0E00               	movlw	0
   668  000C4A  6E04               	movwf	___ftge@ff2,c
   669  000C4C  0E00               	movlw	0
   670  000C4E  6E05               	movwf	___ftge@ff2+1,c
   671  000C50  0E42               	movlw	66
   672  000C52  6E06               	movwf	___ftge@ff2+2,c
   673  000C54  ECAC  F009         	call	___ftge	;wreg free
   674  000C58  A0D8               	btfss	status,0,c
   675  000C5A  D012               	goto	l2283
   676  000C5C  0E00               	movlw	0
   677  000C5E  6E01               	movwf	___ftge@ff1,c
   678  000C60  0E08               	movlw	8
   679  000C62  6E02               	movwf	___ftge@ff1+1,c
   680  000C64  0E42               	movlw	66
   681  000C66  6E03               	movwf	___ftge@ff1+2,c
   682  000C68  C04F  F004         	movff	main@temp,___ftge@ff2
   683  000C6C  C050  F005         	movff	main@temp+1,___ftge@ff2+1
   684  000C70  C051  F006         	movff	main@temp+2,___ftge@ff2+2
   685  000C74  ECAC  F009         	call	___ftge	;wreg free
   686  000C78  A0D8               	btfss	status,0,c
   687  000C7A  D002               	goto	l2283
   688                           
   689                           ;ntc_test.c: 70: CCPR1L = 225;
   690  000C7C  0EE1               	movlw	225
   691  000C7E  D001               	goto	L7
   692  000C80                     l2283:
   693                           
   694                           ;ntc_test.c: 71: else
   695                           ;ntc_test.c: 72: CCPR1L = 249;
   696  000C80  0EF9               	movlw	249
   697  000C82                     L7:
   698  000C82  6EBE               	movwf	4030,c	;volatile
   699  000C84  D703               	goto	l2239
   700  000C86                     __end_of_main:
   701                           	opt stack 0
   702                           tblptru	equ	0xFF8
   703                           status	equ	0xFD8
   704                           
   705 ;; *************** function _temperature_get *****************
   706 ;; Defined at:
   707 ;;		line 25 in file "ntc_temperature.h"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  sensor          2   75[COMRAM] int 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  temp            3   21[BANK0 ] float 
   712 ;;  Tn              3   14[BANK0 ] float 
   713 ;;  Rth             3    3[BANK0 ] float 
   714 ;;  Vout            3    0[BANK0 ] float 
   715 ;;  Bth             2   19[BANK0 ] unsigned int 
   716 ;;  R2              2   17[BANK0 ] unsigned int 
   717 ;;  R1              2   12[BANK0 ] unsigned int 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  3   75[COMRAM] float 
   720 ;; Registers used:
   721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   727 ;;      Params:         3       0       0       0       0       0       0       0       0
   728 ;;      Locals:         0      24       0       0       0       0       0       0       0
   729 ;;      Temps:          0       0       0       0       0       0       0       0       0
   730 ;;      Totals:         3      24       0       0       0       0       0       0       0
   731 ;;Total ram usage:       27 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; Hardware stack levels required when called:    4
   734 ;; This function calls:
   735 ;;		___ftadd
   736 ;;		___ftdiv
   737 ;;		___ftmul
   738 ;;		___ftneg
   739 ;;		___lwtoft
   740 ;;		___wmul
   741 ;;		_adc_convert
   742 ;;		_log
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text1
   749  000820                     __ptext1:
   750                           	opt stack 0
   751  000820                     _temperature_get:
   752                           	opt stack 26
   753                           
   754                           ;ntc_temperature.h: 27: float Vout;
   755                           ;ntc_temperature.h: 29: unsigned int R1 = 10000;
   756                           
   757                           ;incstack = 0
   758  000820  0E27               	movlw	39
   759  000822  0100               	movlb	0	; () banked
   760  000824  0100               	movlb	0	; () banked
   761  000826  6F6D               	movwf	(temperature_get@R1+1)& (0+255),b
   762  000828  0E10               	movlw	16
   763  00082A  0100               	movlb	0	; () banked
   764  00082C  6F6C               	movwf	temperature_get@R1& (0+255),b
   765                           
   766                           ;ntc_temperature.h: 31: unsigned int R2 = 10000;
   767  00082E  0E27               	movlw	39
   768  000830  0100               	movlb	0	; () banked
   769  000832  0100               	movlb	0	; () banked
   770  000834  6F72               	movwf	(temperature_get@R2+1)& (0+255),b
   771  000836  0E10               	movlw	16
   772  000838  0100               	movlb	0	; () banked
   773  00083A  6F71               	movwf	temperature_get@R2& (0+255),b
   774                           
   775                           ;ntc_temperature.h: 32: float Rth;
   776                           ;ntc_temperature.h: 33: float Tn = 25+273.15;
   777  00083C  0E13               	movlw	19
   778  00083E  0100               	movlb	0	; () banked
   779  000840  0100               	movlb	0	; () banked
   780  000842  6F6E               	movwf	temperature_get@Tn& (0+255),b
   781  000844  0E95               	movlw	149
   782  000846  0100               	movlb	0	; () banked
   783  000848  0100               	movlb	0	; () banked
   784  00084A  6F6F               	movwf	(temperature_get@Tn+1)& (0+255),b
   785  00084C  0E43               	movlw	67
   786  00084E  0100               	movlb	0	; () banked
   787  000850  0100               	movlb	0	; () banked
   788  000852  6F70               	movwf	(temperature_get@Tn+2)& (0+255),b
   789                           
   790                           ;ntc_temperature.h: 34: unsigned int Bth = 4073;
   791  000854  0E0F               	movlw	15
   792  000856  0100               	movlb	0	; () banked
   793  000858  0100               	movlb	0	; () banked
   794  00085A  6F74               	movwf	(temperature_get@Bth+1)& (0+255),b
   795  00085C  0EE9               	movlw	233
   796  00085E  0100               	movlb	0	; () banked
   797  000860  6F73               	movwf	temperature_get@Bth& (0+255),b
   798                           
   799                           ; BSR set to: 0
   800                           ;ntc_temperature.h: 35: float temp;
   801                           ;ntc_temperature.h: 40: Vout = adc_convert(sensor) * ADC_RESOLUTION;
   802  000862  C04C  F001         	movff	temperature_get@sensor,adc_convert@channel
   803  000866  C04D  F002         	movff	temperature_get@sensor+1,adc_convert@channel+1
   804  00086A  EC3B  F00A         	call	_adc_convert	;wreg free
   805  00086E  C001  F009         	movff	?_adc_convert,___lwtoft@c
   806  000872  C002  F00A         	movff	?_adc_convert+1,___lwtoft@c+1
   807  000876  EC53  F00A         	call	___lwtoft	;wreg free
   808  00087A  C009  F02C         	movff	?___lwtoft,___ftmul@f1
   809  00087E  C00A  F02D         	movff	?___lwtoft+1,___ftmul@f1+1
   810  000882  C00B  F02E         	movff	?___lwtoft+2,___ftmul@f1+2
   811  000886  0E01               	movlw	low _ADC_RESOLUTION
   812  000888  6EF6               	movwf	tblptrl,c
   813  00088A  0E08               	movlw	high _ADC_RESOLUTION
   814  00088C  6EF7               	movwf	tblptrh,c
   815  00088E  0009               	tblrd		*+
   816  000890  CFF5 F02F          	movff	tablat,___ftmul@f2
   817  000894  0009               	tblrd		*+
   818  000896  CFF5 F030          	movff	tablat,___ftmul@f2+1
   819  00089A  000A               	tblrd		*-
   820  00089C  CFF5 F031          	movff	tablat,___ftmul@f2+2
   821  0008A0  ECB6  F007         	call	___ftmul	;wreg free
   822  0008A4  C02C  F060         	movff	?___ftmul,temperature_get@Vout
   823  0008A8  C02D  F061         	movff	?___ftmul+1,temperature_get@Vout+1
   824  0008AC  C02E  F062         	movff	?___ftmul+2,temperature_get@Vout+2
   825                           
   826                           ;ntc_temperature.h: 41: Rth = ((5 * R2) / (5 - Vout)) - R2;
   827  0008B0  0E00               	movlw	0
   828  0008B2  6E14               	movwf	___ftadd@f2,c
   829  0008B4  0EA0               	movlw	160
   830  0008B6  6E15               	movwf	___ftadd@f2+1,c
   831  0008B8  0E40               	movlw	64
   832  0008BA  6E16               	movwf	___ftadd@f2+2,c
   833  0008BC  C060  F00E         	movff	temperature_get@Vout,___ftneg@f1
   834  0008C0  C061  F00F         	movff	temperature_get@Vout+1,___ftneg@f1+1
   835  0008C4  C062  F010         	movff	temperature_get@Vout+2,___ftneg@f1+2
   836  0008C8  EC69  F00A         	call	___ftneg	;wreg free
   837  0008CC  C00E  F011         	movff	?___ftneg,___ftadd@f1
   838  0008D0  C00F  F012         	movff	?___ftneg+1,___ftadd@f1+1
   839  0008D4  C010  F013         	movff	?___ftneg+2,___ftadd@f1+2
   840  0008D8  EC43  F006         	call	___ftadd	;wreg free
   841  0008DC  C011  F020         	movff	?___ftadd,___ftdiv@f2
   842  0008E0  C012  F021         	movff	?___ftadd+1,___ftdiv@f2+1
   843  0008E4  C013  F022         	movff	?___ftadd+2,___ftdiv@f2+2
   844  0008E8  0E00               	movlw	0
   845  0008EA  6E04               	movwf	___wmul@multiplicand+1,c
   846  0008EC  0E05               	movlw	5
   847  0008EE  6E03               	movwf	___wmul@multiplicand,c
   848  0008F0  C071  F001         	movff	temperature_get@R2,___wmul@multiplier
   849  0008F4  C072  F002         	movff	temperature_get@R2+1,___wmul@multiplier+1
   850  0008F8  EC1E  F00A         	call	___wmul	;wreg free
   851  0008FC  C001  F009         	movff	?___wmul,___lwtoft@c
   852  000900  C002  F00A         	movff	?___wmul+1,___lwtoft@c+1
   853  000904  EC53  F00A         	call	___lwtoft	;wreg free
   854  000908  C009  F01D         	movff	?___lwtoft,___ftdiv@f1
   855  00090C  C00A  F01E         	movff	?___lwtoft+1,___ftdiv@f1+1
   856  000910  C00B  F01F         	movff	?___lwtoft+2,___ftdiv@f1+2
   857  000914  EC32  F008         	call	___ftdiv	;wreg free
   858  000918  C01D  F066         	movff	?___ftdiv,_temperature_get$889
   859  00091C  C01E  F067         	movff	?___ftdiv+1,_temperature_get$889+1
   860  000920  C01F  F068         	movff	?___ftdiv+2,_temperature_get$889+2
   861                           
   862                           ;ntc_temperature.h: 41: Rth = ((5 * R2) / (5 - Vout)) - R2;
   863  000924  C066  F011         	movff	_temperature_get$889,___ftadd@f1
   864  000928  C067  F012         	movff	_temperature_get$889+1,___ftadd@f1+1
   865  00092C  C068  F013         	movff	_temperature_get$889+2,___ftadd@f1+2
   866  000930  C071  F009         	movff	temperature_get@R2,___lwtoft@c
   867  000934  C072  F00A         	movff	temperature_get@R2+1,___lwtoft@c+1
   868  000938  EC53  F00A         	call	___lwtoft	;wreg free
   869  00093C  C009  F00E         	movff	?___lwtoft,___ftneg@f1
   870  000940  C00A  F00F         	movff	?___lwtoft+1,___ftneg@f1+1
   871  000944  C00B  F010         	movff	?___lwtoft+2,___ftneg@f1+2
   872  000948  EC69  F00A         	call	___ftneg	;wreg free
   873  00094C  C00E  F014         	movff	?___ftneg,___ftadd@f2
   874  000950  C00F  F015         	movff	?___ftneg+1,___ftadd@f2+1
   875  000954  C010  F016         	movff	?___ftneg+2,___ftadd@f2+2
   876  000958  EC43  F006         	call	___ftadd	;wreg free
   877  00095C  C011  F063         	movff	?___ftadd,temperature_get@Rth
   878  000960  C012  F064         	movff	?___ftadd+1,temperature_get@Rth+1
   879  000964  C013  F065         	movff	?___ftadd+2,temperature_get@Rth+2
   880                           
   881                           ;ntc_temperature.h: 42: temp = (Bth*Tn) / (Bth + log(Rth / R1) * Tn);
   882  000968  C06C  F009         	movff	temperature_get@R1,___lwtoft@c
   883  00096C  C06D  F00A         	movff	temperature_get@R1+1,___lwtoft@c+1
   884  000970  EC53  F00A         	call	___lwtoft	;wreg free
   885  000974  C009  F020         	movff	?___lwtoft,___ftdiv@f2
   886  000978  C00A  F021         	movff	?___lwtoft+1,___ftdiv@f2+1
   887  00097C  C00B  F022         	movff	?___lwtoft+2,___ftdiv@f2+2
   888  000980  C063  F01D         	movff	temperature_get@Rth,___ftdiv@f1
   889  000984  C064  F01E         	movff	temperature_get@Rth+1,___ftdiv@f1+1
   890  000988  C065  F01F         	movff	temperature_get@Rth+2,___ftdiv@f1+2
   891  00098C  EC32  F008         	call	___ftdiv	;wreg free
   892  000990  C01D  F047         	movff	?___ftdiv,log@x
   893  000994  C01E  F048         	movff	?___ftdiv+1,log@x+1
   894  000998  C01F  F049         	movff	?___ftdiv+2,log@x+2
   895  00099C  EC1F  F007         	call	_log	;wreg free
   896  0009A0  C047  F069         	movff	?_log,_temperature_get$890
   897  0009A4  C048  F06A         	movff	?_log+1,_temperature_get$890+1
   898  0009A8  C049  F06B         	movff	?_log+2,_temperature_get$890+2
   899                           
   900                           ;ntc_temperature.h: 42: temp = (Bth*Tn) / (Bth + log(Rth / R1) * Tn);
   901  0009AC  C06E  F02F         	movff	temperature_get@Tn,___ftmul@f2
   902  0009B0  C06F  F030         	movff	temperature_get@Tn+1,___ftmul@f2+1
   903  0009B4  C070  F031         	movff	temperature_get@Tn+2,___ftmul@f2+2
   904  0009B8  C073  F009         	movff	temperature_get@Bth,___lwtoft@c
   905  0009BC  C074  F00A         	movff	temperature_get@Bth+1,___lwtoft@c+1
   906  0009C0  EC53  F00A         	call	___lwtoft	;wreg free
   907  0009C4  C009  F02C         	movff	?___lwtoft,___ftmul@f1
   908  0009C8  C00A  F02D         	movff	?___lwtoft+1,___ftmul@f1+1
   909  0009CC  C00B  F02E         	movff	?___lwtoft+2,___ftmul@f1+2
   910  0009D0  ECB6  F007         	call	___ftmul	;wreg free
   911  0009D4  C02C  F01D         	movff	?___ftmul,___ftdiv@f1
   912  0009D8  C02D  F01E         	movff	?___ftmul+1,___ftdiv@f1+1
   913  0009DC  C02E  F01F         	movff	?___ftmul+2,___ftdiv@f1+2
   914  0009E0  C06E  F02F         	movff	temperature_get@Tn,___ftmul@f2
   915  0009E4  C06F  F030         	movff	temperature_get@Tn+1,___ftmul@f2+1
   916  0009E8  C070  F031         	movff	temperature_get@Tn+2,___ftmul@f2+2
   917  0009EC  C069  F02C         	movff	_temperature_get$890,___ftmul@f1
   918  0009F0  C06A  F02D         	movff	_temperature_get$890+1,___ftmul@f1+1
   919  0009F4  C06B  F02E         	movff	_temperature_get$890+2,___ftmul@f1+2
   920  0009F8  ECB6  F007         	call	___ftmul	;wreg free
   921  0009FC  C02C  F014         	movff	?___ftmul,___ftadd@f2
   922  000A00  C02D  F015         	movff	?___ftmul+1,___ftadd@f2+1
   923  000A04  C02E  F016         	movff	?___ftmul+2,___ftadd@f2+2
   924  000A08  C073  F009         	movff	temperature_get@Bth,___lwtoft@c
   925  000A0C  C074  F00A         	movff	temperature_get@Bth+1,___lwtoft@c+1
   926  000A10  EC53  F00A         	call	___lwtoft	;wreg free
   927  000A14  C009  F011         	movff	?___lwtoft,___ftadd@f1
   928  000A18  C00A  F012         	movff	?___lwtoft+1,___ftadd@f1+1
   929  000A1C  C00B  F013         	movff	?___lwtoft+2,___ftadd@f1+2
   930  000A20  EC43  F006         	call	___ftadd	;wreg free
   931  000A24  C011  F020         	movff	?___ftadd,___ftdiv@f2
   932  000A28  C012  F021         	movff	?___ftadd+1,___ftdiv@f2+1
   933  000A2C  C013  F022         	movff	?___ftadd+2,___ftdiv@f2+2
   934  000A30  EC32  F008         	call	___ftdiv	;wreg free
   935  000A34  C01D  F075         	movff	?___ftdiv,temperature_get@temp
   936  000A38  C01E  F076         	movff	?___ftdiv+1,temperature_get@temp+1
   937  000A3C  C01F  F077         	movff	?___ftdiv+2,temperature_get@temp+2
   938                           
   939                           ;ntc_temperature.h: 44: temp = temp - 273.15;
   940  000A40  C075  F011         	movff	temperature_get@temp,___ftadd@f1
   941  000A44  C076  F012         	movff	temperature_get@temp+1,___ftadd@f1+1
   942  000A48  C077  F013         	movff	temperature_get@temp+2,___ftadd@f1+2
   943  000A4C  0E93               	movlw	147
   944  000A4E  6E14               	movwf	___ftadd@f2,c
   945  000A50  0E88               	movlw	136
   946  000A52  6E15               	movwf	___ftadd@f2+1,c
   947  000A54  0EC3               	movlw	195
   948  000A56  6E16               	movwf	___ftadd@f2+2,c
   949  000A58  EC43  F006         	call	___ftadd	;wreg free
   950  000A5C  C011  F075         	movff	?___ftadd,temperature_get@temp
   951  000A60  C012  F076         	movff	?___ftadd+1,temperature_get@temp+1
   952  000A64  C013  F077         	movff	?___ftadd+2,temperature_get@temp+2
   953                           
   954                           ;ntc_temperature.h: 46: return temp;
   955  000A68  C075  F04C         	movff	temperature_get@temp,?_temperature_get
   956  000A6C  C076  F04D         	movff	temperature_get@temp+1,?_temperature_get+1
   957  000A70  C077  F04E         	movff	temperature_get@temp+2,?_temperature_get+2
   958  000A74  0012               	return	
   959  000A76                     __end_of_temperature_get:
   960                           	opt stack 0
   961                           tblptru	equ	0xFF8
   962                           tblptrh	equ	0xFF7
   963                           tblptrl	equ	0xFF6
   964                           tablat	equ	0xFF5
   965                           status	equ	0xFD8
   966                           
   967 ;; *************** function _log *****************
   968 ;; Defined at:
   969 ;;		line 5 in file "/opt/microchip/xc8/v1.31/sources/common/log.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  x               3   70[COMRAM] float 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  exponent        2   73[COMRAM] int 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  3   70[COMRAM] int 
   976 ;; Registers used:
   977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   983 ;;      Params:         3       0       0       0       0       0       0       0       0
   984 ;;      Locals:         2       0       0       0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0       0       0
   986 ;;      Totals:         5       0       0       0       0       0       0       0       0
   987 ;;Total ram usage:        5 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    3
   990 ;; This function calls:
   991 ;;		___awtoft
   992 ;;		___ftadd
   993 ;;		___ftmul
   994 ;;		_eval_poly
   995 ;;		_frexp
   996 ;; This function is called by:
   997 ;;		_temperature_get
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text2
  1002  000E3E                     __ptext2:
  1003                           	opt stack 0
  1004  000E3E                     _log:
  1005                           	opt stack 26
  1006                           
  1007                           ;incstack = 0
  1008  000E3E  5049               	movf	log@x+2,w,c
  1009  000E40  0A80               	xorlw	128
  1010  000E42  0F80               	addlw	128
  1011  000E44  E105               	bnz	u1045
  1012  000E46  0E00               	movlw	0
  1013  000E48  5C48               	subwf	log@x+1,w,c
  1014  000E4A  E102               	bnz	u1045
  1015  000E4C  0E00               	movlw	0
  1016  000E4E  5C47               	subwf	log@x,w,c
  1017  000E50                     u1045:
  1018  000E50  B0D8               	btfsc	status,0,c
  1019  000E52  D00B               	goto	l2145
  1020  000E54  0E00               	movlw	0
  1021  000E56  6E53               	movwf	_errno+1,c
  1022  000E58  0E21               	movlw	33
  1023  000E5A  6E52               	movwf	_errno,c
  1024  000E5C  0E00               	movlw	0
  1025  000E5E  6E47               	movwf	?_log,c
  1026  000E60  0E00               	movlw	0
  1027  000E62  6E48               	movwf	?_log+1,c
  1028  000E64  0E00               	movlw	0
  1029  000E66  6E49               	movwf	?_log+2,c
  1030  000E68  0012               	return	
  1031  000E6A                     l2145:
  1032  000E6A  0E7F               	movlw	127
  1033  000E6C  1449               	andwf	log@x+2,w,c
  1034  000E6E  1048               	iorwf	log@x+1,w,c
  1035  000E70  1047               	iorwf	log@x,w,c
  1036  000E72  A4D8               	btfss	status,2,c
  1037  000E74  D00B               	goto	l2151
  1038  000E76  0E00               	movlw	0
  1039  000E78  6E53               	movwf	_errno+1,c
  1040  000E7A  0E22               	movlw	34
  1041  000E7C  6E52               	movwf	_errno,c
  1042  000E7E  0E00               	movlw	0
  1043  000E80  6E47               	movwf	?_log,c
  1044  000E82  0E00               	movlw	0
  1045  000E84  6E48               	movwf	?_log+1,c
  1046  000E86  0E00               	movlw	0
  1047  000E88  6E49               	movwf	?_log+2,c
  1048  000E8A  0012               	return	
  1049  000E8C                     l2151:
  1050  000E8C  0E00               	movlw	0
  1051  000E8E  6E2F               	movwf	___ftmul@f2,c
  1052  000E90  0E00               	movlw	0
  1053  000E92  6E30               	movwf	___ftmul@f2+1,c
  1054  000E94  0E40               	movlw	64
  1055  000E96  6E31               	movwf	___ftmul@f2+2,c
  1056  000E98  0E00               	movlw	high log@exponent
  1057  000E9A  6E05               	movwf	frexp@eptr+1,c
  1058  000E9C  0E4A               	movlw	low log@exponent
  1059  000E9E  6E04               	movwf	frexp@eptr,c
  1060  000EA0  C047  F001         	movff	log@x,frexp@value
  1061  000EA4  C048  F002         	movff	log@x+1,frexp@value+1
  1062  000EA8  C049  F003         	movff	log@x+2,frexp@value+2
  1063  000EAC  EC62  F009         	call	_frexp	;wreg free
  1064  000EB0  C001  F02C         	movff	?_frexp,___ftmul@f1
  1065  000EB4  C002  F02D         	movff	?_frexp+1,___ftmul@f1+1
  1066  000EB8  C003  F02E         	movff	?_frexp+2,___ftmul@f1+2
  1067  000EBC  ECB6  F007         	call	___ftmul	;wreg free
  1068  000EC0  C02C  F011         	movff	?___ftmul,___ftadd@f1
  1069  000EC4  C02D  F012         	movff	?___ftmul+1,___ftadd@f1+1
  1070  000EC8  C02E  F013         	movff	?___ftmul+2,___ftadd@f1+2
  1071  000ECC  0E00               	movlw	0
  1072  000ECE  6E14               	movwf	___ftadd@f2,c
  1073  000ED0  0E80               	movlw	128
  1074  000ED2  6E15               	movwf	___ftadd@f2+1,c
  1075  000ED4  0EBF               	movlw	191
  1076  000ED6  6E16               	movwf	___ftadd@f2+2,c
  1077  000ED8  EC43  F006         	call	___ftadd	;wreg free
  1078  000EDC  C011  F047         	movff	?___ftadd,log@x
  1079  000EE0  C012  F048         	movff	?___ftadd+1,log@x+1
  1080  000EE4  C013  F049         	movff	?___ftadd+2,log@x+2
  1081  000EE8  064A               	decf	log@exponent,f,c
  1082  000EEA  A0D8               	btfss	status,0,c
  1083  000EEC  064B               	decf	log@exponent+1,f,c
  1084  000EEE  C047  F03B         	movff	log@x,eval_poly@x
  1085  000EF2  C048  F03C         	movff	log@x+1,eval_poly@x+1
  1086  000EF6  C049  F03D         	movff	log@x+2,eval_poly@x+2
  1087  000EFA  0E08               	movlw	high log@coeff
  1088  000EFC  6E3F               	movwf	eval_poly@d+1,c
  1089  000EFE  0E04               	movlw	low log@coeff
  1090  000F00  6E3E               	movwf	eval_poly@d,c
  1091  000F02  0E00               	movlw	0
  1092  000F04  6E41               	movwf	eval_poly@n+1,c
  1093  000F06  0E08               	movlw	8
  1094  000F08  6E40               	movwf	eval_poly@n,c
  1095  000F0A  ECA5  F008         	call	_eval_poly	;wreg free
  1096  000F0E  C03B  F047         	movff	?_eval_poly,log@x
  1097  000F12  C03C  F048         	movff	?_eval_poly+1,log@x+1
  1098  000F16  C03D  F049         	movff	?_eval_poly+2,log@x+2
  1099  000F1A  0E72               	movlw	114
  1100  000F1C  6E2F               	movwf	___ftmul@f2,c
  1101  000F1E  0E31               	movlw	49
  1102  000F20  6E30               	movwf	___ftmul@f2+1,c
  1103  000F22  0E3F               	movlw	63
  1104  000F24  6E31               	movwf	___ftmul@f2+2,c
  1105  000F26  C04A  F009         	movff	log@exponent,___awtoft@c
  1106  000F2A  C04B  F00A         	movff	log@exponent+1,___awtoft@c+1
  1107  000F2E  ECF4  F009         	call	___awtoft	;wreg free
  1108  000F32  C009  F02C         	movff	?___awtoft,___ftmul@f1
  1109  000F36  C00A  F02D         	movff	?___awtoft+1,___ftmul@f1+1
  1110  000F3A  C00B  F02E         	movff	?___awtoft+2,___ftmul@f1+2
  1111  000F3E  ECB6  F007         	call	___ftmul	;wreg free
  1112  000F42  C02C  F011         	movff	?___ftmul,___ftadd@f1
  1113  000F46  C02D  F012         	movff	?___ftmul+1,___ftadd@f1+1
  1114  000F4A  C02E  F013         	movff	?___ftmul+2,___ftadd@f1+2
  1115  000F4E  C047  F014         	movff	log@x,___ftadd@f2
  1116  000F52  C048  F015         	movff	log@x+1,___ftadd@f2+1
  1117  000F56  C049  F016         	movff	log@x+2,___ftadd@f2+2
  1118  000F5A  EC43  F006         	call	___ftadd	;wreg free
  1119  000F5E  C011  F047         	movff	?___ftadd,?_log
  1120  000F62  C012  F048         	movff	?___ftadd+1,?_log+1
  1121  000F66  C013  F049         	movff	?___ftadd+2,?_log+2
  1122  000F6A  0012               	return	
  1123  000F6C                     __end_of_log:
  1124                           	opt stack 0
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           status	equ	0xFD8
  1130                           
  1131 ;; *************** function _frexp *****************
  1132 ;; Defined at:
  1133 ;;		line 254 in file "/opt/microchip/xc8/v1.31/sources/common/frexp.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  value           3    0[COMRAM] int 
  1136 ;;  eptr            2    3[COMRAM] PTR int 
  1137 ;;		 -> log@exponent(2), 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  3    0[COMRAM] PTR int 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1149 ;;      Params:         5       0       0       0       0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1151 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1152 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1153 ;;Total ram usage:        8 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_log
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text3
  1163  0012C4                     __ptext3:
  1164                           	opt stack 0
  1165  0012C4                     _frexp:
  1166                           	opt stack 28
  1167                           
  1168                           ;incstack = 0
  1169  0012C4  0E7F               	movlw	127
  1170  0012C6  1403               	andwf	frexp@value+2,w,c
  1171  0012C8  1002               	iorwf	frexp@value+1,w,c
  1172  0012CA  1001               	iorwf	frexp@value,w,c
  1173  0012CC  A4D8               	btfss	status,2,c
  1174  0012CE  D00F               	goto	l2113
  1175  0012D0  C004  FFD9         	movff	frexp@eptr,fsr2l
  1176  0012D4  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1177  0012D8  0E00               	movlw	0
  1178  0012DA  6EDE               	movwf	postinc2,c
  1179  0012DC  0E00               	movlw	0
  1180  0012DE  6EDD               	movwf	postdec2,c
  1181  0012E0  0E00               	movlw	0
  1182  0012E2  6E01               	movwf	?_frexp,c
  1183  0012E4  0E00               	movlw	0
  1184  0012E6  6E02               	movwf	?_frexp+1,c
  1185  0012E8  0E00               	movlw	0
  1186  0012EA  6E03               	movwf	?_frexp+2,c
  1187  0012EC  0012               	return	
  1188  0012EE                     l2113:
  1189  0012EE  5003               	movf	frexp@value+2,w,c
  1190  0012F0  0B7F               	andlw	127
  1191  0012F2  6E06               	movwf	??_frexp& (0+255),c
  1192  0012F4  90D8               	bcf	status,0,c
  1193  0012F6  3406               	rlcf	??_frexp,w,c
  1194  0012F8  6E07               	movwf	(??_frexp+1)& (0+255),c
  1195  0012FA  6A08               	clrf	(??_frexp+2)& (0+255),c
  1196  0012FC  3608               	rlcf	(??_frexp+2)& (0+255),f,c
  1197  0012FE  C004  FFD9         	movff	frexp@eptr,fsr2l
  1198  001302  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1199  001306  C007  FFDE         	movff	??_frexp+1,postinc2
  1200  00130A  C008  FFDD         	movff	??_frexp+2,postdec2
  1201  00130E  AE02               	btfss	frexp@value+1,7,c
  1202  001310  D003               	goto	u1010
  1203  001312  6A06               	clrf	??_frexp& (0+255),c
  1204  001314  2A06               	incf	??_frexp& (0+255),f,c
  1205  001316  D001               	goto	u1018
  1206  001318                     u1010:
  1207  001318  6A06               	clrf	??_frexp& (0+255),c
  1208  00131A                     u1018:
  1209  00131A  5006               	movf	??_frexp,w,c
  1210  00131C  C004  FFD9         	movff	frexp@eptr,fsr2l
  1211  001320  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1212  001324  12DE               	iorwf	postinc2,f,c
  1213  001326  0E00               	movlw	0
  1214  001328  12DD               	iorwf	postdec2,f,c
  1215  00132A  C004  FFD9         	movff	frexp@eptr,fsr2l
  1216  00132E  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1217  001332  0E82               	movlw	130
  1218  001334  26DE               	addwf	postinc2,f,c
  1219  001336  0EFF               	movlw	255
  1220  001338  22DD               	addwfc	postdec2,f,c
  1221  00133A  8003               	bsf	frexp@value+2,0,c
  1222  00133C  8203               	bsf	frexp@value+2,1,c
  1223  00133E  8403               	bsf	frexp@value+2,2,c
  1224  001340  8603               	bsf	frexp@value+2,3,c
  1225  001342  8803               	bsf	frexp@value+2,4,c
  1226  001344  8A03               	bsf	frexp@value+2,5,c
  1227  001346  9C03               	bcf	frexp@value+2,6,c
  1228  001348  9E02               	bcf	frexp@value+1,7,c
  1229  00134A  C001  F001         	movff	frexp@value,?_frexp
  1230  00134E  C002  F002         	movff	frexp@value+1,?_frexp+1
  1231  001352  C003  F003         	movff	frexp@value+2,?_frexp+2
  1232  001356  0012               	return	
  1233  001358                     __end_of_frexp:
  1234                           	opt stack 0
  1235                           tblptru	equ	0xFF8
  1236                           tblptrh	equ	0xFF7
  1237                           tblptrl	equ	0xFF6
  1238                           tablat	equ	0xFF5
  1239                           postinc2	equ	0xFDE
  1240                           postdec2	equ	0xFDD
  1241                           fsr2h	equ	0xFDA
  1242                           fsr2l	equ	0xFD9
  1243                           status	equ	0xFD8
  1244                           
  1245 ;; *************** function _eval_poly *****************
  1246 ;; Defined at:
  1247 ;;		line 4 in file "/opt/microchip/xc8/v1.31/sources/common/evalpoly.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  x               3   58[COMRAM] PTR int 
  1250 ;;  d               2   61[COMRAM] PTR const 
  1251 ;;		 -> log@coeff(27), 
  1252 ;;  n               2   63[COMRAM] int 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  res             3   67[COMRAM] int 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  3   58[COMRAM] int 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1264 ;;      Params:         7       0       0       0       0       0       0       0       0
  1265 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1266 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1267 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1268 ;;Total ram usage:       12 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    2
  1271 ;; This function calls:
  1272 ;;		___ftadd
  1273 ;;		___ftmul
  1274 ;;		___wmul
  1275 ;; This function is called by:
  1276 ;;		_log
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text4
  1281  00114A                     __ptext4:
  1282                           	opt stack 0
  1283  00114A                     _eval_poly:
  1284                           	opt stack 26
  1285                           
  1286                           ;incstack = 0
  1287  00114A  C040  F001         	movff	eval_poly@n,___wmul@multiplier
  1288  00114E  C041  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  1289  001152  0E00               	movlw	0
  1290  001154  6E04               	movwf	___wmul@multiplicand+1,c
  1291  001156  0E03               	movlw	3
  1292  001158  6E03               	movwf	___wmul@multiplicand,c
  1293  00115A  EC1E  F00A         	call	___wmul	;wreg free
  1294  00115E  C03E  F042         	movff	eval_poly@d,??_eval_poly
  1295  001162  C03F  F043         	movff	eval_poly@d+1,??_eval_poly+1
  1296  001166  5001               	movf	?___wmul,w,c
  1297  001168  2642               	addwf	??_eval_poly,f,c
  1298  00116A  5002               	movf	?___wmul+1,w,c
  1299  00116C  2243               	addwfc	??_eval_poly+1,f,c
  1300  00116E  C042  FFF6         	movff	??_eval_poly,tblptrl
  1301  001172  C043  FFF7         	movff	??_eval_poly+1,tblptrh
  1302  001176  0009               	tblrd		*+
  1303  001178  CFF5 F044          	movff	tablat,eval_poly@res
  1304  00117C  0009               	tblrd		*+
  1305  00117E  CFF5 F045          	movff	tablat,eval_poly@res+1
  1306  001182  000A               	tblrd		*-
  1307  001184  CFF5 F046          	movff	tablat,eval_poly@res+2
  1308  001188  D03E               	goto	l2129
  1309  00118A                     l2127:
  1310  00118A  C044  F02F         	movff	eval_poly@res,___ftmul@f2
  1311  00118E  C045  F030         	movff	eval_poly@res+1,___ftmul@f2+1
  1312  001192  C046  F031         	movff	eval_poly@res+2,___ftmul@f2+2
  1313  001196  C03B  F02C         	movff	eval_poly@x,___ftmul@f1
  1314  00119A  C03C  F02D         	movff	eval_poly@x+1,___ftmul@f1+1
  1315  00119E  C03D  F02E         	movff	eval_poly@x+2,___ftmul@f1+2
  1316  0011A2  ECB6  F007         	call	___ftmul	;wreg free
  1317  0011A6  C02C  F011         	movff	?___ftmul,___ftadd@f1
  1318  0011AA  C02D  F012         	movff	?___ftmul+1,___ftadd@f1+1
  1319  0011AE  C02E  F013         	movff	?___ftmul+2,___ftadd@f1+2
  1320  0011B2  0E00               	movlw	0
  1321  0011B4  6E04               	movwf	___wmul@multiplicand+1,c
  1322  0011B6  0E03               	movlw	3
  1323  0011B8  6E03               	movwf	___wmul@multiplicand,c
  1324  0011BA  0640               	decf	eval_poly@n,f,c
  1325  0011BC  A0D8               	btfss	status,0,c
  1326  0011BE  0641               	decf	eval_poly@n+1,f,c
  1327  0011C0  C040  F001         	movff	eval_poly@n,___wmul@multiplier
  1328  0011C4  C041  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  1329  0011C8  EC1E  F00A         	call	___wmul	;wreg free
  1330  0011CC  C03E  F042         	movff	eval_poly@d,??_eval_poly
  1331  0011D0  C03F  F043         	movff	eval_poly@d+1,??_eval_poly+1
  1332  0011D4  5001               	movf	?___wmul,w,c
  1333  0011D6  2642               	addwf	??_eval_poly,f,c
  1334  0011D8  5002               	movf	?___wmul+1,w,c
  1335  0011DA  2243               	addwfc	??_eval_poly+1,f,c
  1336  0011DC  C042  FFF6         	movff	??_eval_poly,tblptrl
  1337  0011E0  C043  FFF7         	movff	??_eval_poly+1,tblptrh
  1338  0011E4  0009               	tblrd		*+
  1339  0011E6  CFF5 F014          	movff	tablat,___ftadd@f2
  1340  0011EA  0009               	tblrd		*+
  1341  0011EC  CFF5 F015          	movff	tablat,___ftadd@f2+1
  1342  0011F0  000A               	tblrd		*-
  1343  0011F2  CFF5 F016          	movff	tablat,___ftadd@f2+2
  1344  0011F6  EC43  F006         	call	___ftadd	;wreg free
  1345  0011FA  C011  F044         	movff	?___ftadd,eval_poly@res
  1346  0011FE  C012  F045         	movff	?___ftadd+1,eval_poly@res+1
  1347  001202  C013  F046         	movff	?___ftadd+2,eval_poly@res+2
  1348  001206                     l2129:
  1349  001206  5041               	movf	eval_poly@n+1,w,c
  1350  001208  1040               	iorwf	eval_poly@n,w,c
  1351  00120A  A4D8               	btfss	status,2,c
  1352  00120C  D7BE               	goto	l2127
  1353  00120E  C044  F03B         	movff	eval_poly@res,?_eval_poly
  1354  001212  C045  F03C         	movff	eval_poly@res+1,?_eval_poly+1
  1355  001216  C046  F03D         	movff	eval_poly@res+2,?_eval_poly+2
  1356  00121A  0012               	return	
  1357  00121C                     __end_of_eval_poly:
  1358                           	opt stack 0
  1359                           tblptru	equ	0xFF8
  1360                           tblptrh	equ	0xFF7
  1361                           tblptrl	equ	0xFF6
  1362                           tablat	equ	0xFF5
  1363                           postinc2	equ	0xFDE
  1364                           postdec2	equ	0xFDD
  1365                           fsr2h	equ	0xFDA
  1366                           fsr2l	equ	0xFD9
  1367                           status	equ	0xFD8
  1368                           
  1369 ;; *************** function ___wmul *****************
  1370 ;; Defined at:
  1371 ;;		line 3 in file "/opt/microchip/xc8/v1.31/sources/common/wmul.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  multiplier      2    0[COMRAM] unsigned int 
  1374 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  product         2    4[COMRAM] unsigned int 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  2    0[COMRAM] unsigned int 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0, prodl, prodh
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1386 ;;      Params:         4       0       0       0       0       0       0       0       0
  1387 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1389 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1390 ;;Total ram usage:        6 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_temperature_get
  1396 ;;		_eval_poly
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text5
  1401  00143C                     __ptext5:
  1402                           	opt stack 0
  1403  00143C                     ___wmul:
  1404                           	opt stack 27
  1405                           
  1406                           ;incstack = 0
  1407  00143C  5001               	movf	___wmul@multiplier,w,c
  1408  00143E  0203               	mulwf	___wmul@multiplicand,c
  1409  001440  CFF3 F005          	movff	prodl,___wmul@product
  1410  001444  CFF4 F006          	movff	prodh,___wmul@product+1
  1411  001448  5001               	movf	___wmul@multiplier,w,c
  1412  00144A  0204               	mulwf	___wmul@multiplicand+1,c
  1413  00144C  CFF3 FFF4          	movff	prodl,prodh
  1414  001450  6AF3               	clrf	prodl,c
  1415  001452  50F3               	movf	prodl,w,c
  1416  001454  2605               	addwf	___wmul@product,f,c
  1417  001456  50F4               	movf	prodh,w,c
  1418  001458  2206               	addwfc	___wmul@product+1,f,c
  1419  00145A  5002               	movf	___wmul@multiplier+1,w,c
  1420  00145C  0203               	mulwf	___wmul@multiplicand,c
  1421  00145E  CFF3 FFF4          	movff	prodl,prodh
  1422  001462  6AF3               	clrf	prodl,c
  1423  001464  50F3               	movf	prodl,w,c
  1424  001466  2605               	addwf	___wmul@product,f,c
  1425  001468  50F4               	movf	prodh,w,c
  1426  00146A  2206               	addwfc	___wmul@product+1,f,c
  1427  00146C  C005  F001         	movff	___wmul@product,?___wmul
  1428  001470  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1429  001474  0012               	return	
  1430  001476                     __end_of___wmul:
  1431                           	opt stack 0
  1432                           tblptru	equ	0xFF8
  1433                           tblptrh	equ	0xFF7
  1434                           tblptrl	equ	0xFF6
  1435                           tablat	equ	0xFF5
  1436                           prodh	equ	0xFF4
  1437                           prodl	equ	0xFF3
  1438                           postinc2	equ	0xFDE
  1439                           postdec2	equ	0xFDD
  1440                           fsr2h	equ	0xFDA
  1441                           fsr2l	equ	0xFD9
  1442                           status	equ	0xFD8
  1443                           
  1444 ;; *************** function ___ftmul *****************
  1445 ;; Defined at:
  1446 ;;		line 51 in file "/opt/microchip/xc8/v1.31/sources/common/ftmul.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  f1              3   43[COMRAM] float 
  1449 ;;  f2              3   46[COMRAM] float 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  f3_as_produc    3   53[COMRAM] unsigned um
  1452 ;;  sign            1   57[COMRAM] unsigned char 
  1453 ;;  cntr            1   56[COMRAM] unsigned char 
  1454 ;;  exp             1   52[COMRAM] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  3   43[COMRAM] float 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1464 ;;      Params:         6       0       0       0       0       0       0       0       0
  1465 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1466 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1467 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1468 ;;Total ram usage:       15 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    1
  1471 ;; This function calls:
  1472 ;;		___ftpack
  1473 ;; This function is called by:
  1474 ;;		_temperature_get
  1475 ;;		_log
  1476 ;;		_eval_poly
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text6
  1481  000F6C                     __ptext6:
  1482                           	opt stack 0
  1483  000F6C                     ___ftmul:
  1484                           	opt stack 26
  1485                           
  1486                           ;incstack = 0
  1487  000F6C  C02E  F032         	movff	___ftmul@f1+2,??___ftmul
  1488  000F70  6A33               	clrf	(??___ftmul+1)& (0+255),c
  1489  000F72  6A34               	clrf	(??___ftmul+2)& (0+255),c
  1490  000F74  342D               	rlcf	___ftmul@f1+1,w,c
  1491  000F76  3632               	rlcf	??___ftmul& (0+255),f,c
  1492  000F78  E301               	bnc	u931
  1493  000F7A  8033               	bsf	(??___ftmul+1)& (0+255),0,c
  1494  000F7C                     u931:
  1495  000F7C  5032               	movf	??___ftmul,w,c
  1496  000F7E  6E35               	movwf	___ftmul@exp,c
  1497  000F80  6635               	tstfsz	___ftmul@exp& (0+255),c
  1498  000F82  D007               	goto	l2045
  1499  000F84  0E00               	movlw	0
  1500  000F86  6E2C               	movwf	?___ftmul,c
  1501  000F88  0E00               	movlw	0
  1502  000F8A  6E2D               	movwf	?___ftmul+1,c
  1503  000F8C  0E00               	movlw	0
  1504  000F8E  6E2E               	movwf	?___ftmul+2,c
  1505  000F90  0012               	return	
  1506  000F92                     l2045:
  1507  000F92  C031  F032         	movff	___ftmul@f2+2,??___ftmul
  1508  000F96  6A33               	clrf	(??___ftmul+1)& (0+255),c
  1509  000F98  6A34               	clrf	(??___ftmul+2)& (0+255),c
  1510  000F9A  3430               	rlcf	___ftmul@f2+1,w,c
  1511  000F9C  3632               	rlcf	??___ftmul& (0+255),f,c
  1512  000F9E  E301               	bnc	u951
  1513  000FA0  8033               	bsf	(??___ftmul+1)& (0+255),0,c
  1514  000FA2                     u951:
  1515  000FA2  5032               	movf	??___ftmul,w,c
  1516  000FA4  6E3A               	movwf	___ftmul@sign,c
  1517  000FA6  663A               	tstfsz	___ftmul@sign& (0+255),c
  1518  000FA8  D007               	goto	l2051
  1519  000FAA  0E00               	movlw	0
  1520  000FAC  6E2C               	movwf	?___ftmul,c
  1521  000FAE  0E00               	movlw	0
  1522  000FB0  6E2D               	movwf	?___ftmul+1,c
  1523  000FB2  0E00               	movlw	0
  1524  000FB4  6E2E               	movwf	?___ftmul+2,c
  1525  000FB6  0012               	return	
  1526  000FB8                     l2051:
  1527  000FB8  503A               	movf	___ftmul@sign,w,c
  1528  000FBA  0F7B               	addlw	123
  1529  000FBC  2635               	addwf	___ftmul@exp,f,c
  1530  000FBE  C02E  F03A         	movff	___ftmul@f1+2,___ftmul@sign
  1531  000FC2  5031               	movf	___ftmul@f2+2,w,c
  1532  000FC4  1A3A               	xorwf	___ftmul@sign,f,c
  1533  000FC6  0E80               	movlw	128
  1534  000FC8  163A               	andwf	___ftmul@sign,f,c
  1535  000FCA  8E2D               	bsf	___ftmul@f1+1,7,c
  1536  000FCC  8E30               	bsf	___ftmul@f2+1,7,c
  1537  000FCE  0EFF               	movlw	255
  1538  000FD0  162F               	andwf	___ftmul@f2,f,c
  1539  000FD2  0EFF               	movlw	255
  1540  000FD4  1630               	andwf	___ftmul@f2+1,f,c
  1541  000FD6  0E00               	movlw	0
  1542  000FD8  1631               	andwf	___ftmul@f2+2,f,c
  1543  000FDA  0E00               	movlw	0
  1544  000FDC  6E36               	movwf	___ftmul@f3_as_product,c
  1545  000FDE  0E00               	movlw	0
  1546  000FE0  6E37               	movwf	___ftmul@f3_as_product+1,c
  1547  000FE2  0E00               	movlw	0
  1548  000FE4  6E38               	movwf	___ftmul@f3_as_product+2,c
  1549  000FE6  6E32               	movwf	??___ftmul& (0+255),c
  1550  000FE8  0E07               	movlw	7
  1551  000FEA  6E39               	movwf	___ftmul@cntr,c
  1552  000FEC  5032               	movf	??___ftmul& (0+255),w,c
  1553  000FEE                     l2065:
  1554  000FEE  A02C               	btfss	___ftmul@f1,0,c
  1555  000FF0  D006               	goto	l2069
  1556  000FF2  502F               	movf	___ftmul@f2,w,c
  1557  000FF4  2636               	addwf	___ftmul@f3_as_product,f,c
  1558  000FF6  5030               	movf	___ftmul@f2+1,w,c
  1559  000FF8  2237               	addwfc	___ftmul@f3_as_product+1,f,c
  1560  000FFA  5031               	movf	___ftmul@f2+2,w,c
  1561  000FFC  2238               	addwfc	___ftmul@f3_as_product+2,f,c
  1562  000FFE                     l2069:
  1563  000FFE  90D8               	bcf	status,0,c
  1564  001000  322E               	rrcf	___ftmul@f1+2,f,c
  1565  001002  322D               	rrcf	___ftmul@f1+1,f,c
  1566  001004  322C               	rrcf	___ftmul@f1,f,c
  1567  001006  90D8               	bcf	status,0,c
  1568  001008  362F               	rlcf	___ftmul@f2,f,c
  1569  00100A  3630               	rlcf	___ftmul@f2+1,f,c
  1570  00100C  3631               	rlcf	___ftmul@f2+2,f,c
  1571  00100E  2E39               	decfsz	___ftmul@cntr,f,c
  1572  001010  D7EE               	goto	l2065
  1573  001012  6E32               	movwf	??___ftmul& (0+255),c
  1574  001014  0E09               	movlw	9
  1575  001016  6E39               	movwf	___ftmul@cntr,c
  1576  001018  5032               	movf	??___ftmul& (0+255),w,c
  1577  00101A                     l2075:
  1578  00101A  A02C               	btfss	___ftmul@f1,0,c
  1579  00101C  D006               	goto	l2079
  1580  00101E  502F               	movf	___ftmul@f2,w,c
  1581  001020  2636               	addwf	___ftmul@f3_as_product,f,c
  1582  001022  5030               	movf	___ftmul@f2+1,w,c
  1583  001024  2237               	addwfc	___ftmul@f3_as_product+1,f,c
  1584  001026  5031               	movf	___ftmul@f2+2,w,c
  1585  001028  2238               	addwfc	___ftmul@f3_as_product+2,f,c
  1586  00102A                     l2079:
  1587  00102A  90D8               	bcf	status,0,c
  1588  00102C  322E               	rrcf	___ftmul@f1+2,f,c
  1589  00102E  322D               	rrcf	___ftmul@f1+1,f,c
  1590  001030  322C               	rrcf	___ftmul@f1,f,c
  1591  001032  90D8               	bcf	status,0,c
  1592  001034  3238               	rrcf	___ftmul@f3_as_product+2,f,c
  1593  001036  3237               	rrcf	___ftmul@f3_as_product+1,f,c
  1594  001038  3236               	rrcf	___ftmul@f3_as_product,f,c
  1595  00103A  2E39               	decfsz	___ftmul@cntr,f,c
  1596  00103C  D7EE               	goto	l2075
  1597  00103E  C036  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1598  001042  C037  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1599  001046  C038  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1600  00104A  C035  F004         	movff	___ftmul@exp,___ftpack@exp
  1601  00104E  C03A  F005         	movff	___ftmul@sign,___ftpack@sign
  1602  001052  EC0E  F009         	call	___ftpack	;wreg free
  1603  001056  C001  F02C         	movff	?___ftpack,?___ftmul
  1604  00105A  C002  F02D         	movff	?___ftpack+1,?___ftmul+1
  1605  00105E  C003  F02E         	movff	?___ftpack+2,?___ftmul+2
  1606  001062  0012               	return	
  1607  001064                     __end_of___ftmul:
  1608                           	opt stack 0
  1609                           tblptru	equ	0xFF8
  1610                           tblptrh	equ	0xFF7
  1611                           tblptrl	equ	0xFF6
  1612                           tablat	equ	0xFF5
  1613                           prodh	equ	0xFF4
  1614                           prodl	equ	0xFF3
  1615                           postinc2	equ	0xFDE
  1616                           postdec2	equ	0xFDD
  1617                           fsr2h	equ	0xFDA
  1618                           fsr2l	equ	0xFD9
  1619                           status	equ	0xFD8
  1620                           
  1621 ;; *************** function ___ftadd *****************
  1622 ;; Defined at:
  1623 ;;		line 86 in file "/opt/microchip/xc8/v1.31/sources/common/ftadd.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  f1              3   16[COMRAM] float 
  1626 ;;  f2              3   19[COMRAM] float 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  exp1            1   27[COMRAM] unsigned char 
  1629 ;;  exp2            1   26[COMRAM] unsigned char 
  1630 ;;  sign            1   25[COMRAM] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  3   16[COMRAM] float 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1640 ;;      Params:         6       0       0       0       0       0       0       0       0
  1641 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1642 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1643 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1644 ;;Total ram usage:       12 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    1
  1647 ;; This function calls:
  1648 ;;		___ftpack
  1649 ;; This function is called by:
  1650 ;;		_temperature_get
  1651 ;;		_log
  1652 ;;		_eval_poly
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text7
  1657  000C86                     __ptext7:
  1658                           	opt stack 0
  1659  000C86                     ___ftadd:
  1660                           	opt stack 26
  1661                           
  1662                           ;incstack = 0
  1663  000C86  C013  F017         	movff	___ftadd@f1+2,??___ftadd
  1664  000C8A  6A18               	clrf	(??___ftadd+1)& (0+255),c
  1665  000C8C  6A19               	clrf	(??___ftadd+2)& (0+255),c
  1666  000C8E  3412               	rlcf	___ftadd@f1+1,w,c
  1667  000C90  3617               	rlcf	??___ftadd& (0+255),f,c
  1668  000C92  E301               	bnc	u721
  1669  000C94  8018               	bsf	(??___ftadd+1)& (0+255),0,c
  1670  000C96                     u721:
  1671  000C96  5017               	movf	??___ftadd,w,c
  1672  000C98  6E1C               	movwf	___ftadd@exp1,c
  1673  000C9A  C016  F017         	movff	___ftadd@f2+2,??___ftadd
  1674  000C9E  6A18               	clrf	(??___ftadd+1)& (0+255),c
  1675  000CA0  6A19               	clrf	(??___ftadd+2)& (0+255),c
  1676  000CA2  3415               	rlcf	___ftadd@f2+1,w,c
  1677  000CA4  3617               	rlcf	??___ftadd& (0+255),f,c
  1678  000CA6  E301               	bnc	u731
  1679  000CA8  8018               	bsf	(??___ftadd+1)& (0+255),0,c
  1680  000CAA                     u731:
  1681  000CAA  5017               	movf	??___ftadd,w,c
  1682  000CAC  6E1B               	movwf	___ftadd@exp2,c
  1683  000CAE  501C               	movf	___ftadd@exp1,w,c
  1684  000CB0  B4D8               	btfsc	status,2,c
  1685  000CB2  D00C               	goto	l394
  1686  000CB4  501B               	movf	___ftadd@exp2,w,c
  1687  000CB6  5C1C               	subwf	___ftadd@exp1,w,c
  1688  000CB8  B0D8               	btfsc	status,0,c
  1689  000CBA  D00F               	goto	l1977
  1690  000CBC  501C               	movf	___ftadd@exp1,w,c
  1691  000CBE  0800               	sublw	0
  1692  000CC0  241B               	addwf	___ftadd@exp2,w,c
  1693  000CC2  6E17               	movwf	??___ftadd& (0+255),c
  1694  000CC4  0E19               	movlw	25
  1695  000CC6  5C17               	subwf	??___ftadd,w,c
  1696  000CC8  A0D8               	btfss	status,0,c
  1697  000CCA  D007               	goto	l1977
  1698  000CCC                     l394:
  1699  000CCC  C014  F011         	movff	___ftadd@f2,?___ftadd
  1700  000CD0  C015  F012         	movff	___ftadd@f2+1,?___ftadd+1
  1701  000CD4  C016  F013         	movff	___ftadd@f2+2,?___ftadd+2
  1702  000CD8  0012               	return	
  1703  000CDA                     l1977:
  1704  000CDA  501B               	movf	___ftadd@exp2,w,c
  1705  000CDC  B4D8               	btfsc	status,2,c
  1706  000CDE  D00C               	goto	l398
  1707  000CE0  501C               	movf	___ftadd@exp1,w,c
  1708  000CE2  5C1B               	subwf	___ftadd@exp2,w,c
  1709  000CE4  B0D8               	btfsc	status,0,c
  1710  000CE6  D00F               	goto	l1983
  1711  000CE8  501B               	movf	___ftadd@exp2,w,c
  1712  000CEA  0800               	sublw	0
  1713  000CEC  241C               	addwf	___ftadd@exp1,w,c
  1714  000CEE  6E17               	movwf	??___ftadd& (0+255),c
  1715  000CF0  0E19               	movlw	25
  1716  000CF2  5C17               	subwf	??___ftadd,w,c
  1717  000CF4  A0D8               	btfss	status,0,c
  1718  000CF6  D007               	goto	l1983
  1719  000CF8                     l398:
  1720  000CF8  C011  F011         	movff	___ftadd@f1,?___ftadd
  1721  000CFC  C012  F012         	movff	___ftadd@f1+1,?___ftadd+1
  1722  000D00  C013  F013         	movff	___ftadd@f1+2,?___ftadd+2
  1723  000D04  0012               	return	
  1724  000D06                     l1983:
  1725  000D06  6E17               	movwf	??___ftadd& (0+255),c
  1726  000D08  0E06               	movlw	6
  1727  000D0A  6E1A               	movwf	___ftadd@sign,c
  1728  000D0C  5017               	movf	??___ftadd& (0+255),w,c
  1729  000D0E  BE13               	btfsc	___ftadd@f1+2,7,c
  1730  000D10  8E1A               	bsf	___ftadd@sign,7,c
  1731  000D12  BE16               	btfsc	___ftadd@f2+2,7,c
  1732  000D14  8C1A               	bsf	___ftadd@sign,6,c
  1733  000D16  8E12               	bsf	___ftadd@f1+1,7,c
  1734  000D18  0EFF               	movlw	255
  1735  000D1A  1611               	andwf	___ftadd@f1,f,c
  1736  000D1C  0EFF               	movlw	255
  1737  000D1E  1612               	andwf	___ftadd@f1+1,f,c
  1738  000D20  0E00               	movlw	0
  1739  000D22  1613               	andwf	___ftadd@f1+2,f,c
  1740  000D24  8E15               	bsf	___ftadd@f2+1,7,c
  1741  000D26  0EFF               	movlw	255
  1742  000D28  1614               	andwf	___ftadd@f2,f,c
  1743  000D2A  0EFF               	movlw	255
  1744  000D2C  1615               	andwf	___ftadd@f2+1,f,c
  1745  000D2E  0E00               	movlw	0
  1746  000D30  1616               	andwf	___ftadd@f2+2,f,c
  1747  000D32  501B               	movf	___ftadd@exp2,w,c
  1748  000D34  5C1C               	subwf	___ftadd@exp1,w,c
  1749  000D36  B0D8               	btfsc	status,0,c
  1750  000D38  D01A               	goto	l2009
  1751  000D3A                     l1999:
  1752  000D3A  90D8               	bcf	status,0,c
  1753  000D3C  3614               	rlcf	___ftadd@f2,f,c
  1754  000D3E  3615               	rlcf	___ftadd@f2+1,f,c
  1755  000D40  3616               	rlcf	___ftadd@f2+2,f,c
  1756  000D42  061B               	decf	___ftadd@exp2,f,c
  1757  000D44  501B               	movf	___ftadd@exp2,w,c
  1758  000D46  181C               	xorwf	___ftadd@exp1,w,c
  1759  000D48  B4D8               	btfsc	status,2,c
  1760  000D4A  D00D               	goto	l2007
  1761  000D4C  061A               	decf	___ftadd@sign,f,c
  1762  000D4E  C01A  F017         	movff	___ftadd@sign,??___ftadd
  1763  000D52  0E07               	movlw	7
  1764  000D54  1617               	andwf	??___ftadd,f,c
  1765  000D56  B4D8               	btfsc	status,2,c
  1766  000D58  D006               	goto	l2007
  1767  000D5A  D7EF               	goto	l1999
  1768  000D5C                     l2005:
  1769  000D5C  90D8               	bcf	status,0,c
  1770  000D5E  3213               	rrcf	___ftadd@f1+2,f,c
  1771  000D60  3212               	rrcf	___ftadd@f1+1,f,c
  1772  000D62  3211               	rrcf	___ftadd@f1,f,c
  1773  000D64  2A1C               	incf	___ftadd@exp1,f,c
  1774  000D66                     l2007:
  1775  000D66  501B               	movf	___ftadd@exp2,w,c
  1776  000D68  621C               	cpfseq	___ftadd@exp1,c
  1777  000D6A  D7F8               	goto	l2005
  1778  000D6C  D01D               	goto	l409
  1779  000D6E                     l2009:
  1780  000D6E  501C               	movf	___ftadd@exp1,w,c
  1781  000D70  5C1B               	subwf	___ftadd@exp2,w,c
  1782  000D72  B0D8               	btfsc	status,0,c
  1783  000D74  D019               	goto	l409
  1784  000D76                     l2011:
  1785  000D76  90D8               	bcf	status,0,c
  1786  000D78  3611               	rlcf	___ftadd@f1,f,c
  1787  000D7A  3612               	rlcf	___ftadd@f1+1,f,c
  1788  000D7C  3613               	rlcf	___ftadd@f1+2,f,c
  1789  000D7E  061C               	decf	___ftadd@exp1,f,c
  1790  000D80  501B               	movf	___ftadd@exp2,w,c
  1791  000D82  181C               	xorwf	___ftadd@exp1,w,c
  1792  000D84  B4D8               	btfsc	status,2,c
  1793  000D86  D00D               	goto	l2019
  1794  000D88  061A               	decf	___ftadd@sign,f,c
  1795  000D8A  C01A  F017         	movff	___ftadd@sign,??___ftadd
  1796  000D8E  0E07               	movlw	7
  1797  000D90  1617               	andwf	??___ftadd,f,c
  1798  000D92  B4D8               	btfsc	status,2,c
  1799  000D94  D006               	goto	l2019
  1800  000D96  D7EF               	goto	l2011
  1801  000D98                     l2017:
  1802  000D98  90D8               	bcf	status,0,c
  1803  000D9A  3216               	rrcf	___ftadd@f2+2,f,c
  1804  000D9C  3215               	rrcf	___ftadd@f2+1,f,c
  1805  000D9E  3214               	rrcf	___ftadd@f2,f,c
  1806  000DA0  2A1B               	incf	___ftadd@exp2,f,c
  1807  000DA2                     l2019:
  1808  000DA2  501B               	movf	___ftadd@exp2,w,c
  1809  000DA4  621C               	cpfseq	___ftadd@exp1,c
  1810  000DA6  D7F8               	goto	l2017
  1811  000DA8                     l409:
  1812  000DA8  AE1A               	btfss	___ftadd@sign,7,c
  1813  000DAA  D00C               	goto	l418
  1814  000DAC  0EFF               	movlw	255
  1815  000DAE  1A11               	xorwf	___ftadd@f1,f,c
  1816  000DB0  0EFF               	movlw	255
  1817  000DB2  1A12               	xorwf	___ftadd@f1+1,f,c
  1818  000DB4  0EFF               	movlw	255
  1819  000DB6  1A13               	xorwf	___ftadd@f1+2,f,c
  1820  000DB8  0E01               	movlw	1
  1821  000DBA  2611               	addwf	___ftadd@f1,f,c
  1822  000DBC  0E00               	movlw	0
  1823  000DBE  2212               	addwfc	___ftadd@f1+1,f,c
  1824  000DC0  0E00               	movlw	0
  1825  000DC2  2213               	addwfc	___ftadd@f1+2,f,c
  1826  000DC4                     l418:
  1827  000DC4  AC1A               	btfss	___ftadd@sign,6,c
  1828  000DC6  D00C               	goto	l2025
  1829  000DC8  0EFF               	movlw	255
  1830  000DCA  1A14               	xorwf	___ftadd@f2,f,c
  1831  000DCC  0EFF               	movlw	255
  1832  000DCE  1A15               	xorwf	___ftadd@f2+1,f,c
  1833  000DD0  0EFF               	movlw	255
  1834  000DD2  1A16               	xorwf	___ftadd@f2+2,f,c
  1835  000DD4  0E01               	movlw	1
  1836  000DD6  2614               	addwf	___ftadd@f2,f,c
  1837  000DD8  0E00               	movlw	0
  1838  000DDA  2215               	addwfc	___ftadd@f2+1,f,c
  1839  000DDC  0E00               	movlw	0
  1840  000DDE  2216               	addwfc	___ftadd@f2+2,f,c
  1841  000DE0                     l2025:
  1842  000DE0  6E17               	movwf	??___ftadd& (0+255),c
  1843  000DE2  0E00               	movlw	0
  1844  000DE4  6E1A               	movwf	___ftadd@sign,c
  1845  000DE6  5017               	movf	??___ftadd& (0+255),w,c
  1846  000DE8  5011               	movf	___ftadd@f1,w,c
  1847  000DEA  2614               	addwf	___ftadd@f2,f,c
  1848  000DEC  5012               	movf	___ftadd@f1+1,w,c
  1849  000DEE  2215               	addwfc	___ftadd@f2+1,f,c
  1850  000DF0  5013               	movf	___ftadd@f1+2,w,c
  1851  000DF2  2216               	addwfc	___ftadd@f2+2,f,c
  1852  000DF4  AE16               	btfss	___ftadd@f2+2,7,c
  1853  000DF6  D010               	goto	l2035
  1854  000DF8  0EFF               	movlw	255
  1855  000DFA  1A14               	xorwf	___ftadd@f2,f,c
  1856  000DFC  0EFF               	movlw	255
  1857  000DFE  1A15               	xorwf	___ftadd@f2+1,f,c
  1858  000E00  0EFF               	movlw	255
  1859  000E02  1A16               	xorwf	___ftadd@f2+2,f,c
  1860  000E04  0E01               	movlw	1
  1861  000E06  2614               	addwf	___ftadd@f2,f,c
  1862  000E08  0E00               	movlw	0
  1863  000E0A  2215               	addwfc	___ftadd@f2+1,f,c
  1864  000E0C  0E00               	movlw	0
  1865  000E0E  2216               	addwfc	___ftadd@f2+2,f,c
  1866  000E10  6E17               	movwf	??___ftadd& (0+255),c
  1867  000E12  0E01               	movlw	1
  1868  000E14  6E1A               	movwf	___ftadd@sign,c
  1869  000E16  5017               	movf	??___ftadd& (0+255),w,c
  1870  000E18                     l2035:
  1871  000E18  C014  F001         	movff	___ftadd@f2,___ftpack@arg
  1872  000E1C  C015  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  1873  000E20  C016  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  1874  000E24  C01C  F004         	movff	___ftadd@exp1,___ftpack@exp
  1875  000E28  C01A  F005         	movff	___ftadd@sign,___ftpack@sign
  1876  000E2C  EC0E  F009         	call	___ftpack	;wreg free
  1877  000E30  C001  F011         	movff	?___ftpack,?___ftadd
  1878  000E34  C002  F012         	movff	?___ftpack+1,?___ftadd+1
  1879  000E38  C003  F013         	movff	?___ftpack+2,?___ftadd+2
  1880  000E3C  0012               	return	
  1881  000E3E                     __end_of___ftadd:
  1882                           	opt stack 0
  1883                           tblptru	equ	0xFF8
  1884                           tblptrh	equ	0xFF7
  1885                           tblptrl	equ	0xFF6
  1886                           tablat	equ	0xFF5
  1887                           prodh	equ	0xFF4
  1888                           prodl	equ	0xFF3
  1889                           postinc2	equ	0xFDE
  1890                           postdec2	equ	0xFDD
  1891                           fsr2h	equ	0xFDA
  1892                           fsr2l	equ	0xFD9
  1893                           status	equ	0xFD8
  1894                           
  1895 ;; *************** function ___awtoft *****************
  1896 ;; Defined at:
  1897 ;;		line 32 in file "/opt/microchip/xc8/v1.31/sources/common/awtoft.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  c               2    8[COMRAM] int 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  sign            1   12[COMRAM] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  3    8[COMRAM] float 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0, prodl, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1911 ;;      Params:         3       0       0       0       0       0       0       0       0
  1912 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1913 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1914 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1915 ;;Total ram usage:        5 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    1
  1918 ;; This function calls:
  1919 ;;		___ftpack
  1920 ;; This function is called by:
  1921 ;;		_log
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text8
  1926  0013E8                     __ptext8:
  1927                           	opt stack 0
  1928  0013E8                     ___awtoft:
  1929                           	opt stack 27
  1930                           
  1931                           ;incstack = 0
  1932  0013E8  6E0C               	movwf	??___awtoft& (0+255),c
  1933  0013EA  0E00               	movlw	0
  1934  0013EC  6E0D               	movwf	___awtoft@sign,c
  1935  0013EE  500C               	movf	??___awtoft& (0+255),w,c
  1936  0013F0  500A               	movf	___awtoft@c+1,w,c
  1937  0013F2  0A80               	xorlw	128
  1938  0013F4  6EF3               	movwf	prodl,c
  1939  0013F6  0E80               	movlw	128
  1940  0013F8  5CF3               	subwf	prodl,w,c
  1941  0013FA  0E00               	movlw	0
  1942  0013FC  B4D8               	btfsc	status,2,c
  1943  0013FE  5C09               	subwf	___awtoft@c,w,c
  1944  001400  B0D8               	btfsc	status,0,c
  1945  001402  D008               	goto	l2101
  1946  001404  6C09               	negf	___awtoft@c,c
  1947  001406  1E0A               	comf	___awtoft@c+1,f,c
  1948  001408  B0D8               	btfsc	status,0,c
  1949  00140A  2A0A               	incf	___awtoft@c+1,f,c
  1950  00140C  6E0C               	movwf	??___awtoft& (0+255),c
  1951  00140E  0E01               	movlw	1
  1952  001410  6E0D               	movwf	___awtoft@sign,c
  1953  001412  500C               	movf	??___awtoft& (0+255),w,c
  1954  001414                     l2101:
  1955  001414  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1956  001418  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1957  00141C  6A03               	clrf	___ftpack@arg+2,c
  1958  00141E  6E0C               	movwf	??___awtoft& (0+255),c
  1959  001420  0E8E               	movlw	142
  1960  001422  6E04               	movwf	___ftpack@exp,c
  1961  001424  500C               	movf	??___awtoft& (0+255),w,c
  1962  001426  C00D  F005         	movff	___awtoft@sign,___ftpack@sign
  1963  00142A  EC0E  F009         	call	___ftpack	;wreg free
  1964  00142E  C001  F009         	movff	?___ftpack,?___awtoft
  1965  001432  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1966  001436  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1967  00143A  0012               	return	
  1968  00143C                     __end_of___awtoft:
  1969                           	opt stack 0
  1970                           tblptru	equ	0xFF8
  1971                           tblptrh	equ	0xFF7
  1972                           tblptrl	equ	0xFF6
  1973                           tablat	equ	0xFF5
  1974                           prodh	equ	0xFF4
  1975                           prodl	equ	0xFF3
  1976                           postinc2	equ	0xFDE
  1977                           postdec2	equ	0xFDD
  1978                           fsr2h	equ	0xFDA
  1979                           fsr2l	equ	0xFD9
  1980                           status	equ	0xFD8
  1981                           
  1982 ;; *************** function _adc_convert *****************
  1983 ;; Defined at:
  1984 ;;		line 12 in file "ntc_temperature.h"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  channel         2    0[COMRAM] int 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  2    0[COMRAM] unsigned int 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1998 ;;      Params:         2       0       0       0       0       0       0       0       0
  1999 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2000 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2001 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2002 ;;Total ram usage:        4 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_temperature_get
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text9
  2012  001476                     __ptext9:
  2013                           	opt stack 0
  2014  001476                     _adc_convert:
  2015                           	opt stack 29
  2016                           
  2017                           ;ntc_temperature.h: 15: ADCON0bits.CHS = channel;
  2018                           
  2019                           ;incstack = 0
  2020  001476  C001  F003         	movff	adc_convert@channel,??_adc_convert
  2021  00147A  4603               	rlncf	??_adc_convert,f,c
  2022  00147C  4603               	rlncf	??_adc_convert,f,c
  2023  00147E  50C2               	movf	4034,w,c	;volatile
  2024  001480  1803               	xorwf	??_adc_convert,w,c
  2025  001482  0B83               	andlw	-125
  2026  001484  1803               	xorwf	??_adc_convert,w,c
  2027  001486  6EC2               	movwf	4034,c	;volatile
  2028                           
  2029                           ;ntc_temperature.h: 17: ADCON0bits.GO = 1;
  2030  001488  82C2               	bsf	4034,1,c	;volatile
  2031  00148A                     l31:
  2032  00148A  B2C2               	btfsc	4034,1,c	;volatile
  2033  00148C  D7FE               	goto	l31
  2034                           
  2035                           ;ntc_temperature.h: 21: return(ADRESH<<8)|ADRESL;
  2036  00148E  50C3               	movf	4035,w,c	;volatile
  2037  001490  CFC4 F003          	movff	4036,??_adc_convert	;volatile
  2038  001494  6A04               	clrf	(??_adc_convert+1)& (0+255),c
  2039  001496  C003  F004         	movff	??_adc_convert,??_adc_convert+1
  2040  00149A  6A03               	clrf	??_adc_convert,c
  2041  00149C  1003               	iorwf	??_adc_convert,w,c
  2042  00149E  6E01               	movwf	?_adc_convert,c
  2043  0014A0  5004               	movf	??_adc_convert+1,w,c
  2044  0014A2  6E02               	movwf	?_adc_convert+1,c
  2045  0014A4  0012               	return	
  2046  0014A6                     __end_of_adc_convert:
  2047                           	opt stack 0
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           prodh	equ	0xFF4
  2053                           prodl	equ	0xFF3
  2054                           postinc2	equ	0xFDE
  2055                           postdec2	equ	0xFDD
  2056                           fsr2h	equ	0xFDA
  2057                           fsr2l	equ	0xFD9
  2058                           status	equ	0xFD8
  2059                           
  2060 ;; *************** function ___lwtoft *****************
  2061 ;; Defined at:
  2062 ;;		line 28 in file "/opt/microchip/xc8/v1.31/sources/common/lwtoft.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  c               2    8[COMRAM] unsigned int 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  3    8[COMRAM] float 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2076 ;;      Params:         3       0       0       0       0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2078 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2079 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2080 ;;Total ram usage:        5 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    1
  2083 ;; This function calls:
  2084 ;;		___ftpack
  2085 ;; This function is called by:
  2086 ;;		_temperature_get
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text10
  2091  0014A6                     __ptext10:
  2092                           	opt stack 0
  2093  0014A6                     ___lwtoft:
  2094                           	opt stack 28
  2095                           
  2096                           ;incstack = 0
  2097  0014A6  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  2098  0014AA  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  2099  0014AE  6A03               	clrf	___ftpack@arg+2,c
  2100  0014B0  6E0C               	movwf	??___lwtoft& (0+255),c
  2101  0014B2  0E8E               	movlw	142
  2102  0014B4  6E04               	movwf	___ftpack@exp,c
  2103  0014B6  500C               	movf	??___lwtoft& (0+255),w,c
  2104  0014B8  6E0D               	movwf	(??___lwtoft+1)& (0+255),c
  2105  0014BA  0E00               	movlw	0
  2106  0014BC  6E05               	movwf	___ftpack@sign,c
  2107  0014BE  500D               	movf	(??___lwtoft+1)& (0+255),w,c
  2108  0014C0  EC0E  F009         	call	___ftpack	;wreg free
  2109  0014C4  C001  F009         	movff	?___ftpack,?___lwtoft
  2110  0014C8  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  2111  0014CC  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  2112  0014D0  0012               	return	
  2113  0014D2                     __end_of___lwtoft:
  2114                           	opt stack 0
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           prodh	equ	0xFF4
  2120                           prodl	equ	0xFF3
  2121                           postinc2	equ	0xFDE
  2122                           postdec2	equ	0xFDD
  2123                           fsr2h	equ	0xFDA
  2124                           fsr2l	equ	0xFD9
  2125                           status	equ	0xFD8
  2126                           
  2127 ;; *************** function ___ftneg *****************
  2128 ;; Defined at:
  2129 ;;		line 15 in file "/opt/microchip/xc8/v1.31/sources/common/ftneg.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  f1              3   13[COMRAM] float 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  3   13[COMRAM] float 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2143 ;;      Params:         3       0       0       0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2146 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2147 ;;Total ram usage:        3 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_temperature_get
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text11
  2157  0014D2                     __ptext11:
  2158                           	opt stack 0
  2159  0014D2                     ___ftneg:
  2160                           	opt stack 29
  2161                           
  2162                           ;incstack = 0
  2163  0014D2  0E7F               	movlw	127
  2164  0014D4  1410               	andwf	___ftneg@f1+2,w,c
  2165  0014D6  100F               	iorwf	___ftneg@f1+1,w,c
  2166  0014D8  100E               	iorwf	___ftneg@f1,w,c
  2167  0014DA  B4D8               	btfsc	status,2,c
  2168  0014DC  D006               	goto	l451
  2169  0014DE  0E00               	movlw	0
  2170  0014E0  1A0E               	xorwf	___ftneg@f1,f,c
  2171  0014E2  0E00               	movlw	0
  2172  0014E4  1A0F               	xorwf	___ftneg@f1+1,f,c
  2173  0014E6  0E80               	movlw	128
  2174  0014E8  1A10               	xorwf	___ftneg@f1+2,f,c
  2175  0014EA                     l451:
  2176  0014EA  C00E  F00E         	movff	___ftneg@f1,?___ftneg
  2177  0014EE  C00F  F00F         	movff	___ftneg@f1+1,?___ftneg+1
  2178  0014F2  C010  F010         	movff	___ftneg@f1+2,?___ftneg+2
  2179  0014F6  0012               	return	
  2180  0014F8                     __end_of___ftneg:
  2181                           	opt stack 0
  2182                           tblptru	equ	0xFF8
  2183                           tblptrh	equ	0xFF7
  2184                           tblptrl	equ	0xFF6
  2185                           tablat	equ	0xFF5
  2186                           prodh	equ	0xFF4
  2187                           prodl	equ	0xFF3
  2188                           postinc2	equ	0xFDE
  2189                           postdec2	equ	0xFDD
  2190                           fsr2h	equ	0xFDA
  2191                           fsr2l	equ	0xFD9
  2192                           status	equ	0xFD8
  2193                           
  2194 ;; *************** function ___ftdiv *****************
  2195 ;; Defined at:
  2196 ;;		line 49 in file "/opt/microchip/xc8/v1.31/sources/common/ftdiv.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  f1              3   28[COMRAM] float 
  2199 ;;  f2              3   31[COMRAM] float 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  f3              3   38[COMRAM] float 
  2202 ;;  sign            1   42[COMRAM] unsigned char 
  2203 ;;  exp             1   41[COMRAM] unsigned char 
  2204 ;;  cntr            1   37[COMRAM] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  3   28[COMRAM] float 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2214 ;;      Params:         6       0       0       0       0       0       0       0       0
  2215 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2216 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2217 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2218 ;;Total ram usage:       15 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    1
  2221 ;; This function calls:
  2222 ;;		___ftpack
  2223 ;; This function is called by:
  2224 ;;		_temperature_get
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text12
  2229  001064                     __ptext12:
  2230                           	opt stack 0
  2231  001064                     ___ftdiv:
  2232                           	opt stack 28
  2233                           
  2234                           ;incstack = 0
  2235  001064  C01F  F023         	movff	___ftdiv@f1+2,??___ftdiv
  2236  001068  6A24               	clrf	(??___ftdiv+1)& (0+255),c
  2237  00106A  6A25               	clrf	(??___ftdiv+2)& (0+255),c
  2238  00106C  341E               	rlcf	___ftdiv@f1+1,w,c
  2239  00106E  3623               	rlcf	??___ftdiv& (0+255),f,c
  2240  001070  E301               	bnc	u1061
  2241  001072  8024               	bsf	(??___ftdiv+1)& (0+255),0,c
  2242  001074                     u1061:
  2243  001074  5023               	movf	??___ftdiv,w,c
  2244  001076  6E2A               	movwf	___ftdiv@exp,c
  2245  001078  662A               	tstfsz	___ftdiv@exp& (0+255),c
  2246  00107A  D007               	goto	l2167
  2247  00107C  0E00               	movlw	0
  2248  00107E  6E1D               	movwf	?___ftdiv,c
  2249  001080  0E00               	movlw	0
  2250  001082  6E1E               	movwf	?___ftdiv+1,c
  2251  001084  0E00               	movlw	0
  2252  001086  6E1F               	movwf	?___ftdiv+2,c
  2253  001088  0012               	return	
  2254  00108A                     l2167:
  2255  00108A  C022  F023         	movff	___ftdiv@f2+2,??___ftdiv
  2256  00108E  6A24               	clrf	(??___ftdiv+1)& (0+255),c
  2257  001090  6A25               	clrf	(??___ftdiv+2)& (0+255),c
  2258  001092  3421               	rlcf	___ftdiv@f2+1,w,c
  2259  001094  3623               	rlcf	??___ftdiv& (0+255),f,c
  2260  001096  E301               	bnc	u1081
  2261  001098  8024               	bsf	(??___ftdiv+1)& (0+255),0,c
  2262  00109A                     u1081:
  2263  00109A  5023               	movf	??___ftdiv,w,c
  2264  00109C  6E2B               	movwf	___ftdiv@sign,c
  2265  00109E  662B               	tstfsz	___ftdiv@sign& (0+255),c
  2266  0010A0  D007               	goto	l2173
  2267  0010A2  0E00               	movlw	0
  2268  0010A4  6E1D               	movwf	?___ftdiv,c
  2269  0010A6  0E00               	movlw	0
  2270  0010A8  6E1E               	movwf	?___ftdiv+1,c
  2271  0010AA  0E00               	movlw	0
  2272  0010AC  6E1F               	movwf	?___ftdiv+2,c
  2273  0010AE  0012               	return	
  2274  0010B0                     l2173:
  2275  0010B0  0E00               	movlw	0
  2276  0010B2  6E27               	movwf	___ftdiv@f3,c
  2277  0010B4  0E00               	movlw	0
  2278  0010B6  6E28               	movwf	___ftdiv@f3+1,c
  2279  0010B8  0E00               	movlw	0
  2280  0010BA  6E29               	movwf	___ftdiv@f3+2,c
  2281  0010BC  502B               	movf	___ftdiv@sign,w,c
  2282  0010BE  0F89               	addlw	137
  2283  0010C0  5E2A               	subwf	___ftdiv@exp,f,c
  2284  0010C2  C01F  F02B         	movff	___ftdiv@f1+2,___ftdiv@sign
  2285  0010C6  5022               	movf	___ftdiv@f2+2,w,c
  2286  0010C8  1A2B               	xorwf	___ftdiv@sign,f,c
  2287  0010CA  0E80               	movlw	128
  2288  0010CC  162B               	andwf	___ftdiv@sign,f,c
  2289  0010CE  8E1E               	bsf	___ftdiv@f1+1,7,c
  2290  0010D0  0EFF               	movlw	255
  2291  0010D2  161D               	andwf	___ftdiv@f1,f,c
  2292  0010D4  0EFF               	movlw	255
  2293  0010D6  161E               	andwf	___ftdiv@f1+1,f,c
  2294  0010D8  0E00               	movlw	0
  2295  0010DA  161F               	andwf	___ftdiv@f1+2,f,c
  2296  0010DC  8E21               	bsf	___ftdiv@f2+1,7,c
  2297  0010DE  0EFF               	movlw	255
  2298  0010E0  1620               	andwf	___ftdiv@f2,f,c
  2299  0010E2  0EFF               	movlw	255
  2300  0010E4  1621               	andwf	___ftdiv@f2+1,f,c
  2301  0010E6  0E00               	movlw	0
  2302  0010E8  1622               	andwf	___ftdiv@f2+2,f,c
  2303  0010EA  6E23               	movwf	??___ftdiv& (0+255),c
  2304  0010EC  0E18               	movlw	24
  2305  0010EE  6E26               	movwf	___ftdiv@cntr,c
  2306  0010F0  5023               	movf	??___ftdiv& (0+255),w,c
  2307  0010F2                     l428:
  2308  0010F2  90D8               	bcf	status,0,c
  2309  0010F4  3627               	rlcf	___ftdiv@f3,f,c
  2310  0010F6  3628               	rlcf	___ftdiv@f3+1,f,c
  2311  0010F8  3629               	rlcf	___ftdiv@f3+2,f,c
  2312  0010FA  5020               	movf	___ftdiv@f2,w,c
  2313  0010FC  5C1D               	subwf	___ftdiv@f1,w,c
  2314  0010FE  5021               	movf	___ftdiv@f2+1,w,c
  2315  001100  581E               	subwfb	___ftdiv@f1+1,w,c
  2316  001102  5022               	movf	___ftdiv@f2+2,w,c
  2317  001104  581F               	subwfb	___ftdiv@f1+2,w,c
  2318  001106  A0D8               	btfss	status,0,c
  2319  001108  D007               	goto	l429
  2320  00110A  5020               	movf	___ftdiv@f2,w,c
  2321  00110C  5E1D               	subwf	___ftdiv@f1,f,c
  2322  00110E  5021               	movf	___ftdiv@f2+1,w,c
  2323  001110  5A1E               	subwfb	___ftdiv@f1+1,f,c
  2324  001112  5022               	movf	___ftdiv@f2+2,w,c
  2325  001114  5A1F               	subwfb	___ftdiv@f1+2,f,c
  2326  001116  8027               	bsf	___ftdiv@f3,0,c
  2327  001118                     l429:
  2328  001118  90D8               	bcf	status,0,c
  2329  00111A  361D               	rlcf	___ftdiv@f1,f,c
  2330  00111C  361E               	rlcf	___ftdiv@f1+1,f,c
  2331  00111E  361F               	rlcf	___ftdiv@f1+2,f,c
  2332  001120  2E26               	decfsz	___ftdiv@cntr,f,c
  2333  001122  D7E7               	goto	l428
  2334  001124  C027  F001         	movff	___ftdiv@f3,___ftpack@arg
  2335  001128  C028  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2336  00112C  C029  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2337  001130  C02A  F004         	movff	___ftdiv@exp,___ftpack@exp
  2338  001134  C02B  F005         	movff	___ftdiv@sign,___ftpack@sign
  2339  001138  EC0E  F009         	call	___ftpack	;wreg free
  2340  00113C  C001  F01D         	movff	?___ftpack,?___ftdiv
  2341  001140  C002  F01E         	movff	?___ftpack+1,?___ftdiv+1
  2342  001144  C003  F01F         	movff	?___ftpack+2,?___ftdiv+2
  2343  001148  0012               	return	
  2344  00114A                     __end_of___ftdiv:
  2345                           	opt stack 0
  2346                           tblptru	equ	0xFF8
  2347                           tblptrh	equ	0xFF7
  2348                           tblptrl	equ	0xFF6
  2349                           tablat	equ	0xFF5
  2350                           prodh	equ	0xFF4
  2351                           prodl	equ	0xFF3
  2352                           postinc2	equ	0xFDE
  2353                           postdec2	equ	0xFDD
  2354                           fsr2h	equ	0xFDA
  2355                           fsr2l	equ	0xFD9
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function ___ftpack *****************
  2359 ;; Defined at:
  2360 ;;		line 62 in file "/opt/microchip/xc8/v1.31/sources/common/float.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  arg             3    0[COMRAM] unsigned um
  2363 ;;  exp             1    3[COMRAM] unsigned char 
  2364 ;;  sign            1    4[COMRAM] unsigned char 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;		None
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  3    0[COMRAM] float 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2376 ;;      Params:         5       0       0       0       0       0       0       0       0
  2377 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2378 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2379 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2380 ;;Total ram usage:        8 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		___awtoft
  2386 ;;		___ftadd
  2387 ;;		___ftdiv
  2388 ;;		___ftmul
  2389 ;;		___lwtoft
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text13
  2394  00121C                     __ptext13:
  2395                           	opt stack 0
  2396  00121C                     ___ftpack:
  2397                           	opt stack 26
  2398                           
  2399                           ;incstack = 0
  2400  00121C  5004               	movf	___ftpack@exp,w,c
  2401  00121E  B4D8               	btfsc	status,2,c
  2402  001220  D005               	goto	l1939
  2403  001222  5001               	movf	___ftpack@arg,w,c
  2404  001224  1002               	iorwf	___ftpack@arg+1,w,c
  2405  001226  1003               	iorwf	___ftpack@arg+2,w,c
  2406  001228  A4D8               	btfss	status,2,c
  2407  00122A  D00C               	goto	l1945
  2408  00122C                     l1939:
  2409  00122C  0E00               	movlw	0
  2410  00122E  6E01               	movwf	?___ftpack,c
  2411  001230  0E00               	movlw	0
  2412  001232  6E02               	movwf	?___ftpack+1,c
  2413  001234  0E00               	movlw	0
  2414  001236  6E03               	movwf	?___ftpack+2,c
  2415  001238  0012               	return	
  2416  00123A                     l1943:
  2417  00123A  2A04               	incf	___ftpack@exp,f,c
  2418  00123C  90D8               	bcf	status,0,c
  2419  00123E  3203               	rrcf	___ftpack@arg+2,f,c
  2420  001240  3202               	rrcf	___ftpack@arg+1,f,c
  2421  001242  3201               	rrcf	___ftpack@arg,f,c
  2422  001244                     l1945:
  2423  001244  0E00               	movlw	0
  2424  001246  1401               	andwf	___ftpack@arg,w,c
  2425  001248  6E06               	movwf	??___ftpack& (0+255),c
  2426  00124A  0E00               	movlw	0
  2427  00124C  1402               	andwf	___ftpack@arg+1,w,c
  2428  00124E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2429  001250  0EFE               	movlw	254
  2430  001252  1403               	andwf	___ftpack@arg+2,w,c
  2431  001254  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2432  001256  5006               	movf	??___ftpack,w,c
  2433  001258  1007               	iorwf	??___ftpack+1,w,c
  2434  00125A  1008               	iorwf	??___ftpack+2,w,c
  2435  00125C  B4D8               	btfsc	status,2,c
  2436  00125E  D00C               	goto	l1951
  2437  001260  D7EC               	goto	l1943
  2438  001262                     l1947:
  2439  001262  2A04               	incf	___ftpack@exp,f,c
  2440  001264  0E01               	movlw	1
  2441  001266  2601               	addwf	___ftpack@arg,f,c
  2442  001268  0E00               	movlw	0
  2443  00126A  2202               	addwfc	___ftpack@arg+1,f,c
  2444  00126C  0E00               	movlw	0
  2445  00126E  2203               	addwfc	___ftpack@arg+2,f,c
  2446  001270  90D8               	bcf	status,0,c
  2447  001272  3203               	rrcf	___ftpack@arg+2,f,c
  2448  001274  3202               	rrcf	___ftpack@arg+1,f,c
  2449  001276  3201               	rrcf	___ftpack@arg,f,c
  2450  001278                     l1951:
  2451  001278  0E00               	movlw	0
  2452  00127A  1401               	andwf	___ftpack@arg,w,c
  2453  00127C  6E06               	movwf	??___ftpack& (0+255),c
  2454  00127E  0E00               	movlw	0
  2455  001280  1402               	andwf	___ftpack@arg+1,w,c
  2456  001282  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2457  001284  0EFF               	movlw	255
  2458  001286  1403               	andwf	___ftpack@arg+2,w,c
  2459  001288  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2460  00128A  5006               	movf	??___ftpack,w,c
  2461  00128C  1007               	iorwf	??___ftpack+1,w,c
  2462  00128E  1008               	iorwf	??___ftpack+2,w,c
  2463  001290  B4D8               	btfsc	status,2,c
  2464  001292  D006               	goto	l1955
  2465  001294  D7E6               	goto	l1947
  2466  001296                     l1953:
  2467  001296  0604               	decf	___ftpack@exp,f,c
  2468  001298  90D8               	bcf	status,0,c
  2469  00129A  3601               	rlcf	___ftpack@arg,f,c
  2470  00129C  3602               	rlcf	___ftpack@arg+1,f,c
  2471  00129E  3603               	rlcf	___ftpack@arg+2,f,c
  2472  0012A0                     l1955:
  2473  0012A0  AE02               	btfss	___ftpack@arg+1,7,c
  2474  0012A2  D7F9               	goto	l1953
  2475  0012A4  A004               	btfss	___ftpack@exp,0,c
  2476  0012A6  9E02               	bcf	___ftpack@arg+1,7,c
  2477  0012A8  90D8               	bcf	status,0,c
  2478  0012AA  3204               	rrcf	___ftpack@exp,f,c
  2479  0012AC  5004               	movf	___ftpack@exp,w,c
  2480  0012AE  1203               	iorwf	___ftpack@arg+2,f,c
  2481  0012B0  5005               	movf	___ftpack@sign,w,c
  2482  0012B2  A4D8               	btfss	status,2,c
  2483  0012B4  8E03               	bsf	___ftpack@arg+2,7,c
  2484  0012B6  C001  F001         	movff	___ftpack@arg,?___ftpack
  2485  0012BA  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2486  0012BE  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2487  0012C2  0012               	return	
  2488  0012C4                     __end_of___ftpack:
  2489                           	opt stack 0
  2490                           tblptru	equ	0xFF8
  2491                           tblptrh	equ	0xFF7
  2492                           tblptrl	equ	0xFF6
  2493                           tablat	equ	0xFF5
  2494                           prodh	equ	0xFF4
  2495                           prodl	equ	0xFF3
  2496                           postinc2	equ	0xFDE
  2497                           postdec2	equ	0xFDD
  2498                           fsr2h	equ	0xFDA
  2499                           fsr2l	equ	0xFD9
  2500                           status	equ	0xFD8
  2501                           
  2502 ;; *************** function _configure_pwm *****************
  2503 ;; Defined at:
  2504 ;;		line 35 in file "ntc_test.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;		None               void
  2511 ;; Registers used:
  2512 ;;		wreg, status,2
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2518 ;;      Params:         0       0       0       0       0       0       0       0       0
  2519 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2521 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2522 ;;Total ram usage:        0 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_main
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text14
  2532  001518                     __ptext14:
  2533                           	opt stack 0
  2534  001518                     _configure_pwm:
  2535                           	opt stack 30
  2536                           
  2537                           ;ntc_test.c: 37: CCP1CON = 0b00001100;
  2538                           
  2539                           ;incstack = 0
  2540  001518  0E0C               	movlw	12
  2541  00151A  6EBD               	movwf	4029,c	;volatile
  2542                           
  2543                           ;ntc_test.c: 40: T2CON = 0b00000111;
  2544  00151C  0E07               	movlw	7
  2545  00151E  6EBA               	movwf	4026,c	;volatile
  2546                           
  2547                           ;ntc_test.c: 41: PR2 = 249;
  2548  001520  0EF9               	movlw	249
  2549  001522  6EBB               	movwf	4027,c	;volatile
  2550                           
  2551                           ;ntc_test.c: 42: CCPR1L = 25;
  2552  001524  0E19               	movlw	25
  2553  001526  6EBE               	movwf	4030,c	;volatile
  2554  001528  0012               	return	
  2555  00152A                     __end_of_configure_pwm:
  2556                           	opt stack 0
  2557                           tblptru	equ	0xFF8
  2558                           tblptrh	equ	0xFF7
  2559                           tblptrl	equ	0xFF6
  2560                           tablat	equ	0xFF5
  2561                           prodh	equ	0xFF4
  2562                           prodl	equ	0xFF3
  2563                           postinc2	equ	0xFDE
  2564                           postdec2	equ	0xFDD
  2565                           fsr2h	equ	0xFDA
  2566                           fsr2l	equ	0xFD9
  2567                           status	equ	0xFD8
  2568                           
  2569 ;; *************** function _configure_adc *****************
  2570 ;; Defined at:
  2571 ;;		line 17 in file "ntc_test.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;		None               void
  2578 ;; Registers used:
  2579 ;;		wreg, status,2
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2585 ;;      Params:         0       0       0       0       0       0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2588 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2589 ;;Total ram usage:        0 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_main
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text15
  2599  0014F8                     __ptext15:
  2600                           	opt stack 0
  2601  0014F8                     _configure_adc:
  2602                           	opt stack 30
  2603                           
  2604                           ;ntc_test.c: 20: TRISAbits.RA0 = 1;
  2605                           
  2606                           ;incstack = 0
  2607  0014F8  8092               	bsf	3986,0,c	;volatile
  2608                           
  2609                           ;ntc_test.c: 22: ANSELAbits.ANSA0 = 1;
  2610  0014FA  010F               	movlb	15	; () banked
  2611  0014FC  010F               	movlb	15	; () banked
  2612  0014FE  815B               	bsf	91,0,b	;volatile
  2613                           
  2614                           ;ntc_test.c: 24: ADCON2bits.ADFM = 1;
  2615  001500  8EC0               	bsf	4032,7,c	;volatile
  2616                           
  2617                           ;ntc_test.c: 25: ADCON2bits.ACQT = 0b111;
  2618  001502  86C0               	bsf	4032,3,c	;volatile
  2619  001504  88C0               	bsf	4032,4,c	;volatile
  2620  001506  8AC0               	bsf	4032,5,c	;volatile
  2621                           
  2622                           ; BSR set to: 15
  2623                           ;ntc_test.c: 26: ADCON2bits.ADCS = 0b101;
  2624  001508  50C0               	movf	4032,w,c	;volatile
  2625  00150A  0BF8               	andlw	-8
  2626  00150C  0905               	iorlw	5
  2627  00150E  6EC0               	movwf	4032,c	;volatile
  2628                           
  2629                           ; BSR set to: 15
  2630                           ;ntc_test.c: 28: ADCON1bits.PVCFG0 = 0;
  2631  001510  94C1               	bcf	4033,2,c	;volatile
  2632                           
  2633                           ; BSR set to: 15
  2634                           ;ntc_test.c: 30: ADCON1bits.NVCFG1 = 0;
  2635  001512  92C1               	bcf	4033,1,c	;volatile
  2636                           
  2637                           ; BSR set to: 15
  2638                           ;ntc_test.c: 32: ADCON0bits.ADON = 1;
  2639  001514  80C2               	bsf	4034,0,c	;volatile
  2640                           
  2641                           ; BSR set to: 15
  2642  001516  0012               	return	
  2643  001518                     __end_of_configure_adc:
  2644                           	opt stack 0
  2645                           tblptru	equ	0xFF8
  2646                           tblptrh	equ	0xFF7
  2647                           tblptrl	equ	0xFF6
  2648                           tablat	equ	0xFF5
  2649                           prodh	equ	0xFF4
  2650                           prodl	equ	0xFF3
  2651                           postinc2	equ	0xFDE
  2652                           postdec2	equ	0xFDD
  2653                           fsr2h	equ	0xFDA
  2654                           fsr2l	equ	0xFD9
  2655                           status	equ	0xFD8
  2656                           
  2657 ;; *************** function ___ftge *****************
  2658 ;; Defined at:
  2659 ;;		line 4 in file "/opt/microchip/xc8/v1.31/sources/common/ftge.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  ff1             3    0[COMRAM] float 
  2662 ;;  ff2             3    3[COMRAM] float 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;		None               void
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2674 ;;      Params:         6       0       0       0       0       0       0       0       0
  2675 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2676 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2677 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2678 ;;Total ram usage:        9 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text16
  2688  001358                     __ptext16:
  2689                           	opt stack 0
  2690  001358                     ___ftge:
  2691                           	opt stack 30
  2692                           
  2693                           ; BSR set to: 15
  2694                           ;incstack = 0
  2695  001358  AE03               	btfss	___ftge@ff1+2,7,c
  2696  00135A  D016               	goto	l1783
  2697  00135C  C001  F007         	movff	___ftge@ff1,??___ftge
  2698  001360  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  2699  001364  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  2700  001368  1E07               	comf	??___ftge,f,c
  2701  00136A  1E08               	comf	??___ftge+1,f,c
  2702  00136C  1E09               	comf	??___ftge+2,f,c
  2703  00136E  2A07               	incf	??___ftge,f,c
  2704  001370  0E00               	movlw	0
  2705  001372  2208               	addwfc	??___ftge+1,f,c
  2706  001374  2209               	addwfc	??___ftge+2,f,c
  2707  001376  0E00               	movlw	0
  2708  001378  2407               	addwf	??___ftge,w,c
  2709  00137A  6E01               	movwf	___ftge@ff1,c
  2710  00137C  0E00               	movlw	0
  2711  00137E  2008               	addwfc	??___ftge+1,w,c
  2712  001380  6E02               	movwf	___ftge@ff1+1,c
  2713  001382  0E80               	movlw	128
  2714  001384  2009               	addwfc	??___ftge+2,w,c
  2715  001386  6E03               	movwf	___ftge@ff1+2,c
  2716  001388                     l1783:
  2717  001388  AE06               	btfss	___ftge@ff2+2,7,c
  2718  00138A  D016               	goto	l1787
  2719  00138C  C004  F007         	movff	___ftge@ff2,??___ftge
  2720  001390  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  2721  001394  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  2722  001398  1E07               	comf	??___ftge,f,c
  2723  00139A  1E08               	comf	??___ftge+1,f,c
  2724  00139C  1E09               	comf	??___ftge+2,f,c
  2725  00139E  2A07               	incf	??___ftge,f,c
  2726  0013A0  0E00               	movlw	0
  2727  0013A2  2208               	addwfc	??___ftge+1,f,c
  2728  0013A4  2209               	addwfc	??___ftge+2,f,c
  2729  0013A6  0E00               	movlw	0
  2730  0013A8  2407               	addwf	??___ftge,w,c
  2731  0013AA  6E04               	movwf	___ftge@ff2,c
  2732  0013AC  0E00               	movlw	0
  2733  0013AE  2008               	addwfc	??___ftge+1,w,c
  2734  0013B0  6E05               	movwf	___ftge@ff2+1,c
  2735  0013B2  0E80               	movlw	128
  2736  0013B4  2009               	addwfc	??___ftge+2,w,c
  2737  0013B6  6E06               	movwf	___ftge@ff2+2,c
  2738  0013B8                     l1787:
  2739  0013B8  0E00               	movlw	0
  2740  0013BA  1A01               	xorwf	___ftge@ff1,f,c
  2741  0013BC  0E00               	movlw	0
  2742  0013BE  1A02               	xorwf	___ftge@ff1+1,f,c
  2743  0013C0  0E80               	movlw	128
  2744  0013C2  1A03               	xorwf	___ftge@ff1+2,f,c
  2745  0013C4  0E00               	movlw	0
  2746  0013C6  1A04               	xorwf	___ftge@ff2,f,c
  2747  0013C8  0E00               	movlw	0
  2748  0013CA  1A05               	xorwf	___ftge@ff2+1,f,c
  2749  0013CC  0E80               	movlw	128
  2750  0013CE  1A06               	xorwf	___ftge@ff2+2,f,c
  2751  0013D0  5004               	movf	___ftge@ff2,w,c
  2752  0013D2  5C01               	subwf	___ftge@ff1,w,c
  2753  0013D4  5005               	movf	___ftge@ff2+1,w,c
  2754  0013D6  5802               	subwfb	___ftge@ff1+1,w,c
  2755  0013D8  5006               	movf	___ftge@ff2+2,w,c
  2756  0013DA  5803               	subwfb	___ftge@ff1+2,w,c
  2757  0013DC  B0D8               	btfsc	status,0,c
  2758  0013DE  D002               	goto	l1793
  2759  0013E0  90D8               	bcf	status,0,c
  2760  0013E2  0012               	return	
  2761  0013E4                     l1793:
  2762  0013E4  80D8               	bsf	status,0,c
  2763  0013E6  0012               	return	
  2764  0013E8                     __end_of___ftge:
  2765                           	opt stack 0
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           prodh	equ	0xFF4
  2771                           prodl	equ	0xFF3
  2772                           postinc2	equ	0xFDE
  2773                           postdec2	equ	0xFDD
  2774                           fsr2h	equ	0xFDA
  2775                           fsr2l	equ	0xFD9
  2776                           status	equ	0xFD8
  2777                           tblptru	equ	0xFF8
  2778                           tblptrh	equ	0xFF7
  2779                           tblptrl	equ	0xFF6
  2780                           tablat	equ	0xFF5
  2781                           prodh	equ	0xFF4
  2782                           prodl	equ	0xFF3
  2783                           postinc2	equ	0xFDE
  2784                           postdec2	equ	0xFDD
  2785                           fsr2h	equ	0xFDA
  2786                           fsr2l	equ	0xFD9
  2787                           status	equ	0xFD8
  2788                           
  2789                           	psect	rparam
  2790  0000                     tblptru	equ	0xFF8
  2791                           tblptrh	equ	0xFF7
  2792                           tblptrl	equ	0xFF6
  2793                           tablat	equ	0xFF5
  2794                           prodh	equ	0xFF4
  2795                           prodl	equ	0xFF3
  2796                           postinc2	equ	0xFDE
  2797                           postdec2	equ	0xFDD
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    30
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     81      83
    BANK0           160     24      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMRAM

    _main->_temperature_get
    _temperature_get->_log
    _log->_eval_poly
    _eval_poly->___ftmul
    ___ftmul->___ftdiv
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___ftneg->___lwtoft
    ___ftdiv->___ftadd

Critical Paths under _main in BANK0

    _main->_temperature_get

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34311
                                             78 COMRAM     3     3      0
                             ___ftge
                      _configure_adc
                      _configure_pwm
                    _temperature_get
 ---------------------------------------------------------------------------------
 (1) _temperature_get                                     27    24      3   32427
                                             75 COMRAM     3     0      3
                                              0 BANK0     24    24      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lwtoft
                             ___wmul
                        _adc_convert
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  5     2      3   18527
                                             70 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul
                           ___lwtoft (ARG)
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                8     3      5     352
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           12     5      7    8283
                                             58 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     543
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    3385
                                             43 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                        _adc_convert (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    3985
                                             16 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             5     2      3    2242
                                              8 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _adc_convert                                          4     2      2      86
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             5     2      3    2493
                                              8 COMRAM     5     2      3
                           ___ftpack
                             ___wmul (ARG)
                        _adc_convert (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     173
                                             13 COMRAM     3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2853
                                             28 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2087
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _configure_pwm                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configure_adc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1574
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftge
   _configure_adc
   _configure_pwm
   _temperature_get
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       ___wmul (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       _adc_convert (ARG)
       _frexp (ARG)
     ___ftneg
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
     ___lwtoft
       ___ftpack
       ___wmul (ARG)
       _adc_convert (ARG)
     ___wmul
     _adc_convert
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         _adc_convert (ARG)
         _frexp (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       _eval_poly (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                   _adc_convert (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           _adc_convert (ARG)
           _frexp (ARG)
         ___wmul
       _frexp (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      18       5       15.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     51      53       1       87.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6B       6        0.0%
DATA                 0      0      6B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Sun Jun  1 05:38:31 2014

                      l31 148A            ?_configure_adc 0001       ___wmul@multiplicand 0003  
          ?_configure_pwm 0001              ___ftadd@exp1 001C              ___ftadd@exp2 001B  
            ___ftadd@sign 001A                       l409 0DA8                       l418 0DC4  
                     l451 14EA                       l428 10F2                       l429 1118  
                     l394 0CCC      __size_of_adc_convert 0030                       l398 0CF8  
                     _PR2 000FBB                       u721 0C96                       u731 0CAA  
                     u931 0F7C                       u951 0FA2                       _log 0E3E  
            ___ftdiv@cntr 0026              ___ftdiv@sign 002B                      l2011 0D76  
                    l2101 1414                      l2005 0D5C                      l2007 0D66  
                    l2025 0DE0                      l2017 0D98                      l2009 0D6E  
                    l2113 12EE                      l2035 0E18                      l2019 0DA2  
                    l2051 0FB8                      l2045 0F92                      l2127 118A  
                    l2151 0E8C                      l2065 0FEE                      l2129 1206  
                    l2145 0E6A                      l2075 101A                      l2173 10B0  
                    l2069 0FFE                      l2253 0B2C                      l2167 108A  
                    l2079 102A                      l2271 0BF8                      l2247 0AE8  
                    l2239 0A8C                      l2265 0BB4                      l2283 0C80  
                    l2259 0B70                      l2277 0C3C                      l1783 1388  
                    l1951 1278                      l1943 123A                      l1793 13E4  
                    l1953 1296                      l1945 1244                      l1787 13B8  
                    l1955 12A0                      l1947 1262                      l1939 122C  
                    l1983 0D06                      l1977 0CDA                      l1999 0D3A  
                    ?_log 0047                      u1010 1318                      u1018 131A  
                    u1061 1074                      u1045 0E50                      u1081 109A  
       ??_temperature_get 004F                      _main 0A76              ___ftpack@arg 0001  
            ___ftpack@exp 0004                      fsr2h 000FDA                      fsr2l 000FD9  
                    log@x 0047                      prodh 000FF4                      prodl 000FF3  
                    start 0000             __CFG_MCLRE$ON 000000              ___ftmul@cntr 0039  
            ___ftmul@sign 003A                     ??_log 004A                     ?_main 0001  
         __end_of___ftadd 0E3E           __end_of___ftdiv 114A           __end_of___ftneg 14F8  
         __end_of___ftmul 1064                     _T2CON 000FBA             ___awtoft@sign 000D  
                   _frexp 12C4                     _errno 0052             ___ftpack@sign 0005  
                   tablat 000FF5                     status 000FD8           __initialization 152A  
             log@exponent 004A              __end_of_main 0C86           ??_configure_adc 0001  
         ??_configure_pwm 0001                    ??_main 004F             __activetblptr 000002  
                  ?_frexp 0001                    _ADRESH 000FC4                    _ADRESL 000FC3  
                  _CCPR1L 000FBE          __end_of___awtoft 143C          __end_of___ftpack 12C4  
          __CFG_WDTEN$OFF 000000          __end_of___lwtoft 14D2                    ___ftge 1358  
                  ___wmul 143C                 ??___ftadd 0017                 ??___ftdiv 0023  
               ??___ftneg 0011                 ??___ftmul 0032     ___ftmul@f3_as_product 0036  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8          __end_oflog@coeff 081F                __accesstop 0060  
 __end_of__initialization 152E           __CFG_PBADEN$OFF 000000                ___ftadd@f1 0011  
              ___ftadd@f2 0014                ___ftge@ff1 0001                ___ftge@ff2 0004  
            eval_poly@res 0044                ___ftdiv@f1 001D                ___ftdiv@f2 0020  
              ___ftdiv@f3 0027                ___ftneg@f1 000E                ___awtoft@c 0009  
              ___ftmul@f1 002C                ___ftmul@f2 002F            __pcstackCOMRAM 0001  
           __end_of_frexp 1358                ___lwtoft@c 0009           _temperature_get 0820  
                 ??_frexp 0006        __size_of_eval_poly 00D2                   ?___ftge 0001  
                 ?___wmul 0001            _ADC_RESOLUTION 0801             ??_adc_convert 0003  
                 _CCP1CON 000FBD                 ?___awtoft 0009                 ?___ftpack 0001  
      temperature_get@Bth 0073        temperature_get@Rth 0063                 ?___lwtoft 0009  
                 __Hparam 0000                   __Lparam 0000    __end_of_ADC_RESOLUTION 0804  
         __size_of___ftge 0090                   ___ftadd 0C86                   ___ftdiv 1064  
                 ___ftneg 14D2           __size_of___wmul 003A                   ___ftmul 0F6C  
            __psmallconst 0800   __end_of_temperature_get 0A76                   __pcinit 152A  
              ??___awtoft 000C                ??___ftpack 0006         __end_of_eval_poly 121C  
                 __ramtop 0800                   __ptext0 0A76                   __ptext1 0820  
                 __ptext2 0E3E                   __ptext3 12C4                   __ptext4 114A  
                 __ptext5 143C                   __ptext6 0F6C                   __ptext7 0C86  
                 __ptext8 13E8                   __ptext9 1476                ??___lwtoft 000C  
            __size_of_log 012E       __end_of_adc_convert 14A6      end_of_initialization 152E  
           __Lmediumconst 0000                   postdec2 000FDD                   postinc2 000FDE  
   __end_of_configure_adc 1518     __end_of_configure_pwm 152A                 _TRISAbits 000F92  
               _TRISCbits 000F94               ___ftdiv@exp 002A               ___ftmul@exp 0035  
      adc_convert@channel 0001            __end_of___ftge 13E8            __end_of___wmul 1476  
        ?_temperature_get 004C               _adc_convert 1476       start_initialization 152A  
              eval_poly@d 003E                eval_poly@n 0040                eval_poly@x 003B  
             __end_of_log 0F6C                frexp@value 0001                  ??___ftge 0007  
                ??___wmul 0005         __size_of___awtoft 0054         __size_of___ftpack 00A8  
             __pbssCOMRAM 0052         __size_of___lwtoft 002C             __pcstackBANK0 0060  
                ?___ftadd 0011                  ?___ftdiv 001D                  ?___ftneg 000E  
       temperature_get@R1 006C         temperature_get@R2 0071                  ?___ftmul 002C  
       temperature_get@Tn 006E               __smallconst 0800                 _eval_poly 114A  
     _temperature_get$890 0069       _temperature_get$889 0066       temperature_get@Vout 0060  
          __size_of_frexp 0094       temperature_get@temp 0075            ___wmul@product 0005  
              _ADCON0bits 000FC2                _ADCON1bits 000FC1                _ADCON2bits 000FC0  
       ___wmul@multiplier 0001                ?_eval_poly 003B                 frexp@eptr 0004  
                __Hrparam 0000                  __Lrparam 0000          __size_of___ftadd 01B8  
        __size_of___ftdiv 00E6              ?_adc_convert 0001          __size_of___ftneg 0026  
        __size_of___ftmul 00F8                  ___awtoft 13E8                  ___ftpack 121C  
              _ANSELAbits 000F5B                  ___lwtoft 14A6     temperature_get@sensor 004C  
                __ptext10 14A6                  __ptext11 14D2                  __ptext12 1064  
                __ptext13 121C                  __ptext14 1518                  __ptext15 14F8  
                __ptext16 1358    __size_of_configure_adc 0020    __size_of_configure_pwm 0012  
           __size_of_main 0210                  main@temp 004F                  log@coeff 0804  
             ??_eval_poly 0042  __size_of_temperature_get 0256      __CFG_CPUDIV$NOCLKDIV 000000  
           _configure_adc 14F8             _configure_pwm 1518        __CFG_FOSC$INTOSCIO 000000  
