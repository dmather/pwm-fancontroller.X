

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Sun Nov 13 00:17:24 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	smallconst
    33  000800                     __psmallconst:
    34                           	opt stack 0
    35  000800  00                 	db	0
    36  000801                     _ADC_RESOLUTION:
    37                           	opt stack 0
    38  000801  00                 	db	0
    39  000802  A0                 	db	160
    40  000803  3B                 	db	59
    41  000804                     __end_of_ADC_RESOLUTION:
    42                           	opt stack 0
    43  000804                     _MAX_TEMP:
    44                           	opt stack 0
    45  000804  00                 	db	0
    46  000805  20                 	db	32
    47  000806  42                 	db	66
    48  000807                     __end_of_MAX_TEMP:
    49                           	opt stack 0
    50  000807                     _MIN_TEMP:
    51                           	opt stack 0
    52  000807  00                 	db	0
    53  000808  90                 	db	144
    54  000809  41                 	db	65
    55  00080A                     __end_of_MIN_TEMP:
    56                           	opt stack 0
    57  00080A                     _MAX_DUTY_CYCLE:
    58                           	opt stack 0
    59  00080A  00FF               	dw	255
    60  00080C                     __end_of_MAX_DUTY_CYCLE:
    61                           	opt stack 0
    62  00080C                     _MIN_DUTY_CYCLE:
    63                           	opt stack 0
    64  00080C  0028               	dw	40
    65  00080E                     __end_of_MIN_DUTY_CYCLE:
    66                           	opt stack 0
    67  00080E                     log@coeff:
    68                           	opt stack 0
    69  00080E  00                 	db	0
    70  00080F  00                 	db	0
    71  000810  00                 	db	0
    72  000811  00                 	db	0
    73  000812  80                 	db	128
    74  000813  3F                 	db	63
    75  000814  F0                 	db	240
    76  000815  FF                 	db	255
    77  000816  BE                 	db	190
    78  000817  E2                 	db	226
    79  000818  A9                 	db	169
    80  000819  3E                 	db	62
    81  00081A  83                 	db	131
    82  00081B  76                 	db	118
    83  00081C  BE                 	db	190
    84  00081D  AE                 	db	174
    85  00081E  2B                 	db	43
    86  00081F  3E                 	db	62
    87  000820  3C                 	db	60
    88  000821  C3                 	db	195
    89  000822  BD                 	db	189
    90  000823  D2                 	db	210
    91  000824  13                 	db	19
    92  000825  3D                 	db	61
    93  000826  78                 	db	120
    94  000827  D3                 	db	211
    95  000828  BB                 	db	187
    96  000829                     __end_oflog@coeff:
    97                           	opt stack 0
    98  0000                     _ADCON0bits	set	4034
    99  0000                     _ADCON1bits	set	4033
   100  0000                     _ADCON2bits	set	4032
   101  0000                     _ADRESH	set	4036
   102  0000                     _ADRESL	set	4035
   103  0000                     _ANSELAbits	set	3931
   104  0000                     _CCP1CON	set	4029
   105  0000                     _CCP1CONbits	set	4029
   106  0000                     _CCPR1L	set	4030
   107  0000                     _ECCP1AS	set	4022
   108  0000                     _PIR1bits	set	3998
   109  0000                     _PR2	set	4027
   110  0000                     _PSTR1CON	set	4025
   111  0000                     _SSP1BUF	set	4041
   112  0000                     _T2CON	set	4026
   113  0000                     _TRISAbits	set	3986
   114  0000                     _TRISCbits	set	3988
   115                           
   116                           ; #config settings
   117  000829  00                 	db	0	; dummy byte at the end
   118  0000                     
   119                           	psect	cinit
   120  00156C                     __pcinit:
   121                           	opt stack 0
   122  00156C                     start_initialization:
   123                           	opt stack 0
   124  00156C                     __initialization:
   125                           	opt stack 0
   126                           
   127                           ; Clear objects allocated to COMRAM (2 bytes)
   128  00156C  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   129  00156E  6A59               	clrf	__pbssCOMRAM& (0+255),c
   130  001570                     end_of_initialization:
   131                           	opt stack 0
   132  001570                     __end_of__initialization:
   133                           	opt stack 0
   134  001570  0E00               	movlw	low (__Lmediumconst shr (0+16))
   135  001572  6EF8               	movwf	tblptru,c
   136  001574  0100               	movlb	0
   137  001576  EF19  F00A         	goto	_main	;jump to C main() function
   138                           tblptru	equ	0xFF8
   139                           
   140                           	psect	bssCOMRAM
   141  000059                     __pbssCOMRAM:
   142                           	opt stack 0
   143  000059                     _errno:
   144                           	opt stack 0
   145  000059                     	ds	2
   146                           tblptru	equ	0xFF8
   147                           
   148                           	psect	cstackBANK0
   149  000060                     __pcstackBANK0:
   150                           	opt stack 0
   151  000060                     get_temperature@Vout:
   152                           	opt stack 0
   153                           
   154                           ; 3 bytes @ 0x0
   155  000060                     	ds	3
   156  000063                     get_temperature@Rth:
   157                           	opt stack 0
   158                           
   159                           ; 3 bytes @ 0x3
   160  000063                     	ds	3
   161  000066                     _get_temperature$997:
   162                           	opt stack 0
   163                           
   164                           ; 3 bytes @ 0x6
   165  000066                     	ds	3
   166  000069                     _get_temperature$998:
   167                           	opt stack 0
   168                           
   169                           ; 3 bytes @ 0x9
   170  000069                     	ds	3
   171  00006C                     get_temperature@R1:
   172                           	opt stack 0
   173                           
   174                           ; 2 bytes @ 0xC
   175  00006C                     	ds	2
   176  00006E                     get_temperature@Tn:
   177                           	opt stack 0
   178                           
   179                           ; 3 bytes @ 0xE
   180  00006E                     	ds	3
   181  000071                     get_temperature@R2:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x11
   185  000071                     	ds	2
   186  000073                     get_temperature@Bth:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x13
   190  000073                     	ds	2
   191  000075                     get_temperature@temp:
   192                           	opt stack 0
   193                           
   194                           ; 3 bytes @ 0x15
   195  000075                     	ds	3
   196                           tblptru	equ	0xFF8
   197                           
   198                           	psect	cstackCOMRAM
   199  000001                     __pcstackCOMRAM:
   200                           	opt stack 0
   201  000001                     ?_adc_convert:
   202                           	opt stack 0
   203  000001                     ?___wmul:
   204                           	opt stack 0
   205  000001                     ?___ftpack:
   206                           	opt stack 0
   207  000001                     ?_frexp:
   208                           	opt stack 0
   209  000001                     adc_convert@channel:
   210                           	opt stack 0
   211  000001                     ___wmul@multiplier:
   212                           	opt stack 0
   213  000001                     ___ftpack@arg:
   214                           	opt stack 0
   215  000001                     ___ftge@ff1:
   216                           	opt stack 0
   217  000001                     frexp@value:
   218                           	opt stack 0
   219                           
   220                           ; 3 bytes @ 0x0
   221  000001                     	ds	2
   222  000003                     ??_adc_convert:
   223  000003                     ___wmul@multiplicand:
   224                           	opt stack 0
   225                           
   226                           ; 2 bytes @ 0x2
   227  000003                     	ds	1
   228  000004                     ___ftpack@exp:
   229                           	opt stack 0
   230  000004                     frexp@eptr:
   231                           	opt stack 0
   232  000004                     ___ftge@ff2:
   233                           	opt stack 0
   234                           
   235                           ; 3 bytes @ 0x3
   236  000004                     	ds	1
   237  000005                     ___ftpack@sign:
   238                           	opt stack 0
   239  000005                     ___wmul@product:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x4
   243  000005                     	ds	1
   244  000006                     ??___ftpack:
   245  000006                     ??_frexp:
   246                           
   247                           ; 0 bytes @ 0x5
   248  000006                     	ds	1
   249  000007                     ??___ftge:
   250                           
   251                           ; 0 bytes @ 0x6
   252  000007                     	ds	2
   253  000009                     ?___awtoft:
   254                           	opt stack 0
   255  000009                     ?___lwtoft:
   256                           	opt stack 0
   257  000009                     ___awtoft@c:
   258                           	opt stack 0
   259  000009                     ___lwtoft@c:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x8
   263  000009                     	ds	3
   264  00000C                     ??___awtoft:
   265  00000C                     ??___lwtoft:
   266                           
   267                           ; 0 bytes @ 0xB
   268  00000C                     	ds	1
   269  00000D                     ___awtoft@sign:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0xC
   273  00000D                     	ds	1
   274  00000E                     ?___ftneg:
   275                           	opt stack 0
   276  00000E                     ___ftneg@f1:
   277                           	opt stack 0
   278                           
   279                           ; 3 bytes @ 0xD
   280  00000E                     	ds	3
   281  000011                     ?___ftadd:
   282                           	opt stack 0
   283  000011                     ___ftadd@f1:
   284                           	opt stack 0
   285                           
   286                           ; 3 bytes @ 0x10
   287  000011                     	ds	3
   288  000014                     ___ftadd@f2:
   289                           	opt stack 0
   290                           
   291                           ; 3 bytes @ 0x13
   292  000014                     	ds	3
   293  000017                     ??___ftadd:
   294                           
   295                           ; 0 bytes @ 0x16
   296  000017                     	ds	3
   297  00001A                     ___ftadd@sign:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x19
   301  00001A                     	ds	1
   302  00001B                     ___ftadd@exp2:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x1A
   306  00001B                     	ds	1
   307  00001C                     ___ftadd@exp1:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x1B
   311  00001C                     	ds	1
   312  00001D                     ?___ftdiv:
   313                           	opt stack 0
   314  00001D                     ___ftdiv@f1:
   315                           	opt stack 0
   316                           
   317                           ; 3 bytes @ 0x1C
   318  00001D                     	ds	3
   319  000020                     ___ftdiv@f2:
   320                           	opt stack 0
   321                           
   322                           ; 3 bytes @ 0x1F
   323  000020                     	ds	3
   324  000023                     ??___ftdiv:
   325                           
   326                           ; 0 bytes @ 0x22
   327  000023                     	ds	3
   328  000026                     ___ftdiv@cntr:
   329                           	opt stack 0
   330                           
   331                           ; 1 bytes @ 0x25
   332  000026                     	ds	1
   333  000027                     ___ftdiv@f3:
   334                           	opt stack 0
   335                           
   336                           ; 3 bytes @ 0x26
   337  000027                     	ds	3
   338  00002A                     ___ftdiv@exp:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0x29
   342  00002A                     	ds	1
   343  00002B                     ___ftdiv@sign:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x2A
   347  00002B                     	ds	1
   348  00002C                     ?___ftmul:
   349                           	opt stack 0
   350  00002C                     ___ftmul@f1:
   351                           	opt stack 0
   352                           
   353                           ; 3 bytes @ 0x2B
   354  00002C                     	ds	3
   355  00002F                     ___ftmul@f2:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0x2E
   359  00002F                     	ds	3
   360  000032                     ??___ftmul:
   361                           
   362                           ; 0 bytes @ 0x31
   363  000032                     	ds	3
   364  000035                     ___ftmul@exp:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x34
   368  000035                     	ds	1
   369  000036                     ___ftmul@f3_as_product:
   370                           	opt stack 0
   371                           
   372                           ; 3 bytes @ 0x35
   373  000036                     	ds	3
   374  000039                     ___ftmul@cntr:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x38
   378  000039                     	ds	1
   379  00003A                     ___ftmul@sign:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x39
   383  00003A                     	ds	1
   384  00003B                     ?_eval_poly:
   385                           	opt stack 0
   386  00003B                     ?___fttol:
   387                           	opt stack 0
   388  00003B                     ___fttol@f1:
   389                           	opt stack 0
   390  00003B                     eval_poly@x:
   391                           	opt stack 0
   392                           
   393                           ; 3 bytes @ 0x3A
   394  00003B                     	ds	3
   395  00003E                     eval_poly@d:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x3D
   399  00003E                     	ds	1
   400  00003F                     ??___fttol:
   401                           
   402                           ; 0 bytes @ 0x3E
   403  00003F                     	ds	1
   404  000040                     eval_poly@n:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x3F
   408  000040                     	ds	2
   409  000042                     ??_eval_poly:
   410                           
   411                           ; 0 bytes @ 0x41
   412  000042                     	ds	2
   413  000044                     ___fttol@sign1:
   414                           	opt stack 0
   415  000044                     eval_poly@res:
   416                           	opt stack 0
   417                           
   418                           ; 3 bytes @ 0x43
   419  000044                     	ds	1
   420  000045                     ___fttol@lval:
   421                           	opt stack 0
   422                           
   423                           ; 4 bytes @ 0x44
   424  000045                     	ds	2
   425  000047                     ?_log:
   426                           	opt stack 0
   427  000047                     log@x:
   428                           	opt stack 0
   429                           
   430                           ; 3 bytes @ 0x46
   431  000047                     	ds	2
   432  000049                     ___fttol@exp1:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x48
   436  000049                     	ds	1
   437  00004A                     log@exponent:
   438                           	opt stack 0
   439  00004A                     set_fan_speed@temp:
   440                           	opt stack 0
   441                           
   442                           ; 3 bytes @ 0x49
   443  00004A                     	ds	2
   444  00004C                     ?_get_temperature:
   445                           	opt stack 0
   446  00004C                     get_temperature@sensor:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x4B
   450  00004C                     	ds	1
   451  00004D                     ??_set_fan_speed:
   452                           
   453                           ; 0 bytes @ 0x4C
   454  00004D                     	ds	2
   455  00004F                     
   456                           ; 0 bytes @ 0x4E
   457  00004F                     	ds	2
   458  000051                     set_fan_speed@new_duty_cycle:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x50
   462  000051                     	ds	2
   463  000053                     set_fan_speed@tTemp:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0x52
   467  000053                     	ds	3
   468  000056                     main@temp:
   469                           	opt stack 0
   470                           
   471                           ; 3 bytes @ 0x55
   472  000056                     	ds	3
   473                           tblptru	equ	0xFF8
   474                           
   475 ;;
   476 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   477 ;;
   478 ;; *************** function _main *****************
   479 ;; Defined at:
   480 ;;		line 125 in file "ntc_test.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;  temp            3   85[COMRAM] float 
   485 ;;  data_in         1    0        unsigned char 
   486 ;;  data_out        1    0        unsigned char 
   487 ;; Return value:  Size  Location     Type
   488 ;;		None               void
   489 ;; Registers used:
   490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   496 ;;      Params:         0       0       0       0       0       0       0       0       0
   497 ;;      Locals:         3       0       0       0       0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0       0       0       0       0
   499 ;;      Totals:         3       0       0       0       0       0       0       0       0
   500 ;;Total ram usage:        3 bytes
   501 ;; Hardware stack levels required when called:    5
   502 ;; This function calls:
   503 ;;		_configure_adc
   504 ;;		_configure_pwm
   505 ;;		_get_temperature
   506 ;;		_set_fan_speed
   507 ;; This function is called by:
   508 ;;		Startup code after reset
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text0
   513  001432                     __ptext0:
   514                           	opt stack 0
   515  001432                     _main:
   516                           	opt stack 25
   517                           
   518                           ;ntc_test.c: 127: float temp = 0;
   519                           
   520                           ; BSR set to: 15
   521                           ;incstack = 0
   522  001432  0E00               	movlw	0
   523  001434  6E56               	movwf	main@temp,c
   524  001436  0E00               	movlw	0
   525  001438  6E57               	movwf	main@temp+1,c
   526  00143A  0E00               	movlw	0
   527  00143C  6E58               	movwf	main@temp+2,c
   528                           
   529                           ;ntc_test.c: 128: unsigned char data_out;
   530                           ;ntc_test.c: 129: unsigned char data_in;
   531                           ;ntc_test.c: 133: TRISCbits.RC2 = 0;
   532  00143E  9494               	bcf	3988,2,c	;volatile
   533                           
   534                           ;ntc_test.c: 135: configure_adc();
   535  001440  EC97  F00A         	call	_configure_adc	;wreg free
   536                           
   537                           ;ntc_test.c: 136: configure_pwm();
   538  001444  ECA7  F00A         	call	_configure_pwm	;wreg free
   539  001448                     l2138:
   540                           
   541                           ;ntc_test.c: 152: {
   542                           ;ntc_test.c: 154: temp = get_temperature(0);
   543  001448  0E00               	movlw	0
   544  00144A  6E4D               	movwf	get_temperature@sensor+1,c
   545  00144C  0E00               	movlw	0
   546  00144E  6E4C               	movwf	get_temperature@sensor,c
   547  001450  EC15  F004         	call	_get_temperature	;wreg free
   548  001454  C04C  F056         	movff	?_get_temperature,main@temp
   549  001458  C04D  F057         	movff	?_get_temperature+1,main@temp+1
   550  00145C  C04E  F058         	movff	?_get_temperature+2,main@temp+2
   551                           
   552                           ;ntc_test.c: 155: set_fan_speed(temp);
   553  001460  C056  F04A         	movff	main@temp,set_fan_speed@temp
   554  001464  C057  F04B         	movff	main@temp+1,set_fan_speed@temp+1
   555  001468  C058  F04C         	movff	main@temp+2,set_fan_speed@temp+2
   556  00146C  ECB3  F006         	call	_set_fan_speed	;wreg free
   557  001470  D7EB               	goto	l2138
   558  001472                     __end_of_main:
   559                           	opt stack 0
   560                           tblptru	equ	0xFF8
   561                           
   562 ;; *************** function _set_fan_speed *****************
   563 ;; Defined at:
   564 ;;		line 104 in file "ntc_test.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  temp            3   73[COMRAM] float 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  new_duty_cyc    2   80[COMRAM] int 
   569 ;;  tTemp           3   82[COMRAM] float 
   570 ;; Return value:  Size  Location     Type
   571 ;;		None               void
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   579 ;;      Params:         3       0       0       0       0       0       0       0       0
   580 ;;      Locals:         5       0       0       0       0       0       0       0       0
   581 ;;      Temps:          4       0       0       0       0       0       0       0       0
   582 ;;      Totals:        12       0       0       0       0       0       0       0       0
   583 ;;Total ram usage:       12 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    2
   586 ;; This function calls:
   587 ;;		___awtoft
   588 ;;		___ftdiv
   589 ;;		___ftge
   590 ;;		___ftmul
   591 ;;		___fttol
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text1
   598  000D66                     __ptext1:
   599                           	opt stack 0
   600  000D66                     _set_fan_speed:
   601                           	opt stack 27
   602                           
   603                           ;ntc_test.c: 106: if(temp < MIN_TEMP)
   604                           
   605                           ;incstack = 0
   606  000D66  C04A  F001         	movff	set_fan_speed@temp,___ftge@ff1
   607  000D6A  C04B  F002         	movff	set_fan_speed@temp+1,___ftge@ff1+1
   608  000D6E  C04C  F003         	movff	set_fan_speed@temp+2,___ftge@ff1+2
   609  000D72  0E07               	movlw	low _MIN_TEMP
   610  000D74  6EF6               	movwf	tblptrl,c
   611  000D76  0E08               	movlw	high _MIN_TEMP
   612  000D78  6EF7               	movwf	tblptrh,c
   613  000D7A  0009               	tblrd		*+
   614  000D7C  CFF5 F004          	movff	tablat,___ftge@ff2
   615  000D80  0009               	tblrd		*+
   616  000D82  CFF5 F005          	movff	tablat,___ftge@ff2+1
   617  000D86  000A               	tblrd		*-
   618  000D88  CFF5 F006          	movff	tablat,___ftge@ff2+2
   619  000D8C  ECA7  F009         	call	___ftge	;wreg free
   620  000D90  B0D8               	btfsc	status,0,c
   621  000D92  D008               	goto	l2120
   622                           
   623                           ;ntc_test.c: 107: {
   624                           ;ntc_test.c: 108: CCPR1L = MIN_DUTY_CYCLE;
   625  000D94  0E0C               	movlw	low _MIN_DUTY_CYCLE
   626  000D96  6EF6               	movwf	tblptrl,c
   627  000D98  0E08               	movlw	high _MIN_DUTY_CYCLE
   628  000D9A  6EF7               	movwf	tblptrh,c
   629  000D9C  0008               	tblrd		*
   630  000D9E  CFF5 FFBE          	movff	tablat,4030	;volatile
   631                           
   632                           ;ntc_test.c: 109: }
   633  000DA2  0012               	return	
   634  000DA4                     l2120:
   635                           
   636                           ;ntc_test.c: 110: else
   637                           ;ntc_test.c: 111: {
   638                           ;ntc_test.c: 112: float tTemp = temp / MAX_TEMP;
   639  000DA4  C04A  F01D         	movff	set_fan_speed@temp,___ftdiv@f1
   640  000DA8  C04B  F01E         	movff	set_fan_speed@temp+1,___ftdiv@f1+1
   641  000DAC  C04C  F01F         	movff	set_fan_speed@temp+2,___ftdiv@f1+2
   642  000DB0  0E04               	movlw	low _MAX_TEMP
   643  000DB2  6EF6               	movwf	tblptrl,c
   644  000DB4  0E08               	movlw	high _MAX_TEMP
   645  000DB6  6EF7               	movwf	tblptrh,c
   646  000DB8  0009               	tblrd		*+
   647  000DBA  CFF5 F020          	movff	tablat,___ftdiv@f2
   648  000DBE  0009               	tblrd		*+
   649  000DC0  CFF5 F021          	movff	tablat,___ftdiv@f2+1
   650  000DC4  000A               	tblrd		*-
   651  000DC6  CFF5 F022          	movff	tablat,___ftdiv@f2+2
   652  000DCA  EC2D  F008         	call	___ftdiv	;wreg free
   653  000DCE  C01D  F053         	movff	?___ftdiv,set_fan_speed@tTemp
   654  000DD2  C01E  F054         	movff	?___ftdiv+1,set_fan_speed@tTemp+1
   655  000DD6  C01F  F055         	movff	?___ftdiv+2,set_fan_speed@tTemp+2
   656                           
   657                           ;ntc_test.c: 113: if(tTemp >= 1)
   658  000DDA  C053  F001         	movff	set_fan_speed@tTemp,___ftge@ff1
   659  000DDE  C054  F002         	movff	set_fan_speed@tTemp+1,___ftge@ff1+1
   660  000DE2  C055  F003         	movff	set_fan_speed@tTemp+2,___ftge@ff1+2
   661  000DE6  0E00               	movlw	0
   662  000DE8  6E04               	movwf	___ftge@ff2,c
   663  000DEA  0E80               	movlw	128
   664  000DEC  6E05               	movwf	___ftge@ff2+1,c
   665  000DEE  0E3F               	movlw	63
   666  000DF0  6E06               	movwf	___ftge@ff2+2,c
   667  000DF2  ECA7  F009         	call	___ftge	;wreg free
   668  000DF6  A0D8               	btfss	status,0,c
   669  000DF8  D008               	goto	l2126
   670                           
   671                           ;ntc_test.c: 114: {
   672                           ;ntc_test.c: 115: CCPR1L = MAX_DUTY_CYCLE;
   673  000DFA  0E0A               	movlw	low _MAX_DUTY_CYCLE
   674  000DFC  6EF6               	movwf	tblptrl,c
   675  000DFE  0E08               	movlw	high _MAX_DUTY_CYCLE
   676  000E00  6EF7               	movwf	tblptrh,c
   677  000E02  0008               	tblrd		*
   678  000E04  CFF5 FFBE          	movff	tablat,4030	;volatile
   679                           
   680                           ;ntc_test.c: 116: }
   681  000E08  0012               	return	
   682  000E0A                     l2126:
   683                           
   684                           ;ntc_test.c: 117: else
   685                           ;ntc_test.c: 118: {
   686                           ;ntc_test.c: 119: int new_duty_cycle = (int)MAX_DUTY_CYCLE * tTemp;
   687  000E0A  C053  F02F         	movff	set_fan_speed@tTemp,___ftmul@f2
   688  000E0E  C054  F030         	movff	set_fan_speed@tTemp+1,___ftmul@f2+1
   689  000E12  C055  F031         	movff	set_fan_speed@tTemp+2,___ftmul@f2+2
   690  000E16  0E0A               	movlw	low _MAX_DUTY_CYCLE
   691  000E18  6EF6               	movwf	tblptrl,c
   692  000E1A  0E08               	movlw	high _MAX_DUTY_CYCLE
   693  000E1C  6EF7               	movwf	tblptrh,c
   694  000E1E  0009               	tblrd		*+
   695  000E20  CFF5 F009          	movff	tablat,___awtoft@c
   696  000E24  000A               	tblrd		*-
   697  000E26  CFF5 F00A          	movff	tablat,___awtoft@c+1
   698  000E2A  ECEF  F009         	call	___awtoft	;wreg free
   699  000E2E  C009  F02C         	movff	?___awtoft,___ftmul@f1
   700  000E32  C00A  F02D         	movff	?___awtoft+1,___ftmul@f1+1
   701  000E36  C00B  F02E         	movff	?___awtoft+2,___ftmul@f1+2
   702  000E3A  EC36  F007         	call	___ftmul	;wreg free
   703  000E3E  C02C  F03B         	movff	?___ftmul,___fttol@f1
   704  000E42  C02D  F03C         	movff	?___ftmul+1,___fttol@f1+1
   705  000E46  C02E  F03D         	movff	?___ftmul+2,___fttol@f1+2
   706  000E4A  ECB2  F007         	call	___fttol	;wreg free
   707  000E4E  C03B  F04D         	movff	?___fttol,??_set_fan_speed
   708  000E52  C03C  F04E         	movff	?___fttol+1,??_set_fan_speed+1
   709  000E56  C03D  F04F         	movff	?___fttol+2,??_set_fan_speed+2
   710  000E5A  C03E  F050         	movff	?___fttol+3,??_set_fan_speed+3
   711  000E5E  C04D  F051         	movff	??_set_fan_speed,set_fan_speed@new_duty_cycle
   712  000E62  C04E  F052         	movff	??_set_fan_speed+1,set_fan_speed@new_duty_cycle+1
   713                           
   714                           ;ntc_test.c: 120: CCPR1L = new_duty_cycle;
   715  000E66  C051  FFBE         	movff	set_fan_speed@new_duty_cycle,4030	;volatile
   716  000E6A  0012               	return	
   717  000E6C                     __end_of_set_fan_speed:
   718                           	opt stack 0
   719                           tblptru	equ	0xFF8
   720                           tblptrh	equ	0xFF7
   721                           tblptrl	equ	0xFF6
   722                           tablat	equ	0xFF5
   723                           status	equ	0xFD8
   724                           
   725 ;; *************** function ___fttol *****************
   726 ;; Defined at:
   727 ;;		line 44 in file "/opt/microchip/xc8/v1.31/sources/common/fttol.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;  f1              3   58[COMRAM] float 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  lval            4   68[COMRAM] unsigned long 
   732 ;;  exp1            1   72[COMRAM] unsigned char 
   733 ;;  sign1           1   67[COMRAM] unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  4   58[COMRAM] long 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   743 ;;      Params:         4       0       0       0       0       0       0       0       0
   744 ;;      Locals:         6       0       0       0       0       0       0       0       0
   745 ;;      Temps:          5       0       0       0       0       0       0       0       0
   746 ;;      Totals:        15       0       0       0       0       0       0       0       0
   747 ;;Total ram usage:       15 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; This function calls:
   750 ;;		Nothing
   751 ;; This function is called by:
   752 ;;		_set_fan_speed
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text2
   757  000F64                     __ptext2:
   758                           	opt stack 0
   759  000F64                     ___fttol:
   760                           	opt stack 28
   761                           
   762                           ;incstack = 0
   763  000F64  C03D  F03F         	movff	___fttol@f1+2,??___fttol
   764  000F68  6A40               	clrf	(??___fttol+1)& (0+255),c
   765  000F6A  6A41               	clrf	(??___fttol+2)& (0+255),c
   766  000F6C  343C               	rlcf	___fttol@f1+1,w,c
   767  000F6E  363F               	rlcf	??___fttol& (0+255),f,c
   768  000F70  E301               	bnc	u511
   769  000F72  8040               	bsf	(??___fttol+1)& (0+255),0,c
   770  000F74                     u511:
   771  000F74  503F               	movf	??___fttol,w,c
   772  000F76  6E49               	movwf	___fttol@exp1,c
   773  000F78  6649               	tstfsz	___fttol@exp1& (0+255),c
   774  000F7A  D009               	goto	l1642
   775  000F7C  0E00               	movlw	0
   776  000F7E  6E3B               	movwf	?___fttol,c
   777  000F80  0E00               	movlw	0
   778  000F82  6E3C               	movwf	?___fttol+1,c
   779  000F84  0E00               	movlw	0
   780  000F86  6E3D               	movwf	?___fttol+2,c
   781  000F88  0E00               	movlw	0
   782  000F8A  6E3E               	movwf	?___fttol+3,c
   783  000F8C  0012               	return	
   784  000F8E                     l1642:
   785  000F8E  0E17               	movlw	23
   786  000F90  6E3F               	movwf	??___fttol& (0+255),c
   787  000F92  C03B  F040         	movff	___fttol@f1,??___fttol+1
   788  000F96  C03C  F041         	movff	___fttol@f1+1,??___fttol+2
   789  000F9A  C03D  F042         	movff	___fttol@f1+2,??___fttol+3
   790  000F9E  283F               	incf	??___fttol,w,c
   791  000FA0  6E43               	movwf	(??___fttol+4)& (0+255),c
   792  000FA2  D004               	goto	u530
   793  000FA4                     u535:
   794  000FA4  90D8               	bcf	status,0,c
   795  000FA6  3242               	rrcf	??___fttol+3,f,c
   796  000FA8  3241               	rrcf	??___fttol+2,f,c
   797  000FAA  3240               	rrcf	??___fttol+1,f,c
   798  000FAC                     u530:
   799  000FAC  2E43               	decfsz	(??___fttol+4)& (0+255),f,c
   800  000FAE  D7FA               	goto	u535
   801  000FB0  5040               	movf	??___fttol+1,w,c
   802  000FB2  6E44               	movwf	___fttol@sign1,c
   803  000FB4  8E3C               	bsf	___fttol@f1+1,7,c
   804  000FB6  0EFF               	movlw	255
   805  000FB8  163B               	andwf	___fttol@f1,f,c
   806  000FBA  0EFF               	movlw	255
   807  000FBC  163C               	andwf	___fttol@f1+1,f,c
   808  000FBE  0E00               	movlw	0
   809  000FC0  163D               	andwf	___fttol@f1+2,f,c
   810  000FC2  503B               	movf	___fttol@f1,w,c
   811  000FC4  6E45               	movwf	___fttol@lval,c
   812  000FC6  503C               	movf	___fttol@f1+1,w,c
   813  000FC8  6E46               	movwf	___fttol@lval+1,c
   814  000FCA  503D               	movf	___fttol@f1+2,w,c
   815  000FCC  6E47               	movwf	___fttol@lval+2,c
   816  000FCE  6A48               	clrf	___fttol@lval+3,c
   817  000FD0  0E8E               	movlw	142
   818  000FD2  5E49               	subwf	___fttol@exp1,f,c
   819  000FD4  AE49               	btfss	___fttol@exp1,7,c
   820  000FD6  D019               	goto	l1664
   821  000FD8  5049               	movf	___fttol@exp1,w,c
   822  000FDA  0A80               	xorlw	128
   823  000FDC  6E3F               	movwf	??___fttol& (0+255),c
   824  000FDE  0EF1               	movlw	241
   825  000FE0  0A80               	xorlw	128
   826  000FE2  5C3F               	subwf	??___fttol,w,c
   827  000FE4  B0D8               	btfsc	status,0,c
   828  000FE6  D009               	goto	l1660
   829  000FE8  0E00               	movlw	0
   830  000FEA  6E3B               	movwf	?___fttol,c
   831  000FEC  0E00               	movlw	0
   832  000FEE  6E3C               	movwf	?___fttol+1,c
   833  000FF0  0E00               	movlw	0
   834  000FF2  6E3D               	movwf	?___fttol+2,c
   835  000FF4  0E00               	movlw	0
   836  000FF6  6E3E               	movwf	?___fttol+3,c
   837  000FF8  0012               	return	
   838  000FFA                     l1660:
   839  000FFA  90D8               	bcf	status,0,c
   840  000FFC  3248               	rrcf	___fttol@lval+3,f,c
   841  000FFE  3247               	rrcf	___fttol@lval+2,f,c
   842  001000  3246               	rrcf	___fttol@lval+1,f,c
   843  001002  3245               	rrcf	___fttol@lval,f,c
   844  001004  3E49               	incfsz	___fttol@exp1,f,c
   845  001006  D7F9               	goto	l1660
   846  001008  D014               	goto	l1674
   847  00100A                     l1664:
   848  00100A  0E17               	movlw	23
   849  00100C  6449               	cpfsgt	___fttol@exp1,c
   850  00100E  D00F               	goto	l1672
   851  001010  0E00               	movlw	0
   852  001012  6E3B               	movwf	?___fttol,c
   853  001014  0E00               	movlw	0
   854  001016  6E3C               	movwf	?___fttol+1,c
   855  001018  0E00               	movlw	0
   856  00101A  6E3D               	movwf	?___fttol+2,c
   857  00101C  0E00               	movlw	0
   858  00101E  6E3E               	movwf	?___fttol+3,c
   859  001020  0012               	return	
   860  001022                     l1670:
   861  001022  90D8               	bcf	status,0,c
   862  001024  3645               	rlcf	___fttol@lval,f,c
   863  001026  3646               	rlcf	___fttol@lval+1,f,c
   864  001028  3647               	rlcf	___fttol@lval+2,f,c
   865  00102A  3648               	rlcf	___fttol@lval+3,f,c
   866  00102C  0649               	decf	___fttol@exp1,f,c
   867  00102E                     l1672:
   868  00102E  6649               	tstfsz	___fttol@exp1,c
   869  001030  D7F8               	goto	l1670
   870  001032                     l1674:
   871  001032  5044               	movf	___fttol@sign1,w,c
   872  001034  B4D8               	btfsc	status,2,c
   873  001036  D008               	goto	l1678
   874  001038  1E48               	comf	___fttol@lval+3,f,c
   875  00103A  1E47               	comf	___fttol@lval+2,f,c
   876  00103C  1E46               	comf	___fttol@lval+1,f,c
   877  00103E  6C45               	negf	___fttol@lval,c
   878  001040  0E00               	movlw	0
   879  001042  2246               	addwfc	___fttol@lval+1,f,c
   880  001044  2247               	addwfc	___fttol@lval+2,f,c
   881  001046  2248               	addwfc	___fttol@lval+3,f,c
   882  001048                     l1678:
   883  001048  C045  F03B         	movff	___fttol@lval,?___fttol
   884  00104C  C046  F03C         	movff	___fttol@lval+1,?___fttol+1
   885  001050  C047  F03D         	movff	___fttol@lval+2,?___fttol+2
   886  001054  C048  F03E         	movff	___fttol@lval+3,?___fttol+3
   887  001058  0012               	return	
   888  00105A                     __end_of___fttol:
   889                           	opt stack 0
   890                           tblptru	equ	0xFF8
   891                           tblptrh	equ	0xFF7
   892                           tblptrl	equ	0xFF6
   893                           tablat	equ	0xFF5
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function ___ftge *****************
   897 ;; Defined at:
   898 ;;		line 4 in file "/opt/microchip/xc8/v1.31/sources/common/ftge.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  ff1             3    0[COMRAM] float 
   901 ;;  ff2             3    3[COMRAM] float 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;		None               void
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   913 ;;      Params:         6       0       0       0       0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0
   915 ;;      Temps:          3       0       0       0       0       0       0       0       0
   916 ;;      Totals:         9       0       0       0       0       0       0       0       0
   917 ;;Total ram usage:        9 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_set_fan_speed
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text3
   927  00134E                     __ptext3:
   928                           	opt stack 0
   929  00134E                     ___ftge:
   930                           	opt stack 28
   931                           
   932                           ;incstack = 0
   933  00134E  AE03               	btfss	___ftge@ff1+2,7,c
   934  001350  D016               	goto	l1618
   935  001352  C001  F007         	movff	___ftge@ff1,??___ftge
   936  001356  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
   937  00135A  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
   938  00135E  1E07               	comf	??___ftge,f,c
   939  001360  1E08               	comf	??___ftge+1,f,c
   940  001362  1E09               	comf	??___ftge+2,f,c
   941  001364  2A07               	incf	??___ftge,f,c
   942  001366  0E00               	movlw	0
   943  001368  2208               	addwfc	??___ftge+1,f,c
   944  00136A  2209               	addwfc	??___ftge+2,f,c
   945  00136C  0E00               	movlw	0
   946  00136E  2407               	addwf	??___ftge,w,c
   947  001370  6E01               	movwf	___ftge@ff1,c
   948  001372  0E00               	movlw	0
   949  001374  2008               	addwfc	??___ftge+1,w,c
   950  001376  6E02               	movwf	___ftge@ff1+1,c
   951  001378  0E80               	movlw	128
   952  00137A  2009               	addwfc	??___ftge+2,w,c
   953  00137C  6E03               	movwf	___ftge@ff1+2,c
   954  00137E                     l1618:
   955  00137E  AE06               	btfss	___ftge@ff2+2,7,c
   956  001380  D016               	goto	l1622
   957  001382  C004  F007         	movff	___ftge@ff2,??___ftge
   958  001386  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
   959  00138A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
   960  00138E  1E07               	comf	??___ftge,f,c
   961  001390  1E08               	comf	??___ftge+1,f,c
   962  001392  1E09               	comf	??___ftge+2,f,c
   963  001394  2A07               	incf	??___ftge,f,c
   964  001396  0E00               	movlw	0
   965  001398  2208               	addwfc	??___ftge+1,f,c
   966  00139A  2209               	addwfc	??___ftge+2,f,c
   967  00139C  0E00               	movlw	0
   968  00139E  2407               	addwf	??___ftge,w,c
   969  0013A0  6E04               	movwf	___ftge@ff2,c
   970  0013A2  0E00               	movlw	0
   971  0013A4  2008               	addwfc	??___ftge+1,w,c
   972  0013A6  6E05               	movwf	___ftge@ff2+1,c
   973  0013A8  0E80               	movlw	128
   974  0013AA  2009               	addwfc	??___ftge+2,w,c
   975  0013AC  6E06               	movwf	___ftge@ff2+2,c
   976  0013AE                     l1622:
   977  0013AE  0E00               	movlw	0
   978  0013B0  1A01               	xorwf	___ftge@ff1,f,c
   979  0013B2  0E00               	movlw	0
   980  0013B4  1A02               	xorwf	___ftge@ff1+1,f,c
   981  0013B6  0E80               	movlw	128
   982  0013B8  1A03               	xorwf	___ftge@ff1+2,f,c
   983  0013BA  0E00               	movlw	0
   984  0013BC  1A04               	xorwf	___ftge@ff2,f,c
   985  0013BE  0E00               	movlw	0
   986  0013C0  1A05               	xorwf	___ftge@ff2+1,f,c
   987  0013C2  0E80               	movlw	128
   988  0013C4  1A06               	xorwf	___ftge@ff2+2,f,c
   989  0013C6  5004               	movf	___ftge@ff2,w,c
   990  0013C8  5C01               	subwf	___ftge@ff1,w,c
   991  0013CA  5005               	movf	___ftge@ff2+1,w,c
   992  0013CC  5802               	subwfb	___ftge@ff1+1,w,c
   993  0013CE  5006               	movf	___ftge@ff2+2,w,c
   994  0013D0  5803               	subwfb	___ftge@ff1+2,w,c
   995  0013D2  B0D8               	btfsc	status,0,c
   996  0013D4  D002               	goto	l1628
   997  0013D6  90D8               	bcf	status,0,c
   998  0013D8  0012               	return	
   999  0013DA                     l1628:
  1000  0013DA  80D8               	bsf	status,0,c
  1001  0013DC  0012               	return	
  1002  0013DE                     __end_of___ftge:
  1003                           	opt stack 0
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           status	equ	0xFD8
  1009                           
  1010 ;; *************** function _get_temperature *****************
  1011 ;; Defined at:
  1012 ;;		line 25 in file "ntc_temperature.h"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  sensor          2   75[COMRAM] int 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  temp            3   21[BANK0 ] float 
  1017 ;;  Tn              3   14[BANK0 ] float 
  1018 ;;  Rth             3    3[BANK0 ] float 
  1019 ;;  Vout            3    0[BANK0 ] float 
  1020 ;;  Bth             2   19[BANK0 ] unsigned int 
  1021 ;;  R2              2   17[BANK0 ] unsigned int 
  1022 ;;  R1              2   12[BANK0 ] unsigned int 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  3   75[COMRAM] float 
  1025 ;; Registers used:
  1026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1032 ;;      Params:         3       0       0       0       0       0       0       0       0
  1033 ;;      Locals:         0      24       0       0       0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1035 ;;      Totals:         3      24       0       0       0       0       0       0       0
  1036 ;;Total ram usage:       27 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    4
  1039 ;; This function calls:
  1040 ;;		___ftadd
  1041 ;;		___ftdiv
  1042 ;;		___ftmul
  1043 ;;		___ftneg
  1044 ;;		___lwtoft
  1045 ;;		___wmul
  1046 ;;		_adc_convert
  1047 ;;		_log
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text4
  1054  00082A                     __ptext4:
  1055                           	opt stack 0
  1056  00082A                     _get_temperature:
  1057                           	opt stack 25
  1058                           
  1059                           ;ntc_temperature.h: 27: float Vout;
  1060                           ;ntc_temperature.h: 29: unsigned int R1 = 10000;
  1061                           
  1062                           ;incstack = 0
  1063  00082A  0E27               	movlw	39
  1064  00082C  0100               	movlb	0	; () banked
  1065  00082E  0100               	movlb	0	; () banked
  1066  000830  6F6D               	movwf	(get_temperature@R1+1)& (0+255),b
  1067  000832  0E10               	movlw	16
  1068  000834  0100               	movlb	0	; () banked
  1069  000836  6F6C               	movwf	get_temperature@R1& (0+255),b
  1070                           
  1071                           ;ntc_temperature.h: 31: unsigned int R2 = 10000;
  1072  000838  0E27               	movlw	39
  1073  00083A  0100               	movlb	0	; () banked
  1074  00083C  0100               	movlb	0	; () banked
  1075  00083E  6F72               	movwf	(get_temperature@R2+1)& (0+255),b
  1076  000840  0E10               	movlw	16
  1077  000842  0100               	movlb	0	; () banked
  1078  000844  6F71               	movwf	get_temperature@R2& (0+255),b
  1079                           
  1080                           ;ntc_temperature.h: 32: float Rth;
  1081                           ;ntc_temperature.h: 33: float Tn = 25+273.15;
  1082  000846  0E13               	movlw	19
  1083  000848  0100               	movlb	0	; () banked
  1084  00084A  0100               	movlb	0	; () banked
  1085  00084C  6F6E               	movwf	get_temperature@Tn& (0+255),b
  1086  00084E  0E95               	movlw	149
  1087  000850  0100               	movlb	0	; () banked
  1088  000852  0100               	movlb	0	; () banked
  1089  000854  6F6F               	movwf	(get_temperature@Tn+1)& (0+255),b
  1090  000856  0E43               	movlw	67
  1091  000858  0100               	movlb	0	; () banked
  1092  00085A  0100               	movlb	0	; () banked
  1093  00085C  6F70               	movwf	(get_temperature@Tn+2)& (0+255),b
  1094                           
  1095                           ;ntc_temperature.h: 34: unsigned int Bth = 4073;
  1096  00085E  0E0F               	movlw	15
  1097  000860  0100               	movlb	0	; () banked
  1098  000862  0100               	movlb	0	; () banked
  1099  000864  6F74               	movwf	(get_temperature@Bth+1)& (0+255),b
  1100  000866  0EE9               	movlw	233
  1101  000868  0100               	movlb	0	; () banked
  1102  00086A  6F73               	movwf	get_temperature@Bth& (0+255),b
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;ntc_temperature.h: 35: float temp;
  1106                           ;ntc_temperature.h: 40: Vout = adc_convert(sensor) * ADC_RESOLUTION;
  1107  00086C  C04C  F001         	movff	get_temperature@sensor,adc_convert@channel
  1108  000870  C04D  F002         	movff	get_temperature@sensor+1,adc_convert@channel+1
  1109  000874  EC56  F00A         	call	_adc_convert	;wreg free
  1110  000878  C001  F009         	movff	?_adc_convert,___lwtoft@c
  1111  00087C  C002  F00A         	movff	?_adc_convert+1,___lwtoft@c+1
  1112  000880  EC6E  F00A         	call	___lwtoft	;wreg free
  1113  000884  C009  F02C         	movff	?___lwtoft,___ftmul@f1
  1114  000888  C00A  F02D         	movff	?___lwtoft+1,___ftmul@f1+1
  1115  00088C  C00B  F02E         	movff	?___lwtoft+2,___ftmul@f1+2
  1116  000890  0E01               	movlw	low _ADC_RESOLUTION
  1117  000892  6EF6               	movwf	tblptrl,c
  1118  000894  0E08               	movlw	high _ADC_RESOLUTION
  1119  000896  6EF7               	movwf	tblptrh,c
  1120  000898  0009               	tblrd		*+
  1121  00089A  CFF5 F02F          	movff	tablat,___ftmul@f2
  1122  00089E  0009               	tblrd		*+
  1123  0008A0  CFF5 F030          	movff	tablat,___ftmul@f2+1
  1124  0008A4  000A               	tblrd		*-
  1125  0008A6  CFF5 F031          	movff	tablat,___ftmul@f2+2
  1126  0008AA  EC36  F007         	call	___ftmul	;wreg free
  1127  0008AE  C02C  F060         	movff	?___ftmul,get_temperature@Vout
  1128  0008B2  C02D  F061         	movff	?___ftmul+1,get_temperature@Vout+1
  1129  0008B6  C02E  F062         	movff	?___ftmul+2,get_temperature@Vout+2
  1130                           
  1131                           ;ntc_temperature.h: 41: Rth = ((5 * R2) / (5 - Vout)) - R2;
  1132  0008BA  0E00               	movlw	0
  1133  0008BC  6E14               	movwf	___ftadd@f2,c
  1134  0008BE  0EA0               	movlw	160
  1135  0008C0  6E15               	movwf	___ftadd@f2+1,c
  1136  0008C2  0E40               	movlw	64
  1137  0008C4  6E16               	movwf	___ftadd@f2+2,c
  1138  0008C6  C060  F00E         	movff	get_temperature@Vout,___ftneg@f1
  1139  0008CA  C061  F00F         	movff	get_temperature@Vout+1,___ftneg@f1+1
  1140  0008CE  C062  F010         	movff	get_temperature@Vout+2,___ftneg@f1+2
  1141  0008D2  EC84  F00A         	call	___ftneg	;wreg free
  1142  0008D6  C00E  F011         	movff	?___ftneg,___ftadd@f1
  1143  0008DA  C00F  F012         	movff	?___ftneg+1,___ftadd@f1+1
  1144  0008DE  C010  F013         	movff	?___ftneg+2,___ftadd@f1+2
  1145  0008E2  EC40  F005         	call	___ftadd	;wreg free
  1146  0008E6  C011  F020         	movff	?___ftadd,___ftdiv@f2
  1147  0008EA  C012  F021         	movff	?___ftadd+1,___ftdiv@f2+1
  1148  0008EE  C013  F022         	movff	?___ftadd+2,___ftdiv@f2+2
  1149  0008F2  0E00               	movlw	0
  1150  0008F4  6E04               	movwf	___wmul@multiplicand+1,c
  1151  0008F6  0E05               	movlw	5
  1152  0008F8  6E03               	movwf	___wmul@multiplicand,c
  1153  0008FA  C071  F001         	movff	get_temperature@R2,___wmul@multiplier
  1154  0008FE  C072  F002         	movff	get_temperature@R2+1,___wmul@multiplier+1
  1155  000902  EC39  F00A         	call	___wmul	;wreg free
  1156  000906  C001  F009         	movff	?___wmul,___lwtoft@c
  1157  00090A  C002  F00A         	movff	?___wmul+1,___lwtoft@c+1
  1158  00090E  EC6E  F00A         	call	___lwtoft	;wreg free
  1159  000912  C009  F01D         	movff	?___lwtoft,___ftdiv@f1
  1160  000916  C00A  F01E         	movff	?___lwtoft+1,___ftdiv@f1+1
  1161  00091A  C00B  F01F         	movff	?___lwtoft+2,___ftdiv@f1+2
  1162  00091E  EC2D  F008         	call	___ftdiv	;wreg free
  1163  000922  C01D  F066         	movff	?___ftdiv,_get_temperature$997
  1164  000926  C01E  F067         	movff	?___ftdiv+1,_get_temperature$997+1
  1165  00092A  C01F  F068         	movff	?___ftdiv+2,_get_temperature$997+2
  1166                           
  1167                           ;ntc_temperature.h: 41: Rth = ((5 * R2) / (5 - Vout)) - R2;
  1168  00092E  C066  F011         	movff	_get_temperature$997,___ftadd@f1
  1169  000932  C067  F012         	movff	_get_temperature$997+1,___ftadd@f1+1
  1170  000936  C068  F013         	movff	_get_temperature$997+2,___ftadd@f1+2
  1171  00093A  C071  F009         	movff	get_temperature@R2,___lwtoft@c
  1172  00093E  C072  F00A         	movff	get_temperature@R2+1,___lwtoft@c+1
  1173  000942  EC6E  F00A         	call	___lwtoft	;wreg free
  1174  000946  C009  F00E         	movff	?___lwtoft,___ftneg@f1
  1175  00094A  C00A  F00F         	movff	?___lwtoft+1,___ftneg@f1+1
  1176  00094E  C00B  F010         	movff	?___lwtoft+2,___ftneg@f1+2
  1177  000952  EC84  F00A         	call	___ftneg	;wreg free
  1178  000956  C00E  F014         	movff	?___ftneg,___ftadd@f2
  1179  00095A  C00F  F015         	movff	?___ftneg+1,___ftadd@f2+1
  1180  00095E  C010  F016         	movff	?___ftneg+2,___ftadd@f2+2
  1181  000962  EC40  F005         	call	___ftadd	;wreg free
  1182  000966  C011  F063         	movff	?___ftadd,get_temperature@Rth
  1183  00096A  C012  F064         	movff	?___ftadd+1,get_temperature@Rth+1
  1184  00096E  C013  F065         	movff	?___ftadd+2,get_temperature@Rth+2
  1185                           
  1186                           ;ntc_temperature.h: 42: temp = (Bth*Tn) / (Bth + log(Rth / R1) * Tn);
  1187  000972  C06C  F009         	movff	get_temperature@R1,___lwtoft@c
  1188  000976  C06D  F00A         	movff	get_temperature@R1+1,___lwtoft@c+1
  1189  00097A  EC6E  F00A         	call	___lwtoft	;wreg free
  1190  00097E  C009  F020         	movff	?___lwtoft,___ftdiv@f2
  1191  000982  C00A  F021         	movff	?___lwtoft+1,___ftdiv@f2+1
  1192  000986  C00B  F022         	movff	?___lwtoft+2,___ftdiv@f2+2
  1193  00098A  C063  F01D         	movff	get_temperature@Rth,___ftdiv@f1
  1194  00098E  C064  F01E         	movff	get_temperature@Rth+1,___ftdiv@f1+1
  1195  000992  C065  F01F         	movff	get_temperature@Rth+2,___ftdiv@f1+2
  1196  000996  EC2D  F008         	call	___ftdiv	;wreg free
  1197  00099A  C01D  F047         	movff	?___ftdiv,log@x
  1198  00099E  C01E  F048         	movff	?___ftdiv+1,log@x+1
  1199  0009A2  C01F  F049         	movff	?___ftdiv+2,log@x+2
  1200  0009A6  EC1C  F006         	call	_log	;wreg free
  1201  0009AA  C047  F069         	movff	?_log,_get_temperature$998
  1202  0009AE  C048  F06A         	movff	?_log+1,_get_temperature$998+1
  1203  0009B2  C049  F06B         	movff	?_log+2,_get_temperature$998+2
  1204                           
  1205                           ;ntc_temperature.h: 42: temp = (Bth*Tn) / (Bth + log(Rth / R1) * Tn);
  1206  0009B6  C06E  F02F         	movff	get_temperature@Tn,___ftmul@f2
  1207  0009BA  C06F  F030         	movff	get_temperature@Tn+1,___ftmul@f2+1
  1208  0009BE  C070  F031         	movff	get_temperature@Tn+2,___ftmul@f2+2
  1209  0009C2  C073  F009         	movff	get_temperature@Bth,___lwtoft@c
  1210  0009C6  C074  F00A         	movff	get_temperature@Bth+1,___lwtoft@c+1
  1211  0009CA  EC6E  F00A         	call	___lwtoft	;wreg free
  1212  0009CE  C009  F02C         	movff	?___lwtoft,___ftmul@f1
  1213  0009D2  C00A  F02D         	movff	?___lwtoft+1,___ftmul@f1+1
  1214  0009D6  C00B  F02E         	movff	?___lwtoft+2,___ftmul@f1+2
  1215  0009DA  EC36  F007         	call	___ftmul	;wreg free
  1216  0009DE  C02C  F01D         	movff	?___ftmul,___ftdiv@f1
  1217  0009E2  C02D  F01E         	movff	?___ftmul+1,___ftdiv@f1+1
  1218  0009E6  C02E  F01F         	movff	?___ftmul+2,___ftdiv@f1+2
  1219  0009EA  C06E  F02F         	movff	get_temperature@Tn,___ftmul@f2
  1220  0009EE  C06F  F030         	movff	get_temperature@Tn+1,___ftmul@f2+1
  1221  0009F2  C070  F031         	movff	get_temperature@Tn+2,___ftmul@f2+2
  1222  0009F6  C069  F02C         	movff	_get_temperature$998,___ftmul@f1
  1223  0009FA  C06A  F02D         	movff	_get_temperature$998+1,___ftmul@f1+1
  1224  0009FE  C06B  F02E         	movff	_get_temperature$998+2,___ftmul@f1+2
  1225  000A02  EC36  F007         	call	___ftmul	;wreg free
  1226  000A06  C02C  F014         	movff	?___ftmul,___ftadd@f2
  1227  000A0A  C02D  F015         	movff	?___ftmul+1,___ftadd@f2+1
  1228  000A0E  C02E  F016         	movff	?___ftmul+2,___ftadd@f2+2
  1229  000A12  C073  F009         	movff	get_temperature@Bth,___lwtoft@c
  1230  000A16  C074  F00A         	movff	get_temperature@Bth+1,___lwtoft@c+1
  1231  000A1A  EC6E  F00A         	call	___lwtoft	;wreg free
  1232  000A1E  C009  F011         	movff	?___lwtoft,___ftadd@f1
  1233  000A22  C00A  F012         	movff	?___lwtoft+1,___ftadd@f1+1
  1234  000A26  C00B  F013         	movff	?___lwtoft+2,___ftadd@f1+2
  1235  000A2A  EC40  F005         	call	___ftadd	;wreg free
  1236  000A2E  C011  F020         	movff	?___ftadd,___ftdiv@f2
  1237  000A32  C012  F021         	movff	?___ftadd+1,___ftdiv@f2+1
  1238  000A36  C013  F022         	movff	?___ftadd+2,___ftdiv@f2+2
  1239  000A3A  EC2D  F008         	call	___ftdiv	;wreg free
  1240  000A3E  C01D  F075         	movff	?___ftdiv,get_temperature@temp
  1241  000A42  C01E  F076         	movff	?___ftdiv+1,get_temperature@temp+1
  1242  000A46  C01F  F077         	movff	?___ftdiv+2,get_temperature@temp+2
  1243                           
  1244                           ;ntc_temperature.h: 44: temp = temp - 273.15;
  1245  000A4A  C075  F011         	movff	get_temperature@temp,___ftadd@f1
  1246  000A4E  C076  F012         	movff	get_temperature@temp+1,___ftadd@f1+1
  1247  000A52  C077  F013         	movff	get_temperature@temp+2,___ftadd@f1+2
  1248  000A56  0E93               	movlw	147
  1249  000A58  6E14               	movwf	___ftadd@f2,c
  1250  000A5A  0E88               	movlw	136
  1251  000A5C  6E15               	movwf	___ftadd@f2+1,c
  1252  000A5E  0EC3               	movlw	195
  1253  000A60  6E16               	movwf	___ftadd@f2+2,c
  1254  000A62  EC40  F005         	call	___ftadd	;wreg free
  1255  000A66  C011  F075         	movff	?___ftadd,get_temperature@temp
  1256  000A6A  C012  F076         	movff	?___ftadd+1,get_temperature@temp+1
  1257  000A6E  C013  F077         	movff	?___ftadd+2,get_temperature@temp+2
  1258                           
  1259                           ;ntc_temperature.h: 46: return temp;
  1260  000A72  C075  F04C         	movff	get_temperature@temp,?_get_temperature
  1261  000A76  C076  F04D         	movff	get_temperature@temp+1,?_get_temperature+1
  1262  000A7A  C077  F04E         	movff	get_temperature@temp+2,?_get_temperature+2
  1263  000A7E  0012               	return	
  1264  000A80                     __end_of_get_temperature:
  1265                           	opt stack 0
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           status	equ	0xFD8
  1271                           
  1272 ;; *************** function _log *****************
  1273 ;; Defined at:
  1274 ;;		line 5 in file "/opt/microchip/xc8/v1.31/sources/common/log.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  x               3   70[COMRAM] float 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  exponent        2   73[COMRAM] int 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  3   70[COMRAM] int 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1288 ;;      Params:         3       0       0       0       0       0       0       0       0
  1289 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1291 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1292 ;;Total ram usage:        5 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    3
  1295 ;; This function calls:
  1296 ;;		___awtoft
  1297 ;;		___ftadd
  1298 ;;		___ftmul
  1299 ;;		_eval_poly
  1300 ;;		_frexp
  1301 ;; This function is called by:
  1302 ;;		_get_temperature
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text5
  1307  000C38                     __ptext5:
  1308                           	opt stack 0
  1309  000C38                     _log:
  1310                           	opt stack 25
  1311                           
  1312                           ;incstack = 0
  1313  000C38  5049               	movf	log@x+2,w,c
  1314  000C3A  0A80               	xorlw	128
  1315  000C3C  0F80               	addlw	128
  1316  000C3E  E105               	bnz	u1015
  1317  000C40  0E00               	movlw	0
  1318  000C42  5C48               	subwf	log@x+1,w,c
  1319  000C44  E102               	bnz	u1015
  1320  000C46  0E00               	movlw	0
  1321  000C48  5C47               	subwf	log@x,w,c
  1322  000C4A                     u1015:
  1323  000C4A  B0D8               	btfsc	status,0,c
  1324  000C4C  D00B               	goto	l2030
  1325  000C4E  0E00               	movlw	0
  1326  000C50  6E5A               	movwf	_errno+1,c
  1327  000C52  0E21               	movlw	33
  1328  000C54  6E59               	movwf	_errno,c
  1329  000C56  0E00               	movlw	0
  1330  000C58  6E47               	movwf	?_log,c
  1331  000C5A  0E00               	movlw	0
  1332  000C5C  6E48               	movwf	?_log+1,c
  1333  000C5E  0E00               	movlw	0
  1334  000C60  6E49               	movwf	?_log+2,c
  1335  000C62  0012               	return	
  1336  000C64                     l2030:
  1337  000C64  0E7F               	movlw	127
  1338  000C66  1449               	andwf	log@x+2,w,c
  1339  000C68  1048               	iorwf	log@x+1,w,c
  1340  000C6A  1047               	iorwf	log@x,w,c
  1341  000C6C  A4D8               	btfss	status,2,c
  1342  000C6E  D00B               	goto	l2036
  1343  000C70  0E00               	movlw	0
  1344  000C72  6E5A               	movwf	_errno+1,c
  1345  000C74  0E22               	movlw	34
  1346  000C76  6E59               	movwf	_errno,c
  1347  000C78  0E00               	movlw	0
  1348  000C7A  6E47               	movwf	?_log,c
  1349  000C7C  0E00               	movlw	0
  1350  000C7E  6E48               	movwf	?_log+1,c
  1351  000C80  0E00               	movlw	0
  1352  000C82  6E49               	movwf	?_log+2,c
  1353  000C84  0012               	return	
  1354  000C86                     l2036:
  1355  000C86  0E00               	movlw	0
  1356  000C88  6E2F               	movwf	___ftmul@f2,c
  1357  000C8A  0E00               	movlw	0
  1358  000C8C  6E30               	movwf	___ftmul@f2+1,c
  1359  000C8E  0E40               	movlw	64
  1360  000C90  6E31               	movwf	___ftmul@f2+2,c
  1361  000C92  0E00               	movlw	high log@exponent
  1362  000C94  6E05               	movwf	frexp@eptr+1,c
  1363  000C96  0E4A               	movlw	low log@exponent
  1364  000C98  6E04               	movwf	frexp@eptr,c
  1365  000C9A  C047  F001         	movff	log@x,frexp@value
  1366  000C9E  C048  F002         	movff	log@x+1,frexp@value+1
  1367  000CA2  C049  F003         	movff	log@x+2,frexp@value+2
  1368  000CA6  EC5D  F009         	call	_frexp	;wreg free
  1369  000CAA  C001  F02C         	movff	?_frexp,___ftmul@f1
  1370  000CAE  C002  F02D         	movff	?_frexp+1,___ftmul@f1+1
  1371  000CB2  C003  F02E         	movff	?_frexp+2,___ftmul@f1+2
  1372  000CB6  EC36  F007         	call	___ftmul	;wreg free
  1373  000CBA  C02C  F011         	movff	?___ftmul,___ftadd@f1
  1374  000CBE  C02D  F012         	movff	?___ftmul+1,___ftadd@f1+1
  1375  000CC2  C02E  F013         	movff	?___ftmul+2,___ftadd@f1+2
  1376  000CC6  0E00               	movlw	0
  1377  000CC8  6E14               	movwf	___ftadd@f2,c
  1378  000CCA  0E80               	movlw	128
  1379  000CCC  6E15               	movwf	___ftadd@f2+1,c
  1380  000CCE  0EBF               	movlw	191
  1381  000CD0  6E16               	movwf	___ftadd@f2+2,c
  1382  000CD2  EC40  F005         	call	___ftadd	;wreg free
  1383  000CD6  C011  F047         	movff	?___ftadd,log@x
  1384  000CDA  C012  F048         	movff	?___ftadd+1,log@x+1
  1385  000CDE  C013  F049         	movff	?___ftadd+2,log@x+2
  1386  000CE2  064A               	decf	log@exponent,f,c
  1387  000CE4  A0D8               	btfss	status,0,c
  1388  000CE6  064B               	decf	log@exponent+1,f,c
  1389  000CE8  C047  F03B         	movff	log@x,eval_poly@x
  1390  000CEC  C048  F03C         	movff	log@x+1,eval_poly@x+1
  1391  000CF0  C049  F03D         	movff	log@x+2,eval_poly@x+2
  1392  000CF4  0E08               	movlw	high log@coeff
  1393  000CF6  6E3F               	movwf	eval_poly@d+1,c
  1394  000CF8  0E0E               	movlw	low log@coeff
  1395  000CFA  6E3E               	movwf	eval_poly@d,c
  1396  000CFC  0E00               	movlw	0
  1397  000CFE  6E41               	movwf	eval_poly@n+1,c
  1398  000D00  0E08               	movlw	8
  1399  000D02  6E40               	movwf	eval_poly@n,c
  1400  000D04  ECA0  F008         	call	_eval_poly	;wreg free
  1401  000D08  C03B  F047         	movff	?_eval_poly,log@x
  1402  000D0C  C03C  F048         	movff	?_eval_poly+1,log@x+1
  1403  000D10  C03D  F049         	movff	?_eval_poly+2,log@x+2
  1404  000D14  0E72               	movlw	114
  1405  000D16  6E2F               	movwf	___ftmul@f2,c
  1406  000D18  0E31               	movlw	49
  1407  000D1A  6E30               	movwf	___ftmul@f2+1,c
  1408  000D1C  0E3F               	movlw	63
  1409  000D1E  6E31               	movwf	___ftmul@f2+2,c
  1410  000D20  C04A  F009         	movff	log@exponent,___awtoft@c
  1411  000D24  C04B  F00A         	movff	log@exponent+1,___awtoft@c+1
  1412  000D28  ECEF  F009         	call	___awtoft	;wreg free
  1413  000D2C  C009  F02C         	movff	?___awtoft,___ftmul@f1
  1414  000D30  C00A  F02D         	movff	?___awtoft+1,___ftmul@f1+1
  1415  000D34  C00B  F02E         	movff	?___awtoft+2,___ftmul@f1+2
  1416  000D38  EC36  F007         	call	___ftmul	;wreg free
  1417  000D3C  C02C  F011         	movff	?___ftmul,___ftadd@f1
  1418  000D40  C02D  F012         	movff	?___ftmul+1,___ftadd@f1+1
  1419  000D44  C02E  F013         	movff	?___ftmul+2,___ftadd@f1+2
  1420  000D48  C047  F014         	movff	log@x,___ftadd@f2
  1421  000D4C  C048  F015         	movff	log@x+1,___ftadd@f2+1
  1422  000D50  C049  F016         	movff	log@x+2,___ftadd@f2+2
  1423  000D54  EC40  F005         	call	___ftadd	;wreg free
  1424  000D58  C011  F047         	movff	?___ftadd,?_log
  1425  000D5C  C012  F048         	movff	?___ftadd+1,?_log+1
  1426  000D60  C013  F049         	movff	?___ftadd+2,?_log+2
  1427  000D64  0012               	return	
  1428  000D66                     __end_of_log:
  1429                           	opt stack 0
  1430                           tblptru	equ	0xFF8
  1431                           tblptrh	equ	0xFF7
  1432                           tblptrl	equ	0xFF6
  1433                           tablat	equ	0xFF5
  1434                           status	equ	0xFD8
  1435                           
  1436 ;; *************** function _frexp *****************
  1437 ;; Defined at:
  1438 ;;		line 254 in file "/opt/microchip/xc8/v1.31/sources/common/frexp.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  value           3    0[COMRAM] int 
  1441 ;;  eptr            2    3[COMRAM] PTR int 
  1442 ;;		 -> log@exponent(2), 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  3    0[COMRAM] PTR int 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1454 ;;      Params:         5       0       0       0       0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1456 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1457 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1458 ;;Total ram usage:        8 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_log
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text6
  1468  0012BA                     __ptext6:
  1469                           	opt stack 0
  1470  0012BA                     _frexp:
  1471                           	opt stack 27
  1472                           
  1473                           ;incstack = 0
  1474  0012BA  0E7F               	movlw	127
  1475  0012BC  1403               	andwf	frexp@value+2,w,c
  1476  0012BE  1002               	iorwf	frexp@value+1,w,c
  1477  0012C0  1001               	iorwf	frexp@value,w,c
  1478  0012C2  A4D8               	btfss	status,2,c
  1479  0012C4  D00F               	goto	l1998
  1480  0012C6  C004  FFD9         	movff	frexp@eptr,fsr2l
  1481  0012CA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1482  0012CE  0E00               	movlw	0
  1483  0012D0  6EDE               	movwf	postinc2,c
  1484  0012D2  0E00               	movlw	0
  1485  0012D4  6EDD               	movwf	postdec2,c
  1486  0012D6  0E00               	movlw	0
  1487  0012D8  6E01               	movwf	?_frexp,c
  1488  0012DA  0E00               	movlw	0
  1489  0012DC  6E02               	movwf	?_frexp+1,c
  1490  0012DE  0E00               	movlw	0
  1491  0012E0  6E03               	movwf	?_frexp+2,c
  1492  0012E2  0012               	return	
  1493  0012E4                     l1998:
  1494  0012E4  5003               	movf	frexp@value+2,w,c
  1495  0012E6  0B7F               	andlw	127
  1496  0012E8  6E06               	movwf	??_frexp& (0+255),c
  1497  0012EA  90D8               	bcf	status,0,c
  1498  0012EC  3406               	rlcf	??_frexp,w,c
  1499  0012EE  6E07               	movwf	(??_frexp+1)& (0+255),c
  1500  0012F0  6A08               	clrf	(??_frexp+2)& (0+255),c
  1501  0012F2  3608               	rlcf	(??_frexp+2)& (0+255),f,c
  1502  0012F4  C004  FFD9         	movff	frexp@eptr,fsr2l
  1503  0012F8  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1504  0012FC  C007  FFDE         	movff	??_frexp+1,postinc2
  1505  001300  C008  FFDD         	movff	??_frexp+2,postdec2
  1506  001304  AE02               	btfss	frexp@value+1,7,c
  1507  001306  D003               	goto	u980
  1508  001308  6A06               	clrf	??_frexp& (0+255),c
  1509  00130A  2A06               	incf	??_frexp& (0+255),f,c
  1510  00130C  D001               	goto	u988
  1511  00130E                     u980:
  1512  00130E  6A06               	clrf	??_frexp& (0+255),c
  1513  001310                     u988:
  1514  001310  5006               	movf	??_frexp,w,c
  1515  001312  C004  FFD9         	movff	frexp@eptr,fsr2l
  1516  001316  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1517  00131A  12DE               	iorwf	postinc2,f,c
  1518  00131C  0E00               	movlw	0
  1519  00131E  12DD               	iorwf	postdec2,f,c
  1520  001320  C004  FFD9         	movff	frexp@eptr,fsr2l
  1521  001324  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1522  001328  0E82               	movlw	130
  1523  00132A  26DE               	addwf	postinc2,f,c
  1524  00132C  0EFF               	movlw	255
  1525  00132E  22DD               	addwfc	postdec2,f,c
  1526  001330  8003               	bsf	frexp@value+2,0,c
  1527  001332  8203               	bsf	frexp@value+2,1,c
  1528  001334  8403               	bsf	frexp@value+2,2,c
  1529  001336  8603               	bsf	frexp@value+2,3,c
  1530  001338  8803               	bsf	frexp@value+2,4,c
  1531  00133A  8A03               	bsf	frexp@value+2,5,c
  1532  00133C  9C03               	bcf	frexp@value+2,6,c
  1533  00133E  9E02               	bcf	frexp@value+1,7,c
  1534  001340  C001  F001         	movff	frexp@value,?_frexp
  1535  001344  C002  F002         	movff	frexp@value+1,?_frexp+1
  1536  001348  C003  F003         	movff	frexp@value+2,?_frexp+2
  1537  00134C  0012               	return	
  1538  00134E                     __end_of_frexp:
  1539                           	opt stack 0
  1540                           tblptru	equ	0xFF8
  1541                           tblptrh	equ	0xFF7
  1542                           tblptrl	equ	0xFF6
  1543                           tablat	equ	0xFF5
  1544                           postinc2	equ	0xFDE
  1545                           postdec2	equ	0xFDD
  1546                           fsr2h	equ	0xFDA
  1547                           fsr2l	equ	0xFD9
  1548                           status	equ	0xFD8
  1549                           
  1550 ;; *************** function _eval_poly *****************
  1551 ;; Defined at:
  1552 ;;		line 4 in file "/opt/microchip/xc8/v1.31/sources/common/evalpoly.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  x               3   58[COMRAM] PTR int 
  1555 ;;  d               2   61[COMRAM] PTR const 
  1556 ;;		 -> log@coeff(27), 
  1557 ;;  n               2   63[COMRAM] int 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  res             3   67[COMRAM] int 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  3   58[COMRAM] int 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1569 ;;      Params:         7       0       0       0       0       0       0       0       0
  1570 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1571 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1572 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1573 ;;Total ram usage:       12 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:    2
  1576 ;; This function calls:
  1577 ;;		___ftadd
  1578 ;;		___ftmul
  1579 ;;		___wmul
  1580 ;; This function is called by:
  1581 ;;		_log
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text7
  1586  001140                     __ptext7:
  1587                           	opt stack 0
  1588  001140                     _eval_poly:
  1589                           	opt stack 25
  1590                           
  1591                           ;incstack = 0
  1592  001140  C040  F001         	movff	eval_poly@n,___wmul@multiplier
  1593  001144  C041  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  1594  001148  0E00               	movlw	0
  1595  00114A  6E04               	movwf	___wmul@multiplicand+1,c
  1596  00114C  0E03               	movlw	3
  1597  00114E  6E03               	movwf	___wmul@multiplicand,c
  1598  001150  EC39  F00A         	call	___wmul	;wreg free
  1599  001154  C03E  F042         	movff	eval_poly@d,??_eval_poly
  1600  001158  C03F  F043         	movff	eval_poly@d+1,??_eval_poly+1
  1601  00115C  5001               	movf	?___wmul,w,c
  1602  00115E  2642               	addwf	??_eval_poly,f,c
  1603  001160  5002               	movf	?___wmul+1,w,c
  1604  001162  2243               	addwfc	??_eval_poly+1,f,c
  1605  001164  C042  FFF6         	movff	??_eval_poly,tblptrl
  1606  001168  C043  FFF7         	movff	??_eval_poly+1,tblptrh
  1607  00116C  0009               	tblrd		*+
  1608  00116E  CFF5 F044          	movff	tablat,eval_poly@res
  1609  001172  0009               	tblrd		*+
  1610  001174  CFF5 F045          	movff	tablat,eval_poly@res+1
  1611  001178  000A               	tblrd		*-
  1612  00117A  CFF5 F046          	movff	tablat,eval_poly@res+2
  1613  00117E  D03E               	goto	l2014
  1614  001180                     l2012:
  1615  001180  C044  F02F         	movff	eval_poly@res,___ftmul@f2
  1616  001184  C045  F030         	movff	eval_poly@res+1,___ftmul@f2+1
  1617  001188  C046  F031         	movff	eval_poly@res+2,___ftmul@f2+2
  1618  00118C  C03B  F02C         	movff	eval_poly@x,___ftmul@f1
  1619  001190  C03C  F02D         	movff	eval_poly@x+1,___ftmul@f1+1
  1620  001194  C03D  F02E         	movff	eval_poly@x+2,___ftmul@f1+2
  1621  001198  EC36  F007         	call	___ftmul	;wreg free
  1622  00119C  C02C  F011         	movff	?___ftmul,___ftadd@f1
  1623  0011A0  C02D  F012         	movff	?___ftmul+1,___ftadd@f1+1
  1624  0011A4  C02E  F013         	movff	?___ftmul+2,___ftadd@f1+2
  1625  0011A8  0E00               	movlw	0
  1626  0011AA  6E04               	movwf	___wmul@multiplicand+1,c
  1627  0011AC  0E03               	movlw	3
  1628  0011AE  6E03               	movwf	___wmul@multiplicand,c
  1629  0011B0  0640               	decf	eval_poly@n,f,c
  1630  0011B2  A0D8               	btfss	status,0,c
  1631  0011B4  0641               	decf	eval_poly@n+1,f,c
  1632  0011B6  C040  F001         	movff	eval_poly@n,___wmul@multiplier
  1633  0011BA  C041  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  1634  0011BE  EC39  F00A         	call	___wmul	;wreg free
  1635  0011C2  C03E  F042         	movff	eval_poly@d,??_eval_poly
  1636  0011C6  C03F  F043         	movff	eval_poly@d+1,??_eval_poly+1
  1637  0011CA  5001               	movf	?___wmul,w,c
  1638  0011CC  2642               	addwf	??_eval_poly,f,c
  1639  0011CE  5002               	movf	?___wmul+1,w,c
  1640  0011D0  2243               	addwfc	??_eval_poly+1,f,c
  1641  0011D2  C042  FFF6         	movff	??_eval_poly,tblptrl
  1642  0011D6  C043  FFF7         	movff	??_eval_poly+1,tblptrh
  1643  0011DA  0009               	tblrd		*+
  1644  0011DC  CFF5 F014          	movff	tablat,___ftadd@f2
  1645  0011E0  0009               	tblrd		*+
  1646  0011E2  CFF5 F015          	movff	tablat,___ftadd@f2+1
  1647  0011E6  000A               	tblrd		*-
  1648  0011E8  CFF5 F016          	movff	tablat,___ftadd@f2+2
  1649  0011EC  EC40  F005         	call	___ftadd	;wreg free
  1650  0011F0  C011  F044         	movff	?___ftadd,eval_poly@res
  1651  0011F4  C012  F045         	movff	?___ftadd+1,eval_poly@res+1
  1652  0011F8  C013  F046         	movff	?___ftadd+2,eval_poly@res+2
  1653  0011FC                     l2014:
  1654  0011FC  5041               	movf	eval_poly@n+1,w,c
  1655  0011FE  1040               	iorwf	eval_poly@n,w,c
  1656  001200  A4D8               	btfss	status,2,c
  1657  001202  D7BE               	goto	l2012
  1658  001204  C044  F03B         	movff	eval_poly@res,?_eval_poly
  1659  001208  C045  F03C         	movff	eval_poly@res+1,?_eval_poly+1
  1660  00120C  C046  F03D         	movff	eval_poly@res+2,?_eval_poly+2
  1661  001210  0012               	return	
  1662  001212                     __end_of_eval_poly:
  1663                           	opt stack 0
  1664                           tblptru	equ	0xFF8
  1665                           tblptrh	equ	0xFF7
  1666                           tblptrl	equ	0xFF6
  1667                           tablat	equ	0xFF5
  1668                           postinc2	equ	0xFDE
  1669                           postdec2	equ	0xFDD
  1670                           fsr2h	equ	0xFDA
  1671                           fsr2l	equ	0xFD9
  1672                           status	equ	0xFD8
  1673                           
  1674 ;; *************** function ___wmul *****************
  1675 ;; Defined at:
  1676 ;;		line 3 in file "/opt/microchip/xc8/v1.31/sources/common/wmul.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  multiplier      2    0[COMRAM] unsigned int 
  1679 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  product         2    4[COMRAM] unsigned int 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  2    0[COMRAM] unsigned int 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0, prodl, prodh
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1691 ;;      Params:         4       0       0       0       0       0       0       0       0
  1692 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1694 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1695 ;;Total ram usage:        6 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_get_temperature
  1701 ;;		_eval_poly
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text8
  1706  001472                     __ptext8:
  1707                           	opt stack 0
  1708  001472                     ___wmul:
  1709                           	opt stack 26
  1710                           
  1711                           ;incstack = 0
  1712  001472  5001               	movf	___wmul@multiplier,w,c
  1713  001474  0203               	mulwf	___wmul@multiplicand,c
  1714  001476  CFF3 F005          	movff	prodl,___wmul@product
  1715  00147A  CFF4 F006          	movff	prodh,___wmul@product+1
  1716  00147E  5001               	movf	___wmul@multiplier,w,c
  1717  001480  0204               	mulwf	___wmul@multiplicand+1,c
  1718  001482  CFF3 FFF4          	movff	prodl,prodh
  1719  001486  6AF3               	clrf	prodl,c
  1720  001488  50F3               	movf	prodl,w,c
  1721  00148A  2605               	addwf	___wmul@product,f,c
  1722  00148C  50F4               	movf	prodh,w,c
  1723  00148E  2206               	addwfc	___wmul@product+1,f,c
  1724  001490  5002               	movf	___wmul@multiplier+1,w,c
  1725  001492  0203               	mulwf	___wmul@multiplicand,c
  1726  001494  CFF3 FFF4          	movff	prodl,prodh
  1727  001498  6AF3               	clrf	prodl,c
  1728  00149A  50F3               	movf	prodl,w,c
  1729  00149C  2605               	addwf	___wmul@product,f,c
  1730  00149E  50F4               	movf	prodh,w,c
  1731  0014A0  2206               	addwfc	___wmul@product+1,f,c
  1732  0014A2  C005  F001         	movff	___wmul@product,?___wmul
  1733  0014A6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1734  0014AA  0012               	return	
  1735  0014AC                     __end_of___wmul:
  1736                           	opt stack 0
  1737                           tblptru	equ	0xFF8
  1738                           tblptrh	equ	0xFF7
  1739                           tblptrl	equ	0xFF6
  1740                           tablat	equ	0xFF5
  1741                           prodh	equ	0xFF4
  1742                           prodl	equ	0xFF3
  1743                           postinc2	equ	0xFDE
  1744                           postdec2	equ	0xFDD
  1745                           fsr2h	equ	0xFDA
  1746                           fsr2l	equ	0xFD9
  1747                           status	equ	0xFD8
  1748                           
  1749 ;; *************** function ___ftmul *****************
  1750 ;; Defined at:
  1751 ;;		line 51 in file "/opt/microchip/xc8/v1.31/sources/common/ftmul.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  f1              3   43[COMRAM] float 
  1754 ;;  f2              3   46[COMRAM] float 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  f3_as_produc    3   53[COMRAM] unsigned um
  1757 ;;  sign            1   57[COMRAM] unsigned char 
  1758 ;;  cntr            1   56[COMRAM] unsigned char 
  1759 ;;  exp             1   52[COMRAM] unsigned char 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  3   43[COMRAM] float 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1769 ;;      Params:         6       0       0       0       0       0       0       0       0
  1770 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1771 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1772 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1773 ;;Total ram usage:       15 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    1
  1776 ;; This function calls:
  1777 ;;		___ftpack
  1778 ;; This function is called by:
  1779 ;;		_get_temperature
  1780 ;;		_set_fan_speed
  1781 ;;		_log
  1782 ;;		_eval_poly
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text9
  1787  000E6C                     __ptext9:
  1788                           	opt stack 0
  1789  000E6C                     ___ftmul:
  1790                           	opt stack 27
  1791                           
  1792                           ;incstack = 0
  1793  000E6C  C02E  F032         	movff	___ftmul@f1+2,??___ftmul
  1794  000E70  6A33               	clrf	(??___ftmul+1)& (0+255),c
  1795  000E72  6A34               	clrf	(??___ftmul+2)& (0+255),c
  1796  000E74  342D               	rlcf	___ftmul@f1+1,w,c
  1797  000E76  3632               	rlcf	??___ftmul& (0+255),f,c
  1798  000E78  E301               	bnc	u901
  1799  000E7A  8033               	bsf	(??___ftmul+1)& (0+255),0,c
  1800  000E7C                     u901:
  1801  000E7C  5032               	movf	??___ftmul,w,c
  1802  000E7E  6E35               	movwf	___ftmul@exp,c
  1803  000E80  6635               	tstfsz	___ftmul@exp& (0+255),c
  1804  000E82  D007               	goto	l1930
  1805  000E84  0E00               	movlw	0
  1806  000E86  6E2C               	movwf	?___ftmul,c
  1807  000E88  0E00               	movlw	0
  1808  000E8A  6E2D               	movwf	?___ftmul+1,c
  1809  000E8C  0E00               	movlw	0
  1810  000E8E  6E2E               	movwf	?___ftmul+2,c
  1811  000E90  0012               	return	
  1812  000E92                     l1930:
  1813  000E92  C031  F032         	movff	___ftmul@f2+2,??___ftmul
  1814  000E96  6A33               	clrf	(??___ftmul+1)& (0+255),c
  1815  000E98  6A34               	clrf	(??___ftmul+2)& (0+255),c
  1816  000E9A  3430               	rlcf	___ftmul@f2+1,w,c
  1817  000E9C  3632               	rlcf	??___ftmul& (0+255),f,c
  1818  000E9E  E301               	bnc	u921
  1819  000EA0  8033               	bsf	(??___ftmul+1)& (0+255),0,c
  1820  000EA2                     u921:
  1821  000EA2  5032               	movf	??___ftmul,w,c
  1822  000EA4  6E3A               	movwf	___ftmul@sign,c
  1823  000EA6  663A               	tstfsz	___ftmul@sign& (0+255),c
  1824  000EA8  D007               	goto	l1936
  1825  000EAA  0E00               	movlw	0
  1826  000EAC  6E2C               	movwf	?___ftmul,c
  1827  000EAE  0E00               	movlw	0
  1828  000EB0  6E2D               	movwf	?___ftmul+1,c
  1829  000EB2  0E00               	movlw	0
  1830  000EB4  6E2E               	movwf	?___ftmul+2,c
  1831  000EB6  0012               	return	
  1832  000EB8                     l1936:
  1833  000EB8  503A               	movf	___ftmul@sign,w,c
  1834  000EBA  0F7B               	addlw	123
  1835  000EBC  2635               	addwf	___ftmul@exp,f,c
  1836  000EBE  C02E  F03A         	movff	___ftmul@f1+2,___ftmul@sign
  1837  000EC2  5031               	movf	___ftmul@f2+2,w,c
  1838  000EC4  1A3A               	xorwf	___ftmul@sign,f,c
  1839  000EC6  0E80               	movlw	128
  1840  000EC8  163A               	andwf	___ftmul@sign,f,c
  1841  000ECA  8E2D               	bsf	___ftmul@f1+1,7,c
  1842  000ECC  8E30               	bsf	___ftmul@f2+1,7,c
  1843  000ECE  0EFF               	movlw	255
  1844  000ED0  162F               	andwf	___ftmul@f2,f,c
  1845  000ED2  0EFF               	movlw	255
  1846  000ED4  1630               	andwf	___ftmul@f2+1,f,c
  1847  000ED6  0E00               	movlw	0
  1848  000ED8  1631               	andwf	___ftmul@f2+2,f,c
  1849  000EDA  0E00               	movlw	0
  1850  000EDC  6E36               	movwf	___ftmul@f3_as_product,c
  1851  000EDE  0E00               	movlw	0
  1852  000EE0  6E37               	movwf	___ftmul@f3_as_product+1,c
  1853  000EE2  0E00               	movlw	0
  1854  000EE4  6E38               	movwf	___ftmul@f3_as_product+2,c
  1855  000EE6  6E32               	movwf	??___ftmul& (0+255),c
  1856  000EE8  0E07               	movlw	7
  1857  000EEA  6E39               	movwf	___ftmul@cntr,c
  1858  000EEC  5032               	movf	??___ftmul& (0+255),w,c
  1859  000EEE                     l1950:
  1860  000EEE  A02C               	btfss	___ftmul@f1,0,c
  1861  000EF0  D006               	goto	l1954
  1862  000EF2  502F               	movf	___ftmul@f2,w,c
  1863  000EF4  2636               	addwf	___ftmul@f3_as_product,f,c
  1864  000EF6  5030               	movf	___ftmul@f2+1,w,c
  1865  000EF8  2237               	addwfc	___ftmul@f3_as_product+1,f,c
  1866  000EFA  5031               	movf	___ftmul@f2+2,w,c
  1867  000EFC  2238               	addwfc	___ftmul@f3_as_product+2,f,c
  1868  000EFE                     l1954:
  1869  000EFE  90D8               	bcf	status,0,c
  1870  000F00  322E               	rrcf	___ftmul@f1+2,f,c
  1871  000F02  322D               	rrcf	___ftmul@f1+1,f,c
  1872  000F04  322C               	rrcf	___ftmul@f1,f,c
  1873  000F06  90D8               	bcf	status,0,c
  1874  000F08  362F               	rlcf	___ftmul@f2,f,c
  1875  000F0A  3630               	rlcf	___ftmul@f2+1,f,c
  1876  000F0C  3631               	rlcf	___ftmul@f2+2,f,c
  1877  000F0E  2E39               	decfsz	___ftmul@cntr,f,c
  1878  000F10  D7EE               	goto	l1950
  1879  000F12  6E32               	movwf	??___ftmul& (0+255),c
  1880  000F14  0E09               	movlw	9
  1881  000F16  6E39               	movwf	___ftmul@cntr,c
  1882  000F18  5032               	movf	??___ftmul& (0+255),w,c
  1883  000F1A                     l1960:
  1884  000F1A  A02C               	btfss	___ftmul@f1,0,c
  1885  000F1C  D006               	goto	l1964
  1886  000F1E  502F               	movf	___ftmul@f2,w,c
  1887  000F20  2636               	addwf	___ftmul@f3_as_product,f,c
  1888  000F22  5030               	movf	___ftmul@f2+1,w,c
  1889  000F24  2237               	addwfc	___ftmul@f3_as_product+1,f,c
  1890  000F26  5031               	movf	___ftmul@f2+2,w,c
  1891  000F28  2238               	addwfc	___ftmul@f3_as_product+2,f,c
  1892  000F2A                     l1964:
  1893  000F2A  90D8               	bcf	status,0,c
  1894  000F2C  322E               	rrcf	___ftmul@f1+2,f,c
  1895  000F2E  322D               	rrcf	___ftmul@f1+1,f,c
  1896  000F30  322C               	rrcf	___ftmul@f1,f,c
  1897  000F32  90D8               	bcf	status,0,c
  1898  000F34  3238               	rrcf	___ftmul@f3_as_product+2,f,c
  1899  000F36  3237               	rrcf	___ftmul@f3_as_product+1,f,c
  1900  000F38  3236               	rrcf	___ftmul@f3_as_product,f,c
  1901  000F3A  2E39               	decfsz	___ftmul@cntr,f,c
  1902  000F3C  D7EE               	goto	l1960
  1903  000F3E  C036  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1904  000F42  C037  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1905  000F46  C038  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1906  000F4A  C035  F004         	movff	___ftmul@exp,___ftpack@exp
  1907  000F4E  C03A  F005         	movff	___ftmul@sign,___ftpack@sign
  1908  000F52  EC09  F009         	call	___ftpack	;wreg free
  1909  000F56  C001  F02C         	movff	?___ftpack,?___ftmul
  1910  000F5A  C002  F02D         	movff	?___ftpack+1,?___ftmul+1
  1911  000F5E  C003  F02E         	movff	?___ftpack+2,?___ftmul+2
  1912  000F62  0012               	return	
  1913  000F64                     __end_of___ftmul:
  1914                           	opt stack 0
  1915                           tblptru	equ	0xFF8
  1916                           tblptrh	equ	0xFF7
  1917                           tblptrl	equ	0xFF6
  1918                           tablat	equ	0xFF5
  1919                           prodh	equ	0xFF4
  1920                           prodl	equ	0xFF3
  1921                           postinc2	equ	0xFDE
  1922                           postdec2	equ	0xFDD
  1923                           fsr2h	equ	0xFDA
  1924                           fsr2l	equ	0xFD9
  1925                           status	equ	0xFD8
  1926                           
  1927 ;; *************** function ___ftadd *****************
  1928 ;; Defined at:
  1929 ;;		line 86 in file "/opt/microchip/xc8/v1.31/sources/common/ftadd.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  f1              3   16[COMRAM] float 
  1932 ;;  f2              3   19[COMRAM] float 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  exp1            1   27[COMRAM] unsigned char 
  1935 ;;  exp2            1   26[COMRAM] unsigned char 
  1936 ;;  sign            1   25[COMRAM] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  3   16[COMRAM] float 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1946 ;;      Params:         6       0       0       0       0       0       0       0       0
  1947 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1948 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1949 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1950 ;;Total ram usage:       12 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    1
  1953 ;; This function calls:
  1954 ;;		___ftpack
  1955 ;; This function is called by:
  1956 ;;		_get_temperature
  1957 ;;		_log
  1958 ;;		_eval_poly
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text10
  1963  000A80                     __ptext10:
  1964                           	opt stack 0
  1965  000A80                     ___ftadd:
  1966                           	opt stack 25
  1967                           
  1968                           ;incstack = 0
  1969  000A80  C013  F017         	movff	___ftadd@f1+2,??___ftadd
  1970  000A84  6A18               	clrf	(??___ftadd+1)& (0+255),c
  1971  000A86  6A19               	clrf	(??___ftadd+2)& (0+255),c
  1972  000A88  3412               	rlcf	___ftadd@f1+1,w,c
  1973  000A8A  3617               	rlcf	??___ftadd& (0+255),f,c
  1974  000A8C  E301               	bnc	u691
  1975  000A8E  8018               	bsf	(??___ftadd+1)& (0+255),0,c
  1976  000A90                     u691:
  1977  000A90  5017               	movf	??___ftadd,w,c
  1978  000A92  6E1C               	movwf	___ftadd@exp1,c
  1979  000A94  C016  F017         	movff	___ftadd@f2+2,??___ftadd
  1980  000A98  6A18               	clrf	(??___ftadd+1)& (0+255),c
  1981  000A9A  6A19               	clrf	(??___ftadd+2)& (0+255),c
  1982  000A9C  3415               	rlcf	___ftadd@f2+1,w,c
  1983  000A9E  3617               	rlcf	??___ftadd& (0+255),f,c
  1984  000AA0  E301               	bnc	u701
  1985  000AA2  8018               	bsf	(??___ftadd+1)& (0+255),0,c
  1986  000AA4                     u701:
  1987  000AA4  5017               	movf	??___ftadd,w,c
  1988  000AA6  6E1B               	movwf	___ftadd@exp2,c
  1989  000AA8  501C               	movf	___ftadd@exp1,w,c
  1990  000AAA  B4D8               	btfsc	status,2,c
  1991  000AAC  D00C               	goto	l411
  1992  000AAE  501B               	movf	___ftadd@exp2,w,c
  1993  000AB0  5C1C               	subwf	___ftadd@exp1,w,c
  1994  000AB2  B0D8               	btfsc	status,0,c
  1995  000AB4  D00F               	goto	l1862
  1996  000AB6  501C               	movf	___ftadd@exp1,w,c
  1997  000AB8  0800               	sublw	0
  1998  000ABA  241B               	addwf	___ftadd@exp2,w,c
  1999  000ABC  6E17               	movwf	??___ftadd& (0+255),c
  2000  000ABE  0E19               	movlw	25
  2001  000AC0  5C17               	subwf	??___ftadd,w,c
  2002  000AC2  A0D8               	btfss	status,0,c
  2003  000AC4  D007               	goto	l1862
  2004  000AC6                     l411:
  2005  000AC6  C014  F011         	movff	___ftadd@f2,?___ftadd
  2006  000ACA  C015  F012         	movff	___ftadd@f2+1,?___ftadd+1
  2007  000ACE  C016  F013         	movff	___ftadd@f2+2,?___ftadd+2
  2008  000AD2  0012               	return	
  2009  000AD4                     l1862:
  2010  000AD4  501B               	movf	___ftadd@exp2,w,c
  2011  000AD6  B4D8               	btfsc	status,2,c
  2012  000AD8  D00C               	goto	l415
  2013  000ADA  501C               	movf	___ftadd@exp1,w,c
  2014  000ADC  5C1B               	subwf	___ftadd@exp2,w,c
  2015  000ADE  B0D8               	btfsc	status,0,c
  2016  000AE0  D00F               	goto	l1868
  2017  000AE2  501B               	movf	___ftadd@exp2,w,c
  2018  000AE4  0800               	sublw	0
  2019  000AE6  241C               	addwf	___ftadd@exp1,w,c
  2020  000AE8  6E17               	movwf	??___ftadd& (0+255),c
  2021  000AEA  0E19               	movlw	25
  2022  000AEC  5C17               	subwf	??___ftadd,w,c
  2023  000AEE  A0D8               	btfss	status,0,c
  2024  000AF0  D007               	goto	l1868
  2025  000AF2                     l415:
  2026  000AF2  C011  F011         	movff	___ftadd@f1,?___ftadd
  2027  000AF6  C012  F012         	movff	___ftadd@f1+1,?___ftadd+1
  2028  000AFA  C013  F013         	movff	___ftadd@f1+2,?___ftadd+2
  2029  000AFE  0012               	return	
  2030  000B00                     l1868:
  2031  000B00  6E17               	movwf	??___ftadd& (0+255),c
  2032  000B02  0E06               	movlw	6
  2033  000B04  6E1A               	movwf	___ftadd@sign,c
  2034  000B06  5017               	movf	??___ftadd& (0+255),w,c
  2035  000B08  BE13               	btfsc	___ftadd@f1+2,7,c
  2036  000B0A  8E1A               	bsf	___ftadd@sign,7,c
  2037  000B0C  BE16               	btfsc	___ftadd@f2+2,7,c
  2038  000B0E  8C1A               	bsf	___ftadd@sign,6,c
  2039  000B10  8E12               	bsf	___ftadd@f1+1,7,c
  2040  000B12  0EFF               	movlw	255
  2041  000B14  1611               	andwf	___ftadd@f1,f,c
  2042  000B16  0EFF               	movlw	255
  2043  000B18  1612               	andwf	___ftadd@f1+1,f,c
  2044  000B1A  0E00               	movlw	0
  2045  000B1C  1613               	andwf	___ftadd@f1+2,f,c
  2046  000B1E  8E15               	bsf	___ftadd@f2+1,7,c
  2047  000B20  0EFF               	movlw	255
  2048  000B22  1614               	andwf	___ftadd@f2,f,c
  2049  000B24  0EFF               	movlw	255
  2050  000B26  1615               	andwf	___ftadd@f2+1,f,c
  2051  000B28  0E00               	movlw	0
  2052  000B2A  1616               	andwf	___ftadd@f2+2,f,c
  2053  000B2C  501B               	movf	___ftadd@exp2,w,c
  2054  000B2E  5C1C               	subwf	___ftadd@exp1,w,c
  2055  000B30  B0D8               	btfsc	status,0,c
  2056  000B32  D01A               	goto	l1894
  2057  000B34                     l1884:
  2058  000B34  90D8               	bcf	status,0,c
  2059  000B36  3614               	rlcf	___ftadd@f2,f,c
  2060  000B38  3615               	rlcf	___ftadd@f2+1,f,c
  2061  000B3A  3616               	rlcf	___ftadd@f2+2,f,c
  2062  000B3C  061B               	decf	___ftadd@exp2,f,c
  2063  000B3E  501B               	movf	___ftadd@exp2,w,c
  2064  000B40  181C               	xorwf	___ftadd@exp1,w,c
  2065  000B42  B4D8               	btfsc	status,2,c
  2066  000B44  D00D               	goto	l1892
  2067  000B46  061A               	decf	___ftadd@sign,f,c
  2068  000B48  C01A  F017         	movff	___ftadd@sign,??___ftadd
  2069  000B4C  0E07               	movlw	7
  2070  000B4E  1617               	andwf	??___ftadd,f,c
  2071  000B50  B4D8               	btfsc	status,2,c
  2072  000B52  D006               	goto	l1892
  2073  000B54  D7EF               	goto	l1884
  2074  000B56                     l1890:
  2075  000B56  90D8               	bcf	status,0,c
  2076  000B58  3213               	rrcf	___ftadd@f1+2,f,c
  2077  000B5A  3212               	rrcf	___ftadd@f1+1,f,c
  2078  000B5C  3211               	rrcf	___ftadd@f1,f,c
  2079  000B5E  2A1C               	incf	___ftadd@exp1,f,c
  2080  000B60                     l1892:
  2081  000B60  501B               	movf	___ftadd@exp2,w,c
  2082  000B62  621C               	cpfseq	___ftadd@exp1,c
  2083  000B64  D7F8               	goto	l1890
  2084  000B66  D01D               	goto	l426
  2085  000B68                     l1894:
  2086  000B68  501C               	movf	___ftadd@exp1,w,c
  2087  000B6A  5C1B               	subwf	___ftadd@exp2,w,c
  2088  000B6C  B0D8               	btfsc	status,0,c
  2089  000B6E  D019               	goto	l426
  2090  000B70                     l1896:
  2091  000B70  90D8               	bcf	status,0,c
  2092  000B72  3611               	rlcf	___ftadd@f1,f,c
  2093  000B74  3612               	rlcf	___ftadd@f1+1,f,c
  2094  000B76  3613               	rlcf	___ftadd@f1+2,f,c
  2095  000B78  061C               	decf	___ftadd@exp1,f,c
  2096  000B7A  501B               	movf	___ftadd@exp2,w,c
  2097  000B7C  181C               	xorwf	___ftadd@exp1,w,c
  2098  000B7E  B4D8               	btfsc	status,2,c
  2099  000B80  D00D               	goto	l1904
  2100  000B82  061A               	decf	___ftadd@sign,f,c
  2101  000B84  C01A  F017         	movff	___ftadd@sign,??___ftadd
  2102  000B88  0E07               	movlw	7
  2103  000B8A  1617               	andwf	??___ftadd,f,c
  2104  000B8C  B4D8               	btfsc	status,2,c
  2105  000B8E  D006               	goto	l1904
  2106  000B90  D7EF               	goto	l1896
  2107  000B92                     l1902:
  2108  000B92  90D8               	bcf	status,0,c
  2109  000B94  3216               	rrcf	___ftadd@f2+2,f,c
  2110  000B96  3215               	rrcf	___ftadd@f2+1,f,c
  2111  000B98  3214               	rrcf	___ftadd@f2,f,c
  2112  000B9A  2A1B               	incf	___ftadd@exp2,f,c
  2113  000B9C                     l1904:
  2114  000B9C  501B               	movf	___ftadd@exp2,w,c
  2115  000B9E  621C               	cpfseq	___ftadd@exp1,c
  2116  000BA0  D7F8               	goto	l1902
  2117  000BA2                     l426:
  2118  000BA2  AE1A               	btfss	___ftadd@sign,7,c
  2119  000BA4  D00C               	goto	l435
  2120  000BA6  0EFF               	movlw	255
  2121  000BA8  1A11               	xorwf	___ftadd@f1,f,c
  2122  000BAA  0EFF               	movlw	255
  2123  000BAC  1A12               	xorwf	___ftadd@f1+1,f,c
  2124  000BAE  0EFF               	movlw	255
  2125  000BB0  1A13               	xorwf	___ftadd@f1+2,f,c
  2126  000BB2  0E01               	movlw	1
  2127  000BB4  2611               	addwf	___ftadd@f1,f,c
  2128  000BB6  0E00               	movlw	0
  2129  000BB8  2212               	addwfc	___ftadd@f1+1,f,c
  2130  000BBA  0E00               	movlw	0
  2131  000BBC  2213               	addwfc	___ftadd@f1+2,f,c
  2132  000BBE                     l435:
  2133  000BBE  AC1A               	btfss	___ftadd@sign,6,c
  2134  000BC0  D00C               	goto	l1910
  2135  000BC2  0EFF               	movlw	255
  2136  000BC4  1A14               	xorwf	___ftadd@f2,f,c
  2137  000BC6  0EFF               	movlw	255
  2138  000BC8  1A15               	xorwf	___ftadd@f2+1,f,c
  2139  000BCA  0EFF               	movlw	255
  2140  000BCC  1A16               	xorwf	___ftadd@f2+2,f,c
  2141  000BCE  0E01               	movlw	1
  2142  000BD0  2614               	addwf	___ftadd@f2,f,c
  2143  000BD2  0E00               	movlw	0
  2144  000BD4  2215               	addwfc	___ftadd@f2+1,f,c
  2145  000BD6  0E00               	movlw	0
  2146  000BD8  2216               	addwfc	___ftadd@f2+2,f,c
  2147  000BDA                     l1910:
  2148  000BDA  6E17               	movwf	??___ftadd& (0+255),c
  2149  000BDC  0E00               	movlw	0
  2150  000BDE  6E1A               	movwf	___ftadd@sign,c
  2151  000BE0  5017               	movf	??___ftadd& (0+255),w,c
  2152  000BE2  5011               	movf	___ftadd@f1,w,c
  2153  000BE4  2614               	addwf	___ftadd@f2,f,c
  2154  000BE6  5012               	movf	___ftadd@f1+1,w,c
  2155  000BE8  2215               	addwfc	___ftadd@f2+1,f,c
  2156  000BEA  5013               	movf	___ftadd@f1+2,w,c
  2157  000BEC  2216               	addwfc	___ftadd@f2+2,f,c
  2158  000BEE  AE16               	btfss	___ftadd@f2+2,7,c
  2159  000BF0  D010               	goto	l1920
  2160  000BF2  0EFF               	movlw	255
  2161  000BF4  1A14               	xorwf	___ftadd@f2,f,c
  2162  000BF6  0EFF               	movlw	255
  2163  000BF8  1A15               	xorwf	___ftadd@f2+1,f,c
  2164  000BFA  0EFF               	movlw	255
  2165  000BFC  1A16               	xorwf	___ftadd@f2+2,f,c
  2166  000BFE  0E01               	movlw	1
  2167  000C00  2614               	addwf	___ftadd@f2,f,c
  2168  000C02  0E00               	movlw	0
  2169  000C04  2215               	addwfc	___ftadd@f2+1,f,c
  2170  000C06  0E00               	movlw	0
  2171  000C08  2216               	addwfc	___ftadd@f2+2,f,c
  2172  000C0A  6E17               	movwf	??___ftadd& (0+255),c
  2173  000C0C  0E01               	movlw	1
  2174  000C0E  6E1A               	movwf	___ftadd@sign,c
  2175  000C10  5017               	movf	??___ftadd& (0+255),w,c
  2176  000C12                     l1920:
  2177  000C12  C014  F001         	movff	___ftadd@f2,___ftpack@arg
  2178  000C16  C015  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2179  000C1A  C016  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2180  000C1E  C01C  F004         	movff	___ftadd@exp1,___ftpack@exp
  2181  000C22  C01A  F005         	movff	___ftadd@sign,___ftpack@sign
  2182  000C26  EC09  F009         	call	___ftpack	;wreg free
  2183  000C2A  C001  F011         	movff	?___ftpack,?___ftadd
  2184  000C2E  C002  F012         	movff	?___ftpack+1,?___ftadd+1
  2185  000C32  C003  F013         	movff	?___ftpack+2,?___ftadd+2
  2186  000C36  0012               	return	
  2187  000C38                     __end_of___ftadd:
  2188                           	opt stack 0
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           prodh	equ	0xFF4
  2194                           prodl	equ	0xFF3
  2195                           postinc2	equ	0xFDE
  2196                           postdec2	equ	0xFDD
  2197                           fsr2h	equ	0xFDA
  2198                           fsr2l	equ	0xFD9
  2199                           status	equ	0xFD8
  2200                           
  2201 ;; *************** function ___awtoft *****************
  2202 ;; Defined at:
  2203 ;;		line 32 in file "/opt/microchip/xc8/v1.31/sources/common/awtoft.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  c               2    8[COMRAM] int 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  sign            1   12[COMRAM] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  3    8[COMRAM] float 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0, prodl, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2217 ;;      Params:         3       0       0       0       0       0       0       0       0
  2218 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2219 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2220 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2221 ;;Total ram usage:        5 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    1
  2224 ;; This function calls:
  2225 ;;		___ftpack
  2226 ;; This function is called by:
  2227 ;;		_set_fan_speed
  2228 ;;		_log
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text11
  2233  0013DE                     __ptext11:
  2234                           	opt stack 0
  2235  0013DE                     ___awtoft:
  2236                           	opt stack 27
  2237                           
  2238                           ;incstack = 0
  2239  0013DE  6E0C               	movwf	??___awtoft& (0+255),c
  2240  0013E0  0E00               	movlw	0
  2241  0013E2  6E0D               	movwf	___awtoft@sign,c
  2242  0013E4  500C               	movf	??___awtoft& (0+255),w,c
  2243  0013E6  500A               	movf	___awtoft@c+1,w,c
  2244  0013E8  0A80               	xorlw	128
  2245  0013EA  6EF3               	movwf	prodl,c
  2246  0013EC  0E80               	movlw	128
  2247  0013EE  5CF3               	subwf	prodl,w,c
  2248  0013F0  0E00               	movlw	0
  2249  0013F2  B4D8               	btfsc	status,2,c
  2250  0013F4  5C09               	subwf	___awtoft@c,w,c
  2251  0013F6  B0D8               	btfsc	status,0,c
  2252  0013F8  D008               	goto	l1986
  2253  0013FA  6C09               	negf	___awtoft@c,c
  2254  0013FC  1E0A               	comf	___awtoft@c+1,f,c
  2255  0013FE  B0D8               	btfsc	status,0,c
  2256  001400  2A0A               	incf	___awtoft@c+1,f,c
  2257  001402  6E0C               	movwf	??___awtoft& (0+255),c
  2258  001404  0E01               	movlw	1
  2259  001406  6E0D               	movwf	___awtoft@sign,c
  2260  001408  500C               	movf	??___awtoft& (0+255),w,c
  2261  00140A                     l1986:
  2262  00140A  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2263  00140E  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2264  001412  6A03               	clrf	___ftpack@arg+2,c
  2265  001414  6E0C               	movwf	??___awtoft& (0+255),c
  2266  001416  0E8E               	movlw	142
  2267  001418  6E04               	movwf	___ftpack@exp,c
  2268  00141A  500C               	movf	??___awtoft& (0+255),w,c
  2269  00141C  C00D  F005         	movff	___awtoft@sign,___ftpack@sign
  2270  001420  EC09  F009         	call	___ftpack	;wreg free
  2271  001424  C001  F009         	movff	?___ftpack,?___awtoft
  2272  001428  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2273  00142C  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2274  001430  0012               	return	
  2275  001432                     __end_of___awtoft:
  2276                           	opt stack 0
  2277                           tblptru	equ	0xFF8
  2278                           tblptrh	equ	0xFF7
  2279                           tblptrl	equ	0xFF6
  2280                           tablat	equ	0xFF5
  2281                           prodh	equ	0xFF4
  2282                           prodl	equ	0xFF3
  2283                           postinc2	equ	0xFDE
  2284                           postdec2	equ	0xFDD
  2285                           fsr2h	equ	0xFDA
  2286                           fsr2l	equ	0xFD9
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _adc_convert *****************
  2290 ;; Defined at:
  2291 ;;		line 12 in file "ntc_temperature.h"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  channel         2    0[COMRAM] int 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  2    0[COMRAM] unsigned int 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2305 ;;      Params:         2       0       0       0       0       0       0       0       0
  2306 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2307 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2308 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2309 ;;Total ram usage:        4 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_get_temperature
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text12
  2319  0014AC                     __ptext12:
  2320                           	opt stack 0
  2321  0014AC                     _adc_convert:
  2322                           	opt stack 28
  2323                           
  2324                           ;ntc_temperature.h: 15: ADCON0bits.CHS = channel;
  2325                           
  2326                           ;incstack = 0
  2327  0014AC  C001  F003         	movff	adc_convert@channel,??_adc_convert
  2328  0014B0  4603               	rlncf	??_adc_convert,f,c
  2329  0014B2  4603               	rlncf	??_adc_convert,f,c
  2330  0014B4  50C2               	movf	4034,w,c	;volatile
  2331  0014B6  1803               	xorwf	??_adc_convert,w,c
  2332  0014B8  0B83               	andlw	-125
  2333  0014BA  1803               	xorwf	??_adc_convert,w,c
  2334  0014BC  6EC2               	movwf	4034,c	;volatile
  2335                           
  2336                           ;ntc_temperature.h: 17: ADCON0bits.GO = 1;
  2337  0014BE  82C2               	bsf	4034,1,c	;volatile
  2338  0014C0                     l41:
  2339  0014C0  B2C2               	btfsc	4034,1,c	;volatile
  2340  0014C2  D7FE               	goto	l41
  2341                           
  2342                           ;ntc_temperature.h: 21: return(ADRESH<<8)|ADRESL;
  2343  0014C4  50C3               	movf	4035,w,c	;volatile
  2344  0014C6  CFC4 F003          	movff	4036,??_adc_convert	;volatile
  2345  0014CA  6A04               	clrf	(??_adc_convert+1)& (0+255),c
  2346  0014CC  C003  F004         	movff	??_adc_convert,??_adc_convert+1
  2347  0014D0  6A03               	clrf	??_adc_convert,c
  2348  0014D2  1003               	iorwf	??_adc_convert,w,c
  2349  0014D4  6E01               	movwf	?_adc_convert,c
  2350  0014D6  5004               	movf	??_adc_convert+1,w,c
  2351  0014D8  6E02               	movwf	?_adc_convert+1,c
  2352  0014DA  0012               	return	
  2353  0014DC                     __end_of_adc_convert:
  2354                           	opt stack 0
  2355                           tblptru	equ	0xFF8
  2356                           tblptrh	equ	0xFF7
  2357                           tblptrl	equ	0xFF6
  2358                           tablat	equ	0xFF5
  2359                           prodh	equ	0xFF4
  2360                           prodl	equ	0xFF3
  2361                           postinc2	equ	0xFDE
  2362                           postdec2	equ	0xFDD
  2363                           fsr2h	equ	0xFDA
  2364                           fsr2l	equ	0xFD9
  2365                           status	equ	0xFD8
  2366                           
  2367 ;; *************** function ___lwtoft *****************
  2368 ;; Defined at:
  2369 ;;		line 28 in file "/opt/microchip/xc8/v1.31/sources/common/lwtoft.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  c               2    8[COMRAM] unsigned int 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  3    8[COMRAM] float 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2383 ;;      Params:         3       0       0       0       0       0       0       0       0
  2384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2385 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2386 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2387 ;;Total ram usage:        5 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    1
  2390 ;; This function calls:
  2391 ;;		___ftpack
  2392 ;; This function is called by:
  2393 ;;		_get_temperature
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text13
  2398  0014DC                     __ptext13:
  2399                           	opt stack 0
  2400  0014DC                     ___lwtoft:
  2401                           	opt stack 27
  2402                           
  2403                           ;incstack = 0
  2404  0014DC  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  2405  0014E0  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  2406  0014E4  6A03               	clrf	___ftpack@arg+2,c
  2407  0014E6  6E0C               	movwf	??___lwtoft& (0+255),c
  2408  0014E8  0E8E               	movlw	142
  2409  0014EA  6E04               	movwf	___ftpack@exp,c
  2410  0014EC  500C               	movf	??___lwtoft& (0+255),w,c
  2411  0014EE  6E0D               	movwf	(??___lwtoft+1)& (0+255),c
  2412  0014F0  0E00               	movlw	0
  2413  0014F2  6E05               	movwf	___ftpack@sign,c
  2414  0014F4  500D               	movf	(??___lwtoft+1)& (0+255),w,c
  2415  0014F6  EC09  F009         	call	___ftpack	;wreg free
  2416  0014FA  C001  F009         	movff	?___ftpack,?___lwtoft
  2417  0014FE  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  2418  001502  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  2419  001506  0012               	return	
  2420  001508                     __end_of___lwtoft:
  2421                           	opt stack 0
  2422                           tblptru	equ	0xFF8
  2423                           tblptrh	equ	0xFF7
  2424                           tblptrl	equ	0xFF6
  2425                           tablat	equ	0xFF5
  2426                           prodh	equ	0xFF4
  2427                           prodl	equ	0xFF3
  2428                           postinc2	equ	0xFDE
  2429                           postdec2	equ	0xFDD
  2430                           fsr2h	equ	0xFDA
  2431                           fsr2l	equ	0xFD9
  2432                           status	equ	0xFD8
  2433                           
  2434 ;; *************** function ___ftneg *****************
  2435 ;; Defined at:
  2436 ;;		line 15 in file "/opt/microchip/xc8/v1.31/sources/common/ftneg.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  f1              3   13[COMRAM] float 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  3   13[COMRAM] float 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2450 ;;      Params:         3       0       0       0       0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2453 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2454 ;;Total ram usage:        3 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_get_temperature
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text14
  2464  001508                     __ptext14:
  2465                           	opt stack 0
  2466  001508                     ___ftneg:
  2467                           	opt stack 28
  2468                           
  2469                           ;incstack = 0
  2470  001508  0E7F               	movlw	127
  2471  00150A  1410               	andwf	___ftneg@f1+2,w,c
  2472  00150C  100F               	iorwf	___ftneg@f1+1,w,c
  2473  00150E  100E               	iorwf	___ftneg@f1,w,c
  2474  001510  B4D8               	btfsc	status,2,c
  2475  001512  D006               	goto	l468
  2476  001514  0E00               	movlw	0
  2477  001516  1A0E               	xorwf	___ftneg@f1,f,c
  2478  001518  0E00               	movlw	0
  2479  00151A  1A0F               	xorwf	___ftneg@f1+1,f,c
  2480  00151C  0E80               	movlw	128
  2481  00151E  1A10               	xorwf	___ftneg@f1+2,f,c
  2482  001520                     l468:
  2483  001520  C00E  F00E         	movff	___ftneg@f1,?___ftneg
  2484  001524  C00F  F00F         	movff	___ftneg@f1+1,?___ftneg+1
  2485  001528  C010  F010         	movff	___ftneg@f1+2,?___ftneg+2
  2486  00152C  0012               	return	
  2487  00152E                     __end_of___ftneg:
  2488                           	opt stack 0
  2489                           tblptru	equ	0xFF8
  2490                           tblptrh	equ	0xFF7
  2491                           tblptrl	equ	0xFF6
  2492                           tablat	equ	0xFF5
  2493                           prodh	equ	0xFF4
  2494                           prodl	equ	0xFF3
  2495                           postinc2	equ	0xFDE
  2496                           postdec2	equ	0xFDD
  2497                           fsr2h	equ	0xFDA
  2498                           fsr2l	equ	0xFD9
  2499                           status	equ	0xFD8
  2500                           
  2501 ;; *************** function ___ftdiv *****************
  2502 ;; Defined at:
  2503 ;;		line 49 in file "/opt/microchip/xc8/v1.31/sources/common/ftdiv.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  f1              3   28[COMRAM] float 
  2506 ;;  f2              3   31[COMRAM] float 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  f3              3   38[COMRAM] float 
  2509 ;;  sign            1   42[COMRAM] unsigned char 
  2510 ;;  exp             1   41[COMRAM] unsigned char 
  2511 ;;  cntr            1   37[COMRAM] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  3   28[COMRAM] float 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2521 ;;      Params:         6       0       0       0       0       0       0       0       0
  2522 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2523 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2524 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2525 ;;Total ram usage:       15 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    1
  2528 ;; This function calls:
  2529 ;;		___ftpack
  2530 ;; This function is called by:
  2531 ;;		_get_temperature
  2532 ;;		_set_fan_speed
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text15
  2537  00105A                     __ptext15:
  2538                           	opt stack 0
  2539  00105A                     ___ftdiv:
  2540                           	opt stack 27
  2541                           
  2542                           ;incstack = 0
  2543  00105A  C01F  F023         	movff	___ftdiv@f1+2,??___ftdiv
  2544  00105E  6A24               	clrf	(??___ftdiv+1)& (0+255),c
  2545  001060  6A25               	clrf	(??___ftdiv+2)& (0+255),c
  2546  001062  341E               	rlcf	___ftdiv@f1+1,w,c
  2547  001064  3623               	rlcf	??___ftdiv& (0+255),f,c
  2548  001066  E301               	bnc	u1031
  2549  001068  8024               	bsf	(??___ftdiv+1)& (0+255),0,c
  2550  00106A                     u1031:
  2551  00106A  5023               	movf	??___ftdiv,w,c
  2552  00106C  6E2A               	movwf	___ftdiv@exp,c
  2553  00106E  662A               	tstfsz	___ftdiv@exp& (0+255),c
  2554  001070  D007               	goto	l2052
  2555  001072  0E00               	movlw	0
  2556  001074  6E1D               	movwf	?___ftdiv,c
  2557  001076  0E00               	movlw	0
  2558  001078  6E1E               	movwf	?___ftdiv+1,c
  2559  00107A  0E00               	movlw	0
  2560  00107C  6E1F               	movwf	?___ftdiv+2,c
  2561  00107E  0012               	return	
  2562  001080                     l2052:
  2563  001080  C022  F023         	movff	___ftdiv@f2+2,??___ftdiv
  2564  001084  6A24               	clrf	(??___ftdiv+1)& (0+255),c
  2565  001086  6A25               	clrf	(??___ftdiv+2)& (0+255),c
  2566  001088  3421               	rlcf	___ftdiv@f2+1,w,c
  2567  00108A  3623               	rlcf	??___ftdiv& (0+255),f,c
  2568  00108C  E301               	bnc	u1051
  2569  00108E  8024               	bsf	(??___ftdiv+1)& (0+255),0,c
  2570  001090                     u1051:
  2571  001090  5023               	movf	??___ftdiv,w,c
  2572  001092  6E2B               	movwf	___ftdiv@sign,c
  2573  001094  662B               	tstfsz	___ftdiv@sign& (0+255),c
  2574  001096  D007               	goto	l2058
  2575  001098  0E00               	movlw	0
  2576  00109A  6E1D               	movwf	?___ftdiv,c
  2577  00109C  0E00               	movlw	0
  2578  00109E  6E1E               	movwf	?___ftdiv+1,c
  2579  0010A0  0E00               	movlw	0
  2580  0010A2  6E1F               	movwf	?___ftdiv+2,c
  2581  0010A4  0012               	return	
  2582  0010A6                     l2058:
  2583  0010A6  0E00               	movlw	0
  2584  0010A8  6E27               	movwf	___ftdiv@f3,c
  2585  0010AA  0E00               	movlw	0
  2586  0010AC  6E28               	movwf	___ftdiv@f3+1,c
  2587  0010AE  0E00               	movlw	0
  2588  0010B0  6E29               	movwf	___ftdiv@f3+2,c
  2589  0010B2  502B               	movf	___ftdiv@sign,w,c
  2590  0010B4  0F89               	addlw	137
  2591  0010B6  5E2A               	subwf	___ftdiv@exp,f,c
  2592  0010B8  C01F  F02B         	movff	___ftdiv@f1+2,___ftdiv@sign
  2593  0010BC  5022               	movf	___ftdiv@f2+2,w,c
  2594  0010BE  1A2B               	xorwf	___ftdiv@sign,f,c
  2595  0010C0  0E80               	movlw	128
  2596  0010C2  162B               	andwf	___ftdiv@sign,f,c
  2597  0010C4  8E1E               	bsf	___ftdiv@f1+1,7,c
  2598  0010C6  0EFF               	movlw	255
  2599  0010C8  161D               	andwf	___ftdiv@f1,f,c
  2600  0010CA  0EFF               	movlw	255
  2601  0010CC  161E               	andwf	___ftdiv@f1+1,f,c
  2602  0010CE  0E00               	movlw	0
  2603  0010D0  161F               	andwf	___ftdiv@f1+2,f,c
  2604  0010D2  8E21               	bsf	___ftdiv@f2+1,7,c
  2605  0010D4  0EFF               	movlw	255
  2606  0010D6  1620               	andwf	___ftdiv@f2,f,c
  2607  0010D8  0EFF               	movlw	255
  2608  0010DA  1621               	andwf	___ftdiv@f2+1,f,c
  2609  0010DC  0E00               	movlw	0
  2610  0010DE  1622               	andwf	___ftdiv@f2+2,f,c
  2611  0010E0  6E23               	movwf	??___ftdiv& (0+255),c
  2612  0010E2  0E18               	movlw	24
  2613  0010E4  6E26               	movwf	___ftdiv@cntr,c
  2614  0010E6  5023               	movf	??___ftdiv& (0+255),w,c
  2615  0010E8                     l445:
  2616  0010E8  90D8               	bcf	status,0,c
  2617  0010EA  3627               	rlcf	___ftdiv@f3,f,c
  2618  0010EC  3628               	rlcf	___ftdiv@f3+1,f,c
  2619  0010EE  3629               	rlcf	___ftdiv@f3+2,f,c
  2620  0010F0  5020               	movf	___ftdiv@f2,w,c
  2621  0010F2  5C1D               	subwf	___ftdiv@f1,w,c
  2622  0010F4  5021               	movf	___ftdiv@f2+1,w,c
  2623  0010F6  581E               	subwfb	___ftdiv@f1+1,w,c
  2624  0010F8  5022               	movf	___ftdiv@f2+2,w,c
  2625  0010FA  581F               	subwfb	___ftdiv@f1+2,w,c
  2626  0010FC  A0D8               	btfss	status,0,c
  2627  0010FE  D007               	goto	l446
  2628  001100  5020               	movf	___ftdiv@f2,w,c
  2629  001102  5E1D               	subwf	___ftdiv@f1,f,c
  2630  001104  5021               	movf	___ftdiv@f2+1,w,c
  2631  001106  5A1E               	subwfb	___ftdiv@f1+1,f,c
  2632  001108  5022               	movf	___ftdiv@f2+2,w,c
  2633  00110A  5A1F               	subwfb	___ftdiv@f1+2,f,c
  2634  00110C  8027               	bsf	___ftdiv@f3,0,c
  2635  00110E                     l446:
  2636  00110E  90D8               	bcf	status,0,c
  2637  001110  361D               	rlcf	___ftdiv@f1,f,c
  2638  001112  361E               	rlcf	___ftdiv@f1+1,f,c
  2639  001114  361F               	rlcf	___ftdiv@f1+2,f,c
  2640  001116  2E26               	decfsz	___ftdiv@cntr,f,c
  2641  001118  D7E7               	goto	l445
  2642  00111A  C027  F001         	movff	___ftdiv@f3,___ftpack@arg
  2643  00111E  C028  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2644  001122  C029  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2645  001126  C02A  F004         	movff	___ftdiv@exp,___ftpack@exp
  2646  00112A  C02B  F005         	movff	___ftdiv@sign,___ftpack@sign
  2647  00112E  EC09  F009         	call	___ftpack	;wreg free
  2648  001132  C001  F01D         	movff	?___ftpack,?___ftdiv
  2649  001136  C002  F01E         	movff	?___ftpack+1,?___ftdiv+1
  2650  00113A  C003  F01F         	movff	?___ftpack+2,?___ftdiv+2
  2651  00113E  0012               	return	
  2652  001140                     __end_of___ftdiv:
  2653                           	opt stack 0
  2654                           tblptru	equ	0xFF8
  2655                           tblptrh	equ	0xFF7
  2656                           tblptrl	equ	0xFF6
  2657                           tablat	equ	0xFF5
  2658                           prodh	equ	0xFF4
  2659                           prodl	equ	0xFF3
  2660                           postinc2	equ	0xFDE
  2661                           postdec2	equ	0xFDD
  2662                           fsr2h	equ	0xFDA
  2663                           fsr2l	equ	0xFD9
  2664                           status	equ	0xFD8
  2665                           
  2666 ;; *************** function ___ftpack *****************
  2667 ;; Defined at:
  2668 ;;		line 62 in file "/opt/microchip/xc8/v1.31/sources/common/float.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  arg             3    0[COMRAM] unsigned um
  2671 ;;  exp             1    3[COMRAM] unsigned char 
  2672 ;;  sign            1    4[COMRAM] unsigned char 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  3    0[COMRAM] float 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2684 ;;      Params:         5       0       0       0       0       0       0       0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2686 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2687 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2688 ;;Total ram usage:        8 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		___awtoft
  2694 ;;		___ftadd
  2695 ;;		___ftdiv
  2696 ;;		___ftmul
  2697 ;;		___lwtoft
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text16
  2702  001212                     __ptext16:
  2703                           	opt stack 0
  2704  001212                     ___ftpack:
  2705                           	opt stack 27
  2706                           
  2707                           ;incstack = 0
  2708  001212  5004               	movf	___ftpack@exp,w,c
  2709  001214  B4D8               	btfsc	status,2,c
  2710  001216  D005               	goto	l1824
  2711  001218  5001               	movf	___ftpack@arg,w,c
  2712  00121A  1002               	iorwf	___ftpack@arg+1,w,c
  2713  00121C  1003               	iorwf	___ftpack@arg+2,w,c
  2714  00121E  A4D8               	btfss	status,2,c
  2715  001220  D00C               	goto	l1830
  2716  001222                     l1824:
  2717  001222  0E00               	movlw	0
  2718  001224  6E01               	movwf	?___ftpack,c
  2719  001226  0E00               	movlw	0
  2720  001228  6E02               	movwf	?___ftpack+1,c
  2721  00122A  0E00               	movlw	0
  2722  00122C  6E03               	movwf	?___ftpack+2,c
  2723  00122E  0012               	return	
  2724  001230                     l1828:
  2725  001230  2A04               	incf	___ftpack@exp,f,c
  2726  001232  90D8               	bcf	status,0,c
  2727  001234  3203               	rrcf	___ftpack@arg+2,f,c
  2728  001236  3202               	rrcf	___ftpack@arg+1,f,c
  2729  001238  3201               	rrcf	___ftpack@arg,f,c
  2730  00123A                     l1830:
  2731  00123A  0E00               	movlw	0
  2732  00123C  1401               	andwf	___ftpack@arg,w,c
  2733  00123E  6E06               	movwf	??___ftpack& (0+255),c
  2734  001240  0E00               	movlw	0
  2735  001242  1402               	andwf	___ftpack@arg+1,w,c
  2736  001244  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2737  001246  0EFE               	movlw	254
  2738  001248  1403               	andwf	___ftpack@arg+2,w,c
  2739  00124A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2740  00124C  5006               	movf	??___ftpack,w,c
  2741  00124E  1007               	iorwf	??___ftpack+1,w,c
  2742  001250  1008               	iorwf	??___ftpack+2,w,c
  2743  001252  B4D8               	btfsc	status,2,c
  2744  001254  D00C               	goto	l1836
  2745  001256  D7EC               	goto	l1828
  2746  001258                     l1832:
  2747  001258  2A04               	incf	___ftpack@exp,f,c
  2748  00125A  0E01               	movlw	1
  2749  00125C  2601               	addwf	___ftpack@arg,f,c
  2750  00125E  0E00               	movlw	0
  2751  001260  2202               	addwfc	___ftpack@arg+1,f,c
  2752  001262  0E00               	movlw	0
  2753  001264  2203               	addwfc	___ftpack@arg+2,f,c
  2754  001266  90D8               	bcf	status,0,c
  2755  001268  3203               	rrcf	___ftpack@arg+2,f,c
  2756  00126A  3202               	rrcf	___ftpack@arg+1,f,c
  2757  00126C  3201               	rrcf	___ftpack@arg,f,c
  2758  00126E                     l1836:
  2759  00126E  0E00               	movlw	0
  2760  001270  1401               	andwf	___ftpack@arg,w,c
  2761  001272  6E06               	movwf	??___ftpack& (0+255),c
  2762  001274  0E00               	movlw	0
  2763  001276  1402               	andwf	___ftpack@arg+1,w,c
  2764  001278  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2765  00127A  0EFF               	movlw	255
  2766  00127C  1403               	andwf	___ftpack@arg+2,w,c
  2767  00127E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2768  001280  5006               	movf	??___ftpack,w,c
  2769  001282  1007               	iorwf	??___ftpack+1,w,c
  2770  001284  1008               	iorwf	??___ftpack+2,w,c
  2771  001286  B4D8               	btfsc	status,2,c
  2772  001288  D006               	goto	l1840
  2773  00128A  D7E6               	goto	l1832
  2774  00128C                     l1838:
  2775  00128C  0604               	decf	___ftpack@exp,f,c
  2776  00128E  90D8               	bcf	status,0,c
  2777  001290  3601               	rlcf	___ftpack@arg,f,c
  2778  001292  3602               	rlcf	___ftpack@arg+1,f,c
  2779  001294  3603               	rlcf	___ftpack@arg+2,f,c
  2780  001296                     l1840:
  2781  001296  AE02               	btfss	___ftpack@arg+1,7,c
  2782  001298  D7F9               	goto	l1838
  2783  00129A  A004               	btfss	___ftpack@exp,0,c
  2784  00129C  9E02               	bcf	___ftpack@arg+1,7,c
  2785  00129E  90D8               	bcf	status,0,c
  2786  0012A0  3204               	rrcf	___ftpack@exp,f,c
  2787  0012A2  5004               	movf	___ftpack@exp,w,c
  2788  0012A4  1203               	iorwf	___ftpack@arg+2,f,c
  2789  0012A6  5005               	movf	___ftpack@sign,w,c
  2790  0012A8  A4D8               	btfss	status,2,c
  2791  0012AA  8E03               	bsf	___ftpack@arg+2,7,c
  2792  0012AC  C001  F001         	movff	___ftpack@arg,?___ftpack
  2793  0012B0  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2794  0012B4  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2795  0012B8  0012               	return	
  2796  0012BA                     __end_of___ftpack:
  2797                           	opt stack 0
  2798                           tblptru	equ	0xFF8
  2799                           tblptrh	equ	0xFF7
  2800                           tblptrl	equ	0xFF6
  2801                           tablat	equ	0xFF5
  2802                           prodh	equ	0xFF4
  2803                           prodl	equ	0xFF3
  2804                           postinc2	equ	0xFDE
  2805                           postdec2	equ	0xFDD
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8
  2809                           
  2810 ;; *************** function _configure_pwm *****************
  2811 ;; Defined at:
  2812 ;;		line 90 in file "ntc_test.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;		None               void
  2819 ;; Registers used:
  2820 ;;		wreg, status,2
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2826 ;;      Params:         0       0       0       0       0       0       0       0       0
  2827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2829 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text17
  2840  00154E                     __ptext17:
  2841                           	opt stack 0
  2842  00154E                     _configure_pwm:
  2843                           	opt stack 29
  2844                           
  2845                           ;ntc_test.c: 92: CCP1CON = 0b00001100;
  2846                           
  2847                           ;incstack = 0
  2848  00154E  0E0C               	movlw	12
  2849  001550  6EBD               	movwf	4029,c	;volatile
  2850                           
  2851                           ;ntc_test.c: 93: PSTR1CON = 0b00010001;
  2852  001552  0E11               	movlw	17
  2853  001554  6EB9               	movwf	4025,c	;volatile
  2854                           
  2855                           ;ntc_test.c: 94: PR2 = 249;
  2856  001556  0EF9               	movlw	249
  2857  001558  6EBB               	movwf	4027,c	;volatile
  2858                           
  2859                           ;ntc_test.c: 95: ECCP1AS = 0b00000000;
  2860  00155A  0E00               	movlw	0
  2861  00155C  6EB6               	movwf	4022,c	;volatile
  2862                           
  2863                           ;ntc_test.c: 96: CCP1CONbits.CCP1M2 = 1;
  2864  00155E  84BD               	bsf	4029,2,c	;volatile
  2865                           
  2866                           ;ntc_test.c: 97: CCP1CONbits.CCP1M3 = 1;
  2867  001560  86BD               	bsf	4029,3,c	;volatile
  2868                           
  2869                           ;ntc_test.c: 98: T2CON = 0b00001111;
  2870  001562  0E0F               	movlw	15
  2871  001564  6EBA               	movwf	4026,c	;volatile
  2872                           
  2873                           ;ntc_test.c: 100: CCPR1L = 25;
  2874  001566  0E19               	movlw	25
  2875  001568  6EBE               	movwf	4030,c	;volatile
  2876  00156A  0012               	return	
  2877  00156C                     __end_of_configure_pwm:
  2878                           	opt stack 0
  2879                           tblptru	equ	0xFF8
  2880                           tblptrh	equ	0xFF7
  2881                           tblptrl	equ	0xFF6
  2882                           tablat	equ	0xFF5
  2883                           prodh	equ	0xFF4
  2884                           prodl	equ	0xFF3
  2885                           postinc2	equ	0xFDE
  2886                           postdec2	equ	0xFDD
  2887                           fsr2h	equ	0xFDA
  2888                           fsr2l	equ	0xFD9
  2889                           status	equ	0xFD8
  2890                           
  2891 ;; *************** function _configure_adc *****************
  2892 ;; Defined at:
  2893 ;;		line 72 in file "ntc_test.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;		None
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;		None               void
  2900 ;; Registers used:
  2901 ;;		wreg, status,2
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0
  2908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2910 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2911 ;;Total ram usage:        0 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_main
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text18
  2921  00152E                     __ptext18:
  2922                           	opt stack 0
  2923  00152E                     _configure_adc:
  2924                           	opt stack 29
  2925                           
  2926                           ;ntc_test.c: 75: TRISAbits.RA0 = 1;
  2927                           
  2928                           ;incstack = 0
  2929  00152E  8092               	bsf	3986,0,c	;volatile
  2930                           
  2931                           ;ntc_test.c: 77: ANSELAbits.ANSA0 = 1;
  2932  001530  010F               	movlb	15	; () banked
  2933  001532  010F               	movlb	15	; () banked
  2934  001534  815B               	bsf	91,0,b	;volatile
  2935                           
  2936                           ;ntc_test.c: 79: ADCON2bits.ADFM = 1;
  2937  001536  8EC0               	bsf	4032,7,c	;volatile
  2938                           
  2939                           ;ntc_test.c: 80: ADCON2bits.ACQT = 0b111;
  2940  001538  86C0               	bsf	4032,3,c	;volatile
  2941  00153A  88C0               	bsf	4032,4,c	;volatile
  2942  00153C  8AC0               	bsf	4032,5,c	;volatile
  2943                           
  2944                           ; BSR set to: 15
  2945                           ;ntc_test.c: 81: ADCON2bits.ADCS = 0b101;
  2946  00153E  50C0               	movf	4032,w,c	;volatile
  2947  001540  0BF8               	andlw	-8
  2948  001542  0905               	iorlw	5
  2949  001544  6EC0               	movwf	4032,c	;volatile
  2950                           
  2951                           ; BSR set to: 15
  2952                           ;ntc_test.c: 83: ADCON1bits.PVCFG0 = 0;
  2953  001546  94C1               	bcf	4033,2,c	;volatile
  2954                           
  2955                           ; BSR set to: 15
  2956                           ;ntc_test.c: 85: ADCON1bits.NVCFG1 = 0;
  2957  001548  92C1               	bcf	4033,1,c	;volatile
  2958                           
  2959                           ; BSR set to: 15
  2960                           ;ntc_test.c: 87: ADCON0bits.ADON = 1;
  2961  00154A  80C2               	bsf	4034,0,c	;volatile
  2962                           
  2963                           ; BSR set to: 15
  2964  00154C  0012               	return	
  2965  00154E                     __end_of_configure_adc:
  2966                           	opt stack 0
  2967                           tblptru	equ	0xFF8
  2968                           tblptrh	equ	0xFF7
  2969                           tblptrl	equ	0xFF6
  2970                           tablat	equ	0xFF5
  2971                           prodh	equ	0xFF4
  2972                           prodl	equ	0xFF3
  2973                           postinc2	equ	0xFDE
  2974                           postdec2	equ	0xFDD
  2975                           fsr2h	equ	0xFDA
  2976                           fsr2l	equ	0xFD9
  2977                           status	equ	0xFD8
  2978                           tblptru	equ	0xFF8
  2979                           tblptrh	equ	0xFF7
  2980                           tblptrl	equ	0xFF6
  2981                           tablat	equ	0xFF5
  2982                           prodh	equ	0xFF4
  2983                           prodl	equ	0xFF3
  2984                           postinc2	equ	0xFDE
  2985                           postdec2	equ	0xFDD
  2986                           fsr2h	equ	0xFDA
  2987                           fsr2l	equ	0xFD9
  2988                           status	equ	0xFD8
  2989                           
  2990                           	psect	rparam
  2991  0000                     tblptru	equ	0xFF8
  2992                           tblptrh	equ	0xFF7
  2993                           tblptrl	equ	0xFF6
  2994                           tablat	equ	0xFF5
  2995                           prodh	equ	0xFF4
  2996                           prodl	equ	0xFF3
  2997                           postinc2	equ	0xFDE
  2998                           postdec2	equ	0xFDD
  2999                           fsr2h	equ	0xFDA
  3000                           fsr2l	equ	0xFD9
  3001                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    40
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     88      90
    BANK0           160     24      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMRAM

    _main->_set_fan_speed
    _set_fan_speed->___fttol
    ___fttol->___ftmul
    _get_temperature->_log
    _log->_eval_poly
    _eval_poly->___ftmul
    ___ftmul->___ftdiv
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___ftneg->___lwtoft
    ___ftdiv->___ftadd

Critical Paths under _main in BANK0

    _main->_get_temperature

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   42523
                                             85 COMRAM     3     3      0
                      _configure_adc
                      _configure_pwm
                    _get_temperature
                      _set_fan_speed
 ---------------------------------------------------------------------------------
 (1) _set_fan_speed                                       12     9      3    9496
                                             73 COMRAM    12     9      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     218
                                             58 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     302
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _get_temperature                                     27    24      3   33003
                                             75 COMRAM     3     0      3
                                              0 BANK0     24    24      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lwtoft
                             ___wmul
                        _adc_convert
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  5     2      3   18847
                                             70 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul
                           ___lwtoft (ARG)
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                8     3      5     352
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           12     5      7    8411
                                             58 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     543
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3513
                                             43 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                        _adc_convert (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    3985
                                             16 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             5     2      3    2306
                                              8 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _adc_convert                                          4     2      2      86
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             5     2      3    2493
                                              8 COMRAM     5     2      3
                           ___ftpack
                             ___wmul (ARG)
                        _adc_convert (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     173
                                             13 COMRAM     3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2981
                                             28 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2087
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _configure_pwm                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configure_adc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configure_adc
   _configure_pwm
   _get_temperature
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       ___wmul (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       _adc_convert (ARG)
       _frexp (ARG)
     ___ftneg
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
     ___lwtoft
       ___ftpack
       ___wmul (ARG)
       _adc_convert (ARG)
     ___wmul
     _adc_convert
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         _adc_convert (ARG)
         _frexp (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       _eval_poly (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                   _adc_convert (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           _adc_convert (ARG)
           _frexp (ARG)
         ___wmul
       _frexp (ARG)
   _set_fan_speed
     ___awtoft
       ___ftpack
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       ___wmul (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
         _adc_convert (ARG)
       _adc_convert (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
                 _adc_convert (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
               _adc_convert (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
             _adc_convert (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
           _adc_convert (ARG)
         _adc_convert (ARG)
         _frexp (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      18       5       15.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     58      5A       1       94.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72       6        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Sun Nov 13 00:17:24 2016

                         l41 14C0               ?_configure_adc 0001          ___wmul@multiplicand 0003  
             ?_configure_pwm 0001                 ___ftadd@exp1 001C                 ___ftadd@exp2 001B  
               ___ftadd@sign 001A                          l411 0AC6                          l415 0AF2  
                        l426 0BA2                          l435 0BBE                          l445 10E8  
                        l446 110E         __size_of_adc_convert 0030                          l468 1520  
                        _PR2 000FBB                          u511 0F74                          u530 0FAC  
                        u701 0AA4                          u535 0FA4                          u901 0E7C  
                        u921 0EA2                          u691 0A90                          u980 130E  
                        u988 1310                          _log 0C38                 ___ftdiv@cntr 0026  
               ___ftdiv@sign 002B                         l2012 1180                         l2014 11FC  
                       l2030 0C64                         l2120 0DA4                         l2052 1080  
                       l2036 0C86                         l2126 0E0A                         l2058 10A6  
                       l2138 1448                         l1622 13AE                         l1618 137E  
                       l1642 0F8E                         l1628 13DA                         l1660 0FFA  
                       l1830 123A                         l1910 0BDA                         l1902 0B92  
                       l1670 1022                         l1840 1296                         l1832 1258  
                       l1824 1222                         l1920 0C12                         l1904 0B9C  
                       l1672 102E                         l1664 100A                         l1930 0E92  
                       l1674 1032                         l1836 126E                         l1828 1230  
                       l1838 128C                         l1862 0AD4                         l1950 0EEE  
                       l1678 1048                         l1960 0F1A                         l1936 0EB8  
                       l1890 0B56                         l1954 0EFE                         l1892 0B60  
                       l1884 0B34                         l1868 0B00                         l1964 0F2A  
                       l1894 0B68                         l1896 0B70                         l1986 140A  
                       l1998 12E4                         ?_log 0047                         u1031 106A  
                       u1015 0C4A                         u1051 1090                         _main 1432  
               ___ftpack@arg 0001                 ___ftpack@exp 0004                         fsr2h 000FDA  
                       fsr2l 000FD9                         log@x 0047                         prodh 000FF4  
                       prodl 000FF3                         start 0002                __CFG_MCLRE$ON 000000  
               ___ftmul@cntr 0039                 ___ftmul@sign 003A            get_temperature@R1 006C  
          get_temperature@R2 0071            get_temperature@Tn 006E                 ___fttol@exp1 0049  
                      ??_log 004A                 ___fttol@lval 0045                        ?_main 0001  
           __end_of_MAX_TEMP 0807              __end_of___ftadd 0C38              __end_of___ftdiv 1140  
            __end_of___ftneg 152E              __end_of___ftmul 0F64              __end_of___fttol 105A  
                      _T2CON 000FBA             __end_of_MIN_TEMP 080A             ?_get_temperature 004C  
              ___awtoft@sign 000D                        _frexp 12BA                        _errno 0059  
              ___ftpack@sign 0005                        tablat 000FF5                        status 000FD8  
            __initialization 156C                  log@exponent 004A                 __end_of_main 1472  
            ??_configure_adc 0001              ??_configure_pwm 0001           get_temperature@Bth 0073  
         get_temperature@Rth 0063                       ??_main 0056                ___fttol@sign1 0044  
              __activetblptr 000002                       ?_frexp 0001                       _ADRESH 000FC4  
                     _ADRESL 000FC3                       _CCPR1L 000FBE             __end_of___awtoft 1432  
           __end_of___ftpack 12BA               __CFG_WDTEN$OFF 000000             __end_of___lwtoft 1508  
      get_temperature@sensor 004C                       ___ftge 134E                       ___wmul 1472  
                  ??___ftadd 0017                    ??___ftdiv 0023                    ??___ftneg 0011  
                  ??___ftmul 0032                    ??___fttol 003F        ___ftmul@f3_as_product 0036  
      __end_of_set_fan_speed 0E6C                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8             __end_oflog@coeff 0829  
                 __accesstop 0060      __end_of__initialization 1570              __CFG_PBADEN$OFF 000000  
                 ___ftadd@f1 0011                   ___ftadd@f2 0014                   ___ftge@ff1 0001  
                 ___ftge@ff2 0004                 eval_poly@res 0044                   ___ftdiv@f1 001D  
                 ___ftdiv@f2 0020                   ___ftdiv@f3 0027                   ___ftneg@f1 000E  
                 ___awtoft@c 0009                   ___ftmul@f1 002C                   ___ftmul@f2 002F  
                 ___fttol@f1 003B               __pcstackCOMRAM 0001                __end_of_frexp 134E  
                 ___lwtoft@c 0009          get_temperature@Vout 0060          get_temperature@temp 0075  
                    ??_frexp 0006           __size_of_eval_poly 00D2                      ?___ftge 0001  
                    ?___wmul 0001               _ADC_RESOLUTION 0801                ??_adc_convert 0003  
                    _CCP1CON 000FBD                      _ECCP1AS 000FB6                    ?___awtoft 0009  
                  ?___ftpack 0001                    ?___lwtoft 0009  set_fan_speed@new_duty_cycle 0051  
                    _SSP1BUF 000FC9                      __Hparam 0000                      __Lparam 0000  
     __end_of_ADC_RESOLUTION 0804              __size_of___ftge 0090                      ___ftadd 0A80  
                    ___ftdiv 105A                      ___ftneg 1508              __size_of___wmul 003A  
                    ___ftmul 0E6C                      ___fttol 0F64                 __psmallconst 0800  
                    __pcinit 156C                   ??___awtoft 000C                   ??___ftpack 0006  
          __end_of_eval_poly 1212                      __ramtop 0800                      __ptext0 1432  
                    __ptext1 0D66                      __ptext2 0F64                      __ptext3 134E  
                    __ptext4 082A                      __ptext5 0C38                      __ptext6 12BA  
                    __ptext7 1140                      __ptext8 1472                      __ptext9 0E6C  
                 ??___lwtoft 000C                 __size_of_log 012E          __end_of_adc_convert 14DC  
             _MAX_DUTY_CYCLE 080A         end_of_initialization 1570     __size_of_get_temperature 0256  
              __Lmediumconst 0000                      postdec2 000FDD                      postinc2 000FDE  
         set_fan_speed@tTemp 0053        __end_of_configure_adc 154E        __end_of_configure_pwm 156C  
        _get_temperature$997 0066          _get_temperature$998 0069                    _TRISAbits 000F92  
                  _TRISCbits 000F94       __end_of_MAX_DUTY_CYCLE 080C                  _CCP1CONbits 000FBD  
                ___ftdiv@exp 002A                  ___ftmul@exp 0035           adc_convert@channel 0001  
             __end_of___ftge 13DE               __end_of___wmul 14AC                  _adc_convert 14AC  
        start_initialization 156C                   eval_poly@d 003E                   eval_poly@n 0040  
                 eval_poly@x 003B                  __end_of_log 0D66                   frexp@value 0001  
          ??_get_temperature 004F       __size_of_set_fan_speed 0106                     ??___ftge 0007  
                   ??___wmul 0005            __size_of___awtoft 0054            __size_of___ftpack 00A8  
                __pbssCOMRAM 0059            __size_of___lwtoft 002C                __pcstackBANK0 0060  
             _MIN_DUTY_CYCLE 080C                     ?___ftadd 0011                     ?___ftdiv 001D  
                   ?___ftneg 000E                     ?___ftmul 002C                     ?___fttol 003B  
                __smallconst 0800                    _eval_poly 1140                _set_fan_speed 0D66  
     __end_of_MIN_DUTY_CYCLE 080E               __size_of_frexp 0094               ___wmul@product 0005  
                   _MAX_TEMP 0804                     _MIN_TEMP 0807                     _PIR1bits 000F9E  
          set_fan_speed@temp 004A                     _PSTR1CON 000FB9                   _ADCON0bits 000FC2  
                 _ADCON1bits 000FC1                   _ADCON2bits 000FC0            ___wmul@multiplier 0001  
                 ?_eval_poly 003B               ?_set_fan_speed 004A                    frexp@eptr 0004  
                   __Hrparam 0000                     __Lrparam 0000             __size_of___ftadd 01B8  
           __size_of___ftdiv 00E6                 ?_adc_convert 0001             __size_of___ftneg 0026  
           __size_of___ftmul 00F8             __size_of___fttol 00F6                     ___awtoft 13DE  
                   ___ftpack 1212                   _ANSELAbits 000F5B                     ___lwtoft 14DC  
                   __ptext10 0A80                     __ptext11 13DE                     __ptext12 14AC  
                   __ptext13 14DC                     __ptext14 1508                     __ptext15 105A  
                   __ptext16 1212                     __ptext17 154E                     __ptext18 152E  
            _get_temperature 082A       __size_of_configure_adc 0020       __size_of_configure_pwm 001E  
              __size_of_main 0040                     main@temp 0056                     log@coeff 080E  
            ??_set_fan_speed 004D                  ??_eval_poly 0042         __CFG_CPUDIV$NOCLKDIV 000000  
              _configure_adc 152E                _configure_pwm 154E      __end_of_get_temperature 0A80  
         __CFG_FOSC$INTOSCIO 000000  
